{
  "contractName": "StakerGovernor",
  "sourceName": "contracts/governance/StakerGovernor.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IVotesHistory",
          "name": "_staking",
          "type": "address"
        },
        {
          "internalType": "contract TimelockController",
          "name": "_timelock",
          "type": "address"
        },
        {
          "internalType": "contract TokenholderGovernor",
          "name": "tokenholderGovernor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vetoer",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldThresholdNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newThresholdNumerator",
          "type": "uint256"
        }
      ],
      "name": "ProposalThresholdNumeratorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldQuorumNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newQuorumNumerator",
          "type": "uint256"
        }
      ],
      "name": "QuorumNumeratorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldTimelock",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newTimelock",
          "type": "address"
        }
      ],
      "name": "TimelockChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "VotingDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COUNTING_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FRACTION_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VETO_POWER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "cancel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "castVoteWithReason",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "hashProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalEta",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalSnapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThresholdNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "abstainVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "queue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "relay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "setVotingDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "setVotingPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staking",
      "outputs": [
        {
          "internalType": "contract IVotesHistory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum IGovernor.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newNumerator",
          "type": "uint256"
        }
      ],
      "name": "updateProposalThresholdNumerator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newQuorumNumerator",
          "type": "uint256"
        }
      ],
      "name": "updateQuorumNumerator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract TimelockController",
          "name": "newTimelock",
          "type": "address"
        }
      ],
      "name": "updateTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": "0x6101806040523480156200001257600080fd5b5060405162004038380380620040388339810160408190526200003591620007aa565b8284609660196200004b600d6202a30062000812565b6001600160401b031662000064600d620d2f0062000812565b6001600160401b03166040518060400160405280600e81526020016d29ba30b5b2b923b7bb32b93737b960911b81525080620000a5620003b660201b60201c565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060c05261012052505082516200014b9250600191506020840190620006eb565b5062000159905084620003d1565b62000164836200046b565b6200016f82620004fe565b6200017a816200053f565b505050506001600160a01b0316610140526200019681620005d2565b506040518060400160405280601381526020017f546f6b656e686f6c646572476f7665726e6f720000000000000000000000000081525080519060200120826001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156200020e57600080fd5b505afa15801562000223573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200024d91908101906200085d565b8051906020012014620002a75760405162461bcd60e51b815260206004820152601d60248201527f496e636f727265637420546f6b656e686f6c646572476f7665726e6f7200000060448201526064015b60405180910390fd5b816001600160a01b031663d33219b46040518163ffffffff1660e01b815260040160206040518083038186803b158015620002e157600080fd5b505afa158015620002f6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200031c919062000939565b6001600160a01b03166101608190526200036e5760405162461bcd60e51b81526020600482015260126024820152714e6f2074696d656c6f636b20666f756e647360701b60448201526064016200029e565b6200039a7facdbb2d76579a5e307875dde0fbf89862019c7f3c10337a914315beb169c43b1826200063b565b61016051620003ac906000906200063b565b505050506200099d565b6040805180820190915260018152603160f81b602082015290565b612710811115620004255760405162461bcd60e51b815260206004820152601d60248201527f71756f72756d4e756d657261746f72203e2044656e6f6d696e61746f7200000060448201526064016200029e565b600480549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b463399791015b60405180910390a15050565b612710811115620004bf5760405162461bcd60e51b815260206004820152601f60248201527f70726f706f73616c4e756d657261746f72203e2044656e6f6d696e61746f720060448201526064016200029e565b600580549082905560408051828152602081018490527f47036a693fe84b7d8f31616a15f6b3e26b080688ffd77d9425e3a0283a3df26191016200045f565b60065460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600655565b60008111620005915760405162461bcd60e51b815260206004820152601560248201527f566f74696e6720706572696f6420746f6f206c6f77000000000000000000000060448201526064016200029e565b60075460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600755565b600854604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600880546001600160a01b0319166001600160a01b0392909216919091179055565b6200064782826200064b565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000647576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620006a73390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b828054620006f99062000960565b90600052602060002090601f0160209004810192826200071d576000855562000768565b82601f106200073857805160ff191683800117855562000768565b8280016001018555821562000768579182015b82811115620007685782518255916020019190600101906200074b565b50620007769291506200077a565b5090565b5b808211156200077657600081556001016200077b565b6001600160a01b0381168114620007a757600080fd5b50565b60008060008060808587031215620007c157600080fd5b8451620007ce8162000791565b6020860151909450620007e18162000791565b6040860151909350620007f48162000791565b6060860151909250620008078162000791565b939692955090935050565b60006001600160401b03838116806200083b57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200087157600080fd5b82516001600160401b03808211156200088957600080fd5b818501915085601f8301126200089e57600080fd5b815181811115620008b357620008b362000847565b604051601f8201601f19908116603f01168101908382118183101715620008de57620008de62000847565b816040528281528886848701011115620008f757600080fd5b600093505b828410156200091b5784840186015181850187015292850192620008fc565b828411156200092d5760008684830101525b98975050505050505050565b6000602082840312156200094c57600080fd5b8151620009598162000791565b9392505050565b600181811c908216806200097557607f821691505b602082108114156200099757634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051610140516101605161362762000a11600039600061080d015260008181610454015281816117340152611c5801526000611fb30152600061200201526000611fdd01526000611f3601526000611f6001526000611f8a01526136276000f3fe6080604052600436106101f05760003560e01c806301ffc9a71461021857806302a251a31461024d57806306f3f9e61461026c57806306fdde031461028c578063160cbed7146102ae578063248a9ca3146102ce5780632656227d146102ee5780632d63f693146103015780632f2ff15d14610321578063327a71e71461034157806336568abe146103575780633932abb1146103775780633bccf4fd1461038c5780633e4f49e6146103ac57806343859632146103d9578063452115d6146104225780634cf088d914610442578063544ffc9c1461048e57806354fd4d50146104e3578063567813881461050d5780635d6434931461052d57806370b0f660146105435780637629a4ac146105635780637b3c71d3146105835780637d5e81e2146105a35780638834987d146105c357806391d14854146105e5578063a217fddf14610605578063a7713a701461061a578063a890c91014610630578063ab58fb8e14610650578063b58131b014610670578063c01f9e3714610685578063c28bc2fa146106a5578063c59057e4146106c5578063d33219b4146106e5578063d547741f14610703578063dd4e2ba514610723578063deaaa7cc14610769578063e0cf1f9b1461078b578063ea0217cf146107ab578063eb9019d4146107cb578063f8ce560a146107eb57600080fd5b3661021357306101fe61080b565b6001600160a01b03161461021157600080fd5b005b600080fd5b34801561022457600080fd5b50610238610233366004612986565b61082f565b60405190151581526020015b60405180910390f35b34801561025957600080fd5b506007545b604051908152602001610244565b34801561027857600080fd5b506102116102873660046129b0565b610840565b34801561029857600080fd5b506102a161088d565b6040516102449190612a25565b3480156102ba57600080fd5b5061025e6102c9366004612c70565b61091f565b3480156102da57600080fd5b5061025e6102e93660046129b0565b610b3b565b61025e6102fc366004612c70565b610b50565b34801561030d57600080fd5b5061025e61031c3660046129b0565b610c28565b34801561032d57600080fd5b5061021161033c366004612cff565b610c5f565b34801561034d57600080fd5b5061025e60055481565b34801561036357600080fd5b50610211610372366004612cff565b610c81565b34801561038357600080fd5b5060065461025e565b34801561039857600080fd5b5061025e6103a7366004612d45565b610cff565b3480156103b857600080fd5b506103cc6103c73660046129b0565b610d81565b6040516102449190612da9565b3480156103e557600080fd5b506102386103f4366004612cff565b60008281526003602081815260408084206001600160a01b0386168552909201905290205460ff1692915050565b34801561042e57600080fd5b5061025e61043d366004612c70565b610d8c565b34801561044e57600080fd5b506104767f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610244565b34801561049a57600080fd5b506104c86104a93660046129b0565b6000908152600360205260409020805460018201546002909201549092565b60408051938452602084019290925290820152606001610244565b3480156104ef57600080fd5b506040805180820190915260018152603160f81b60208201526102a1565b34801561051957600080fd5b5061025e610528366004612dd1565b610dbd565b34801561053957600080fd5b5061025e61271081565b34801561054f57600080fd5b5061021161055e3660046129b0565b610de6565b34801561056f57600080fd5b5061025e61057e3660046129b0565b610e27565b34801561058f57600080fd5b5061025e61059e366004612e45565b610e4c565b3480156105af57600080fd5b5061025e6105be366004612e9e565b610e94565b3480156105cf57600080fd5b5061025e6000805160206135d283398151915281565b3480156105f157600080fd5b50610238610600366004612cff565b610f0c565b34801561061157600080fd5b5061025e600081565b34801561062657600080fd5b5061025e60045481565b34801561063c57600080fd5b5061021161064b366004612f5e565b610f35565b34801561065c57600080fd5b5061025e61066b3660046129b0565b610f76565b34801561067c57600080fd5b5061025e611020565b34801561069157600080fd5b5061025e6106a03660046129b0565b61102f565b3480156106b157600080fd5b506102116106c0366004612f7b565b61105e565b3480156106d157600080fd5b5061025e6106e0366004612c70565b6110df565b3480156106f157600080fd5b506008546001600160a01b0316610476565b34801561070f57600080fd5b5061021161071e366004612cff565b611119565b34801561072f57600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e908201526102a1565b34801561077557600080fd5b5061025e60008051602061358983398151915281565b34801561079757600080fd5b506102116107a63660046129b0565b611136565b3480156107b757600080fd5b506102116107c63660046129b0565b611177565b3480156107d757600080fd5b5061025e6107e6366004612fbe565b6111b8565b3480156107f757600080fd5b5061025e6108063660046129b0565b6111c4565b7f000000000000000000000000000000000000000000000000000000000000000090565b600061083a826111cf565b92915050565b61084861080b565b6001600160a01b0316336001600160a01b0316146108815760405162461bcd60e51b815260040161087890612fea565b60405180910390fd5b61088a816111f4565b50565b60606001805461089c9061301c565b80601f01602080910402602001604051908101604052809291908181526020018280546108c89061301c565b80156109155780601f106108ea57610100808354040283529160200191610915565b820191906000526020600020905b8154815290600101906020018083116108f857829003601f168201915b5050505050905090565b60008061092e868686866110df565b9050600461093b82610d81565b600781111561094c5761094c612d93565b146109695760405162461bcd60e51b815260040161087890613057565b6008546040805163793d064960e11b815290516000926001600160a01b03169163f27a0c92916004808301926020929190829003018186803b1580156109ae57600080fd5b505afa1580156109c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e69190613098565b60085460405163b1c5f42760e01b81529192506001600160a01b03169063b1c5f42790610a20908a908a908a906000908b9060040161317d565b60206040518083038186803b158015610a3857600080fd5b505afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a709190613098565b6000838152600960205260408082209290925560085491516308f2a0bb60e41b81526001600160a01b0390921691638f2a0bb091610abb918b918b918b91908b9089906004016131cb565b600060405180830381600087803b158015610ad557600080fd5b505af1158015610ae9573d6000803e3d6000fd5b505050507f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda2892828242610b1b9190613239565b604051610b29929190613251565b60405180910390a15095945050505050565b60009081526020819052604090206001015490565b600080610b5f868686866110df565b90506000610b6c82610d81565b90506004816007811115610b8257610b82612d93565b1480610b9f57506005816007811115610b9d57610b9d612d93565b145b610bbb5760405162461bcd60e51b815260040161087890613057565b60008281526002602081905260409182902001805460ff19166001179055517f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90610c099084815260200190565b60405180910390a1610c1e828888888861128c565b5095945050505050565b60008181526002602090815260408083208151928301909152546001600160401b0316908190525b6001600160401b031692915050565b610c6882610b3b565b610c728133611299565b610c7c83836112fd565b505050565b6001600160a01b0381163314610cf15760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610878565b610cfb8282611381565b5050565b60408051600080516020613589833981519152602082015290810186905260ff851660608201526000908190610d5990610d5190608001604051602081830303815290604052805190602001206113e6565b868686611434565b9050610d7687828860405180602001604052806000815250611452565b979650505050505050565b600061083a8261155c565b60006000805160206135d2833981519152610da78133611299565b610db3868686866116c4565b9695505050505050565b600080339050610dde84828560405180602001604052806000815250611452565b949350505050565b610dee61080b565b6001600160a01b0316336001600160a01b031614610e1e5760405162461bcd60e51b815260040161087890612fea565b61088a816116db565b6000612710600554610e388461171b565b610e42919061325f565b61083a919061327e565b600080339050610db386828787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061145292505050565b600080610ea26001436132a0565b9050610ead81610e27565b610eb733836111b8565b1015610f005760405162461bcd60e51b8152602060048201526018602482015277141c9bdc1bdcd85b0818995b1bddc81d1a1c995cda1bdb1960421b6044820152606401610878565b610db3868686866117c5565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b610f3d61080b565b6001600160a01b0316336001600160a01b031614610f6d5760405162461bcd60e51b815260040161087890612fea565b61088a81611a7c565b60085460008281526009602052604080822054905163d45c443560e01b81526004810191909152909182916001600160a01b039091169063d45c44359060240160206040518083038186803b158015610fce57600080fd5b505afa158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110069190613098565b9050806001146110165780611019565b60005b9392505050565b600061102a611ae5565b905090565b60008181526002602090815260408083208151928301909152600101546001600160401b031690819052610c50565b61106661080b565b6001600160a01b0316336001600160a01b0316146110965760405162461bcd60e51b815260040161087890612fea565b6110d88483838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250611af5915050565b5050505050565b6000848484846040516020016110f894939291906132b7565b60408051601f19818403018152919052805160209091012095945050505050565b61112282610b3b565b61112c8133611299565b610c7c8383611381565b61113e61080b565b6001600160a01b0316336001600160a01b03161461116e5760405162461bcd60e51b815260040161087890612fea565b61088a81611b1b565b61117f61080b565b6001600160a01b0316336001600160a01b0316146111af5760405162461bcd60e51b815260040161087890612fea565b61088a81611ba7565b60006110198383611c2f565b600061083a82611ce4565b60006001600160e01b03198216636e665ced60e01b148061083a575061083a82611cf5565b6127108111156112465760405162461bcd60e51b815260206004820152601d60248201527f71756f72756d4e756d657261746f72203e2044656e6f6d696e61746f720000006044820152606401610878565b60048054908290556040517f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997906112809083908590613251565b60405180910390a15050565b6110d88585858585611d1a565b6112a38282610f0c565b610cfb576112bb816001600160a01b03166014611d8e565b6112c6836020611d8e565b6040516020016112d7929190613302565b60408051601f198184030181529082905262461bcd60e51b825261087891600401612a25565b6113078282610f0c565b610cfb576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561133d3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61138b8282610f0c565b15610cfb576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061083a6113f3611f29565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061144587878787612050565b91509150610c1e81612133565b6000848152600260205260408120600161146b87610d81565b600781111561147c5761147c612d93565b146114d55760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610878565b604080516020810190915281546001600160401b0316908190526000906114fd9087906111b8565b905061150b878787846122e9565b856001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48887848860405161154a9493929190613371565b60405180910390a29695505050505050565b60008061156883612467565b9050600481600781111561157e5761157e612d93565b146115895792915050565b600083815260096020526040902054806115a4575092915050565b600854604051632ab0f52960e01b8152600481018390526001600160a01b0390911690632ab0f5299060240160206040518083038186803b1580156115e857600080fd5b505afa1580156115fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116209190613399565b1561162f575060079392505050565b600854604051632c258a9f60e11b8152600481018390526001600160a01b039091169063584b153e9060240160206040518083038186803b15801561167357600080fd5b505afa158015611687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ab9190613399565b156116ba575060059392505050565b5060029392505050565b60006116d285858585612574565b95945050505050565b7fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a936006548260405161170e929190613251565b60405180910390a1600655565b604051632394e7a360e21b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e539e8c9060240160206040518083038186803b15801561177e57600080fd5b505afa158015611792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b691906133bb565b6001600160601b031692915050565b60006117cf611020565b6117de336107e66001436132a0565b101561185e5760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72436f6d7061746962696c697479427261766f3a2070726f7060448201527f6f73657220766f7465732062656c6f772070726f706f73616c207468726573686064820152621bdb1960ea1b608482015260a401610878565b600061187386868686805190602001206110df565b905084518651146118965760405162461bcd60e51b8152600401610878906133e4565b83518651146118b75760405162461bcd60e51b8152600401610878906133e4565b60008651116119035760405162461bcd60e51b815260206004820152601860248201527711dbdd995c9b9bdc8e88195b5c1d1e481c1c9bdc1bdcd85b60421b6044820152606401610878565b600081815260026020908152604091829020825191820190925281546001600160401b031690819052156119835760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b6064820152608401610878565b600061199661199160065490565b612626565b61199f43612626565b6119a99190613425565b905060006119b961199160075490565b6119c39083613425565b90506119cf8383612692565b6119dc6001840182612692565b7f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d516001600160401b03811115611a1a57611a1a612a38565b604051908082528060200260200182016040528015611a4d57816020015b6060815260200190600190039081611a385790505b508c88888e604051611a6799989796959493929190613450565b60405180910390a15091979650505050505050565b600854604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600880546001600160a01b0319166001600160a01b0392909216919091179055565b600061102a61057e6001436132a0565b6060610dde8484846040518060600160405280602981526020016135a9602991396126af565b612710811115611b6d5760405162461bcd60e51b815260206004820152601f60248201527f70726f706f73616c4e756d657261746f72203e2044656e6f6d696e61746f72006044820152606401610878565b60058054908290556040517f47036a693fe84b7d8f31616a15f6b3e26b080688ffd77d9425e3a0283a3df261906112809083908590613251565b60008111611bef5760405162461bcd60e51b8152602060048201526015602482015274566f74696e6720706572696f6420746f6f206c6f7760581b6044820152606401610878565b7f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e882860075482604051611c22929190613251565b60405180910390a1600755565b604051630748d63560e31b81526001600160a01b038381166004830152602482018390526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a89060440160206040518083038186803b158015611c9c57600080fd5b505afa158015611cb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cd491906133bb565b6001600160601b03169392505050565b6000612710600454610e388461171b565b60006001600160e01b0319821663bf26d89760e01b148061083a575061083a826127d5565b60085460405163e38335e560e01b81526001600160a01b039091169063e38335e5903490611d5590889088908890600090899060040161317d565b6000604051808303818588803b158015611d6e57600080fd5b505af1158015611d82573d6000803e3d6000fd5b50505050505050505050565b60606000611d9d83600261325f565b611da8906002613239565b6001600160401b03811115611dbf57611dbf612a38565b6040519080825280601f01601f191660200182016040528015611de9576020820181803683370190505b509050600360fc1b81600081518110611e0457611e0461353f565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611e3357611e3361353f565b60200101906001600160f81b031916908160001a9053506000611e5784600261325f565b611e62906001613239565b90505b6001811115611eda576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611e9657611e9661353f565b1a60f81b828281518110611eac57611eac61353f565b60200101906001600160f81b031916908160001a90535060049490941c93611ed381613555565b9050611e65565b5083156110195760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610878565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611f8257507f000000000000000000000000000000000000000000000000000000000000000046145b15611fac57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561207d575060009050600361212a565b8460ff16601b1415801561209557508460ff16601c14155b156120a6575060009050600461212a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156120fa573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166121235760006001925092505061212a565b9150600090505b94509492505050565b600081600481111561214757612147612d93565b14156121505750565b600181600481111561216457612164612d93565b14156121ad5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610878565b60028160048111156121c1576121c1612d93565b141561220f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610878565b600381600481111561222357612223612d93565b141561227c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610878565b600481600481111561229057612290612d93565b141561088a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610878565b60008481526003602081815260408084206001600160a01b03881685529283019091529091205460ff16156123705760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c726561604482015266191e4818d85cdd60ca1b6064820152608401610878565b6001600160a01b03841660009081526003820160205260408120805460ff1916600117905560ff168360ff1614156123c157818160000160008282546123b69190613239565b909155506110d89050565b60ff8316600114156123e157818160010160008282546123b69190613239565b60ff83166002141561240157818160020160008282546123b69190613239565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616044820152746c756520666f7220656e756d20566f74655479706560581b6064820152608401610878565b600081815260026020819052604082209081015460ff161561248c5750600792915050565b6002810154610100900460ff16156124a75750600292915050565b60006124b284610c28565b9050806125015760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c2069640000006044820152606401610878565b438110612512575060009392505050565b600061251d8561102f565b905043811061253157506001949350505050565b61253a8561280a565b8015612559575060008581526003602052604090208054600190910154115b1561256957506004949350505050565b506003949350505050565b60008061258386868686612841565b600081815260096020526040902054909150156116d2576008546000828152600960205260409081902054905163c4d252f560e01b81526001600160a01b039092169163c4d252f5916125dc9160040190815260200190565b600060405180830381600087803b1580156125f657600080fd5b505af115801561260a573d6000803e3d6000fd5b5050506000828152600960205260408120555095945050505050565b60006001600160401b0382111561268e5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b6064820152608401610878565b5090565b81546001600160401b0319166001600160401b0391909116179055565b6060824710156127105760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610878565b6001600160a01b0385163b6127675760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610878565b600080866001600160a01b03168587604051612783919061356c565b60006040518083038185875af1925050503d80600081146127c0576040519150601f19603f3d011682016040523d82523d6000602084013e6127c5565b606091505b5091509150610d7682828661294d565b60006001600160e01b03198216637965db0b60e01b148061083a57506301ffc9a760e01b6001600160e01b031983161461083a565b60008181526003602052604081206002810154600182015461282c9190613239565b61283861080685610c28565b11159392505050565b600080612850868686866110df565b9050600061285d82610d81565b9050600281600781111561287357612873612d93565b141580156128935750600681600781111561289057612890612d93565b14155b80156128b1575060078160078111156128ae576128ae612d93565b14155b6128fd5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a2070726f706f73616c206e6f74206163746976650000006044820152606401610878565b60008281526002602081905260409182902001805461ff001916610100179055517f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c90610b299084815260200190565b6060831561295c575081611019565b82511561296c5782518084602001fd5b8160405162461bcd60e51b81526004016108789190612a25565b60006020828403121561299857600080fd5b81356001600160e01b03198116811461101957600080fd5b6000602082840312156129c257600080fd5b5035919050565b60005b838110156129e45781810151838201526020016129cc565b838111156129f3576000848401525b50505050565b60008151808452612a118160208601602086016129c9565b601f01601f19169290920160200192915050565b60208152600061101960208301846129f9565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612a7657612a76612a38565b604052919050565b60006001600160401b03821115612a9757612a97612a38565b5060051b60200190565b6001600160a01b038116811461088a57600080fd5b600082601f830112612ac757600080fd5b81356020612adc612ad783612a7e565b612a4e565b82815260059290921b84018101918181019086841115612afb57600080fd5b8286015b84811015612b1f578035612b1281612aa1565b8352918301918301612aff565b509695505050505050565b600082601f830112612b3b57600080fd5b81356020612b4b612ad783612a7e565b82815260059290921b84018101918181019086841115612b6a57600080fd5b8286015b84811015612b1f5780358352918301918301612b6e565b60006001600160401b03831115612b9e57612b9e612a38565b612bb1601f8401601f1916602001612a4e565b9050828152838383011115612bc557600080fd5b828260208301376000602084830101529392505050565b600082601f830112612bed57600080fd5b81356020612bfd612ad783612a7e565b82815260059290921b84018101918181019086841115612c1c57600080fd5b8286015b84811015612b1f5780356001600160401b03811115612c3f5760008081fd5b8701603f81018913612c515760008081fd5b612c62898683013560408401612b85565b845250918301918301612c20565b60008060008060808587031215612c8657600080fd5b84356001600160401b0380821115612c9d57600080fd5b612ca988838901612ab6565b95506020870135915080821115612cbf57600080fd5b612ccb88838901612b2a565b94506040870135915080821115612ce157600080fd5b50612cee87828801612bdc565b949793965093946060013593505050565b60008060408385031215612d1257600080fd5b823591506020830135612d2481612aa1565b809150509250929050565b803560ff81168114612d4057600080fd5b919050565b600080600080600060a08688031215612d5d57600080fd5b85359450612d6d60208701612d2f565b9350612d7b60408701612d2f565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b6020810160088310612dcb57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215612de457600080fd5b82359150612df460208401612d2f565b90509250929050565b60008083601f840112612e0f57600080fd5b5081356001600160401b03811115612e2657600080fd5b602083019150836020828501011115612e3e57600080fd5b9250929050565b60008060008060608587031215612e5b57600080fd5b84359350612e6b60208601612d2f565b925060408501356001600160401b03811115612e8657600080fd5b612e9287828801612dfd565b95989497509550505050565b60008060008060808587031215612eb457600080fd5b84356001600160401b0380821115612ecb57600080fd5b612ed788838901612ab6565b95506020870135915080821115612eed57600080fd5b612ef988838901612b2a565b94506040870135915080821115612f0f57600080fd5b612f1b88838901612bdc565b93506060870135915080821115612f3157600080fd5b508501601f81018713612f4357600080fd5b612f5287823560208401612b85565b91505092959194509250565b600060208284031215612f7057600080fd5b813561101981612aa1565b60008060008060608587031215612f9157600080fd5b8435612f9c81612aa1565b93506020850135925060408501356001600160401b03811115612e8657600080fd5b60008060408385031215612fd157600080fd5b8235612fdc81612aa1565b946020939093013593505050565b602080825260189082015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b604082015260600190565b600181811c9082168061303057607f821691505b6020821081141561305157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526021908201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756040820152601b60fa1b606082015260800190565b6000602082840312156130aa57600080fd5b5051919050565b600081518084526020808501945080840160005b838110156130ea5781516001600160a01b0316875295820195908201906001016130c5565b509495945050505050565b600081518084526020808501945080840160005b838110156130ea57815187529582019590820190600101613109565b600082825180855260208086019550808260051b84010181860160005b8481101561317057601f1986840301895261315e8383516129f9565b98840198925090830190600101613142565b5090979650505050505050565b60a08152600061319060a08301886130b1565b82810360208401526131a281886130f5565b905082810360408401526131b68187613125565b60608401959095525050608001529392505050565b60c0815260006131de60c08301896130b1565b82810360208401526131f081896130f5565b905082810360408401526132048188613125565b60608401969096525050608081019290925260a0909101529392505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561324c5761324c613223565b500190565b918252602082015260400190565b600081600019048311821515161561327957613279613223565b500290565b60008261329b57634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156132b2576132b2613223565b500390565b6080815260006132ca60808301876130b1565b82810360208401526132dc81876130f5565b905082810360408401526132f08186613125565b91505082606083015295945050505050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516133348160178501602088016129c9565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516133658160288401602088016129c9565b01602801949350505050565b84815260ff84166020820152826040820152608060608201526000610db360808301846129f9565b6000602082840312156133ab57600080fd5b8151801515811461101957600080fd5b6000602082840312156133cd57600080fd5b81516001600160601b038116811461101957600080fd5b60208082526021908201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746040820152600d60fb1b606082015260800190565b60006001600160401b0382811684821680830382111561344757613447613223565b01949350505050565b60006101208b8352602060018060a01b038c16818501528160408501526134798285018c6130b1565b9150838203606085015261348d828b6130f5565b915083820360808501528189518084528284019150828160051b850101838c0160005b838110156134de57601f198784030185526134cc8383516129f9565b948601949250908501906001016134b0565b505086810360a08801526134f2818c613125565b94505050505061350d60c08401876001600160401b03169052565b6001600160401b03851660e084015282810361010084015261352f81856129f9565b9c9b505050505050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008161356457613564613223565b506000190190565b6000825161357e8184602087016129c9565b919091019291505056fe150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564acdbb2d76579a5e307875dde0fbf89862019c7f3c10337a914315beb169c43b1a2646970667358221220c94bf9ecb716b80c529ea7379656462c5333cc973e2b1b03281dd4ee55add66264736f6c63430008090033",
  "deployedBytecode": "",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "COUNTING_MODE()": {
        "details": "See {IGovernor-COUNTING_MODE}."
      },
      "castVote(uint256,uint8)": {
        "details": "See {IGovernor-castVote}."
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "details": "See {IGovernor-castVoteBySig}."
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "details": "See {IGovernor-castVoteWithReason}."
      },
      "execute(address[],uint256[],bytes[],bytes32)": {
        "details": "See {IGovernor-execute}."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "hasVoted(uint256,address)": {
        "details": "See {IGovernor-hasVoted}."
      },
      "hashProposal(address[],uint256[],bytes[],bytes32)": {
        "details": "See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts."
      },
      "name()": {
        "details": "See {IGovernor-name}."
      },
      "proposalDeadline(uint256)": {
        "details": "See {IGovernor-proposalDeadline}."
      },
      "proposalEta(uint256)": {
        "details": "Public accessor to check the eta of a queued proposal"
      },
      "proposalSnapshot(uint256)": {
        "details": "See {IGovernor-proposalSnapshot}."
      },
      "proposalThreshold(uint256)": {
        "params": {
          "blockNumber": "The block number to get the proposal threshold at"
        }
      },
      "proposalVotes(uint256)": {
        "details": "Accessor to the internal vote counts."
      },
      "queue(address[],uint256[],bytes[],bytes32)": {
        "details": "Function to queue a proposal to the timelock."
      },
      "relay(address,uint256,bytes)": {
        "details": "Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "timelock()": {
        "details": "Public accessor to check the address of the timelock"
      },
      "updateTimelock(address)": {
        "details": "Public endpoint to update the underlying timelock instance. Restricted to the timelock itself, so updates must be proposed, scheduled, and executed through governance proposals. CAUTION: It is not recommended to change the timelock while there are other queued governance proposals."
      },
      "version()": {
        "details": "See {IGovernor-version}."
      },
      "votingDelay()": {
        "details": "Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to leave time for users to buy voting power, of delegate it, before the voting of a proposal starts."
      },
      "votingPeriod()": {
        "details": "Delay, in number of blocks, between the vote start and vote ends. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay."
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_10754": {
          "entryPoint": null,
          "id": 10754,
          "parameterSlots": 4,
          "returnSlots": 0
        },
        "@_11259": {
          "entryPoint": null,
          "id": 11259,
          "parameterSlots": 4,
          "returnSlots": 0
        },
        "@_11508": {
          "entryPoint": null,
          "id": 11508,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_1665": {
          "entryPoint": null,
          "id": 1665,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_3898": {
          "entryPoint": null,
          "id": 3898,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_8370": {
          "entryPoint": null,
          "id": 8370,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_buildDomainSeparator_8426": {
          "entryPoint": null,
          "id": 8426,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@_grantRole_1376": {
          "entryPoint": 1611,
          "id": 1376,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_msgSender_7321": {
          "entryPoint": null,
          "id": 7321,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_setVotingDelay_10941": {
          "entryPoint": 1278,
          "id": 10941,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_setVotingPeriod_10963": {
          "entryPoint": 1343,
          "id": 10963,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_setupRole_1316": {
          "entryPoint": 1595,
          "id": 1316,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_updateProposalThresholdNumerator_10926": {
          "entryPoint": 1131,
          "id": 10926,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_updateQuorumNumerator_10900": {
          "entryPoint": 977,
          "id": 10900,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_updateTimelock_4238": {
          "entryPoint": 1490,
          "id": 4238,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@hasRole_1181": {
          "entryPoint": null,
          "id": 1181,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@version_1724": {
          "entryPoint": 950,
          "id": 1724,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_address_fromMemory": {
          "entryPoint": 2361,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_contract$_IVotesHistory_$10991t_contract$_TimelockController_$3456t_contract$_TokenholderGovernor_$11598t_address_fromMemory": {
          "entryPoint": 1962,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 4
        },
        "abi_decode_tuple_t_string_memory_ptr_fromMemory": {
          "entryPoint": 2141,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 6,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_0fcf173f1bde133af2b1bcbd64cbceefebae51775d6ea3d3574428ce6085d7c1__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_45d5930a4426e9d2d1b4f1f6409a1e566e48968b077a6aeae252991ffd79df7f__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_a64000c09bcc896d8b2adceb9571e34dc548b6385d5291f0ff78341396a1053e__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_df63b873e5102dc9bca5ed5a4c06a134bb0c19a432d0cbc10461d981a63c14f5__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_e84265d2a5d3f6ca86fd941d30caebf388f369c09ed9ed71a8847ac6c78dce61__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "checked_div_t_uint64": {
          "entryPoint": 2066,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "extract_byte_array_length": {
          "entryPoint": 2400,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "panic_error_0x41": {
          "entryPoint": 2119,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "validator_revert_contract_IVotesHistory": {
          "entryPoint": 1937,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:5970:80",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:80",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "74:86:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "138:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "147:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "150:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "140:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "140:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "140:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "97:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "108:5:80"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "123:3:80",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "128:1:80",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "119:3:80"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "119:11:80"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "132:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "115:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "115:19:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "104:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "104:31:80"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "94:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "94:42:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "87:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "87:50:80"
                      },
                      "nodeType": "YulIf",
                      "src": "84:70:80"
                    }
                  ]
                },
                "name": "validator_revert_contract_IVotesHistory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "63:5:80",
                    "type": ""
                  }
                ],
                "src": "14:146:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "376:582:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "423:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "432:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "435:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "425:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "425:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "425:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "397:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "406:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "393:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "393:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "389:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "389:33:80"
                      },
                      "nodeType": "YulIf",
                      "src": "386:53:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "448:29:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "467:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "461:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "461:16:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "452:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "526:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_contract_IVotesHistory",
                          "nodeType": "YulIdentifier",
                          "src": "486:39:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "486:46:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "486:46:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "541:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "551:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "541:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "565:40:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "590:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "601:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "586:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "586:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "580:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "580:25:80"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "569:7:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "654:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_contract_IVotesHistory",
                          "nodeType": "YulIdentifier",
                          "src": "614:39:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "614:48:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "614:48:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "671:17:80",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "681:7:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "671:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "697:40:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "722:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "733:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "718:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "718:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "712:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "712:25:80"
                      },
                      "variables": [
                        {
                          "name": "value_2",
                          "nodeType": "YulTypedName",
                          "src": "701:7:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "786:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_contract_IVotesHistory",
                          "nodeType": "YulIdentifier",
                          "src": "746:39:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "746:48:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "746:48:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "803:17:80",
                      "value": {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "813:7:80"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "803:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "829:40:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "854:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "865:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "850:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "850:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "844:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "844:25:80"
                      },
                      "variables": [
                        {
                          "name": "value_3",
                          "nodeType": "YulTypedName",
                          "src": "833:7:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_3",
                            "nodeType": "YulIdentifier",
                            "src": "918:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_contract_IVotesHistory",
                          "nodeType": "YulIdentifier",
                          "src": "878:39:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "878:48:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "878:48:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "935:17:80",
                      "value": {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "945:7:80"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "935:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_contract$_IVotesHistory_$10991t_contract$_TimelockController_$3456t_contract$_TokenholderGovernor_$11598t_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "318:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "329:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "341:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "349:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "357:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "365:6:80",
                    "type": ""
                  }
                ],
                "src": "165:793:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1008:251:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1018:28:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1036:2:80",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1040:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1032:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1032:10:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1044:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1028:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1028:18:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "1022:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1055:21:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1070:1:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1073:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1066:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:10:80"
                      },
                      "variables": [
                        {
                          "name": "y_1",
                          "nodeType": "YulTypedName",
                          "src": "1059:3:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1108:111:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1129:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1136:3:80",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1141:10:80",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "1132:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1132:20:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1122:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1122:31:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1122:31:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1173:1:80",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1176:4:80",
                                  "type": "",
                                  "value": "0x12"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1166:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1166:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1166:15:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1201:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1204:4:80",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1194:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1194:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1194:15:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "1095:3:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1088:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1088:11:80"
                      },
                      "nodeType": "YulIf",
                      "src": "1085:134:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1228:25:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "1241:1:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1244:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1237:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1237:10:80"
                          },
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "1249:3:80"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "1233:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1233:20:80"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "1228:1:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_div_t_uint64",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "993:1:80",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "996:1:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "1002:1:80",
                    "type": ""
                  }
                ],
                "src": "963:296:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1296:95:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1313:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1320:3:80",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1325:10:80",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1316:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1316:20:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1306:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1306:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1306:31:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1353:1:80",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1356:4:80",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1346:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1346:15:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1377:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1380:4:80",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "1370:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1370:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1370:15:80"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "1264:127:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1487:996:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1497:12:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1507:2:80",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "1501:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1554:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1563:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1566:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1556:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1556:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1556:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1529:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1538:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1525:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1525:23:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1550:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1521:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1521:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "1518:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1579:30:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1599:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1593:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1593:16:80"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1583:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1618:28:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1636:2:80",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1640:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1632:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1632:10:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1644:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1628:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1628:18:80"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "1622:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1673:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1682:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1685:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1675:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1675:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1675:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1661:6:80"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1669:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1658:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1658:14:80"
                      },
                      "nodeType": "YulIf",
                      "src": "1655:34:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1698:32:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1712:9:80"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1723:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1708:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1708:22:80"
                      },
                      "variables": [
                        {
                          "name": "_3",
                          "nodeType": "YulTypedName",
                          "src": "1702:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1778:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1787:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1790:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1780:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1780:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1780:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1757:2:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1761:4:80",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1753:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1753:13:80"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1768:7:80"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1749:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1749:27:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1742:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1742:35:80"
                      },
                      "nodeType": "YulIf",
                      "src": "1739:55:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1803:19:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1819:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1813:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1813:9:80"
                      },
                      "variables": [
                        {
                          "name": "_4",
                          "nodeType": "YulTypedName",
                          "src": "1807:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1845:22:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "1847:16:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1847:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1847:18:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1837:2:80"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1841:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1834:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1834:10:80"
                      },
                      "nodeType": "YulIf",
                      "src": "1831:36:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1876:17:80",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1890:2:80",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1886:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1886:7:80"
                      },
                      "variables": [
                        {
                          "name": "_5",
                          "nodeType": "YulTypedName",
                          "src": "1880:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1902:23:80",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1922:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1916:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1916:9:80"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "1906:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1934:71:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1956:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "1980:2:80"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1984:4:80",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1976:3:80"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1976:13:80"
                                      },
                                      {
                                        "name": "_5",
                                        "nodeType": "YulIdentifier",
                                        "src": "1991:2:80"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1972:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1972:22:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1996:2:80",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1968:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1968:31:80"
                              },
                              {
                                "name": "_5",
                                "nodeType": "YulIdentifier",
                                "src": "2001:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1964:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1964:40:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1952:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1952:53:80"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "1938:10:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2064:22:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "2066:16:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2066:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2066:18:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "2023:10:80"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2035:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "2020:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2020:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "2043:10:80"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2055:6:80"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2040:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2040:22:80"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "2017:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2017:46:80"
                      },
                      "nodeType": "YulIf",
                      "src": "2014:72:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2102:2:80",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2106:10:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2095:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2095:22:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2095:22:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2133:6:80"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2141:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2126:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2126:18:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2126:18:80"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2190:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2199:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2202:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2192:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2192:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2192:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2167:2:80"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "2171:2:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2163:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2163:11:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2176:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2159:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2159:20:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2181:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2156:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2156:33:80"
                      },
                      "nodeType": "YulIf",
                      "src": "2153:53:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2215:10:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2224:1:80",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "2219:1:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2280:83:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "memPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2309:6:80"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2317:1:80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2305:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2305:14:80"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2321:2:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2301:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2301:23:80"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "2340:2:80"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "2344:1:80"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2336:3:80"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2336:10:80"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2348:2:80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2332:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2332:19:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "2326:5:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2326:26:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2294:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2294:59:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2294:59:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2245:1:80"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2248:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2242:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2242:9:80"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "2252:19:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2254:15:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2263:1:80"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2266:2:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2259:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2259:10:80"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "2254:1:80"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "2238:3:80",
                        "statements": []
                      },
                      "src": "2234:129:80"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2393:59:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "memPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2422:6:80"
                                        },
                                        {
                                          "name": "_4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2430:2:80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2418:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2418:15:80"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2435:2:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2414:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2414:24:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2440:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2407:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2407:35:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2407:35:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2378:1:80"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2381:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2375:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2375:9:80"
                      },
                      "nodeType": "YulIf",
                      "src": "2372:80:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2461:16:80",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2471:6:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2461:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1453:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1464:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1476:6:80",
                    "type": ""
                  }
                ],
                "src": "1396:1087:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2662:179:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2679:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2690:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2672:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2672:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2672:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2713:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2724:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2709:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2709:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2729:2:80",
                            "type": "",
                            "value": "29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2702:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2702:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2702:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2752:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2763:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2748:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2748:18:80"
                          },
                          {
                            "hexValue": "496e636f727265637420546f6b656e686f6c646572476f7665726e6f72",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2768:31:80",
                            "type": "",
                            "value": "Incorrect TokenholderGovernor"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2741:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2741:59:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2741:59:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2809:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2821:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2832:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2817:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2817:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2809:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_df63b873e5102dc9bca5ed5a4c06a134bb0c19a432d0cbc10461d981a63c14f5__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2639:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2653:4:80",
                    "type": ""
                  }
                ],
                "src": "2488:353:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2927:185:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2973:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2982:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2985:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2975:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2975:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2975:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2948:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2957:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2944:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2944:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2969:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2940:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2940:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "2937:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2998:29:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3017:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3011:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3011:16:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "3002:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3076:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_contract_IVotesHistory",
                          "nodeType": "YulIdentifier",
                          "src": "3036:39:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3036:46:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3036:46:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3091:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3101:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3091:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2893:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2904:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2916:6:80",
                    "type": ""
                  }
                ],
                "src": "2846:266:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3291:168:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3308:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3319:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3301:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3301:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3301:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3342:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3353:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3338:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3338:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3358:2:80",
                            "type": "",
                            "value": "18"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3331:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3331:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3331:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3381:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3392:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3377:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3377:18:80"
                          },
                          {
                            "hexValue": "4e6f2074696d656c6f636b20666f756e6473",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3397:20:80",
                            "type": "",
                            "value": "No timelock founds"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3370:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3370:48:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3370:48:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3427:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3439:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3450:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3435:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3435:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3427:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_e84265d2a5d3f6ca86fd941d30caebf388f369c09ed9ed71a8847ac6c78dce61__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3268:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3282:4:80",
                    "type": ""
                  }
                ],
                "src": "3117:342:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3677:276:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3687:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3699:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3710:3:80",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3695:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3695:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3687:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3730:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3741:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3723:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3723:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3723:25:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3768:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3779:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3764:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3764:18:80"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3784:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3757:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3757:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3757:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3811:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3822:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3807:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3807:18:80"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "3827:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3800:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3800:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3800:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3854:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3865:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3850:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3850:18:80"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "3870:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3843:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3843:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3843:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3897:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3908:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3893:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3893:19:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value4",
                                "nodeType": "YulIdentifier",
                                "src": "3918:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3934:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3939:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3930:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3930:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3943:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3926:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3926:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3914:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3914:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3886:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3886:61:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3886:61:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3614:9:80",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "3625:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "3633:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "3641:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "3649:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3657:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3668:4:80",
                    "type": ""
                  }
                ],
                "src": "3464:489:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4132:179:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4149:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4160:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4142:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4142:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4142:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4183:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4194:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4179:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4179:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4199:2:80",
                            "type": "",
                            "value": "29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4172:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4172:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4172:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4222:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4233:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4218:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4218:18:80"
                          },
                          {
                            "hexValue": "71756f72756d4e756d657261746f72203e2044656e6f6d696e61746f72",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4238:31:80",
                            "type": "",
                            "value": "quorumNumerator > Denominator"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4211:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4211:59:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4211:59:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4279:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4291:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4302:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4287:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4287:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4279:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_a64000c09bcc896d8b2adceb9571e34dc548b6385d5291f0ff78341396a1053e__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4109:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4123:4:80",
                    "type": ""
                  }
                ],
                "src": "3958:353:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4445:119:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4455:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4467:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4478:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4463:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4463:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4455:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4497:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4508:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4490:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4490:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4490:25:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4535:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4546:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4531:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4531:18:80"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4551:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4524:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4524:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4524:34:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4406:9:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4417:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4425:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4436:4:80",
                    "type": ""
                  }
                ],
                "src": "4316:248:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4743:181:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4760:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4771:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4753:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4753:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4753:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4794:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4805:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4790:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4790:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4810:2:80",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4783:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4783:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4783:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4833:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4844:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4829:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4829:18:80"
                          },
                          {
                            "hexValue": "70726f706f73616c4e756d657261746f72203e2044656e6f6d696e61746f72",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4849:33:80",
                            "type": "",
                            "value": "proposalNumerator > Denominator"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4822:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4822:61:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4822:61:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4892:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4904:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4915:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4900:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4900:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4892:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_0fcf173f1bde133af2b1bcbd64cbceefebae51775d6ea3d3574428ce6085d7c1__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4720:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4734:4:80",
                    "type": ""
                  }
                ],
                "src": "4569:355:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5103:171:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5120:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5131:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5113:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5113:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5113:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5154:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5165:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5150:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5150:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5170:2:80",
                            "type": "",
                            "value": "21"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5143:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5143:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5143:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5193:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5204:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5189:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5189:18:80"
                          },
                          {
                            "hexValue": "566f74696e6720706572696f6420746f6f206c6f77",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5209:23:80",
                            "type": "",
                            "value": "Voting period too low"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5182:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5182:51:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5182:51:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5242:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5254:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5265:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5250:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5250:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5242:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_45d5930a4426e9d2d1b4f1f6409a1e566e48968b077a6aeae252991ffd79df7f__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5080:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5094:4:80",
                    "type": ""
                  }
                ],
                "src": "4929:345:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5408:175:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5418:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5430:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5441:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5426:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5426:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5418:4:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5453:29:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5471:3:80",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5476:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5467:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5467:11:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5480:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5463:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5463:19:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "5457:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5498:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5513:6:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "5521:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5509:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5509:15:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5491:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5491:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5491:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5545:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5556:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5541:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5541:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5565:6:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "5573:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5561:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5561:15:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5534:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5534:43:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5534:43:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5369:9:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "5380:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5388:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5399:4:80",
                    "type": ""
                  }
                ],
                "src": "5279:304:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5643:325:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5653:22:80",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5667:1:80",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "5670:4:80"
                          }
                        ],
                        "functionName": {
                          "name": "shr",
                          "nodeType": "YulIdentifier",
                          "src": "5663:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5663:12:80"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "5653:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5684:38:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "5714:4:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5720:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5710:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5710:12:80"
                      },
                      "variables": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulTypedName",
                          "src": "5688:18:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5761:31:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "5763:27:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5777:6:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5785:4:80",
                                  "type": "",
                                  "value": "0x7f"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "5773:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5773:17:80"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "5763:6:80"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "5741:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5734:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5734:26:80"
                      },
                      "nodeType": "YulIf",
                      "src": "5731:61:80"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5851:111:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5872:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5879:3:80",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5884:10:80",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "5875:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5875:20:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5865:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5865:31:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5865:31:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5916:1:80",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5919:4:80",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5909:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5909:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5909:15:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5944:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5947:4:80",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5937:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5937:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5937:15:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "5807:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "5830:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5838:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "5827:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5827:14:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5804:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5804:38:80"
                      },
                      "nodeType": "YulIf",
                      "src": "5801:161:80"
                    }
                  ]
                },
                "name": "extract_byte_array_length",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "5623:4:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "5632:6:80",
                    "type": ""
                  }
                ],
                "src": "5588:380:80"
              }
            ]
          },
          "contents": "{\n    { }\n    function validator_revert_contract_IVotesHistory(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IVotesHistory_$10991t_contract$_TimelockController_$3456t_contract$_TokenholderGovernor_$11598t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IVotesHistory(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_IVotesHistory(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_IVotesHistory(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_contract_IVotesHistory(value_3)\n        value3 := value_3\n    }\n    function checked_div_t_uint64(x, y) -> r\n    {\n        let _1 := sub(shl(64, 1), 1)\n        let y_1 := and(y, _1)\n        if iszero(y_1)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(and(x, _1), y_1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_df63b873e5102dc9bca5ed5a4c06a134bb0c19a432d0cbc10461d981a63c14f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Incorrect TokenholderGovernor\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IVotesHistory(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e84265d2a5d3f6ca86fd941d30caebf388f369c09ed9ed71a8847ac6c78dce61__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"No timelock founds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_a64000c09bcc896d8b2adceb9571e34dc548b6385d5291f0ff78341396a1053e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"quorumNumerator > Denominator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_0fcf173f1bde133af2b1bcbd64cbceefebae51775d6ea3d3574428ce6085d7c1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"proposalNumerator > Denominator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45d5930a4426e9d2d1b4f1f6409a1e566e48968b077a6aeae252991ffd79df7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Voting period too low\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
          "id": 80,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH2 0x180 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4038 CODESIZE SUB DUP1 PUSH3 0x4038 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x7AA JUMP JUMPDEST DUP3 DUP5 PUSH1 0x96 PUSH1 0x19 PUSH3 0x4B PUSH1 0xD PUSH3 0x2A300 PUSH3 0x812 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH3 0x64 PUSH1 0xD PUSH3 0xD2F00 PUSH3 0x812 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x29BA30B5B2B923B7BB32B93737B9 PUSH1 0x91 SHL DUP2 MSTORE POP DUP1 PUSH3 0xA5 PUSH3 0x3B6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP4 DUP4 ADD KECCAK256 PUSH1 0xE0 DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 SWAP1 MSTORE CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 DUP9 ADD DUP2 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS DUP2 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 0xC0 ADD SWAP1 MSTORE DUP1 MLOAD SWAP5 ADD SWAP4 SWAP1 SWAP4 KECCAK256 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x80 MSTORE ADDRESS PUSH1 0xC0 MSTORE PUSH2 0x120 MSTORE POP POP DUP3 MLOAD PUSH3 0x14B SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x6EB JUMP JUMPDEST POP PUSH3 0x159 SWAP1 POP DUP5 PUSH3 0x3D1 JUMP JUMPDEST PUSH3 0x164 DUP4 PUSH3 0x46B JUMP JUMPDEST PUSH3 0x16F DUP3 PUSH3 0x4FE JUMP JUMPDEST PUSH3 0x17A DUP2 PUSH3 0x53F JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x140 MSTORE PUSH3 0x196 DUP2 PUSH3 0x5D2 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F6B656E686F6C646572476F7665726E6F7200000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x223 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH3 0x24D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH3 0x85D JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH3 0x2A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F727265637420546F6B656E686F6C646572476F7665726E6F72000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD33219B4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x31C SWAP2 SWAP1 PUSH3 0x939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x160 DUP2 SWAP1 MSTORE PUSH3 0x36E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2074696D656C6F636B20666F756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x29E JUMP JUMPDEST PUSH3 0x39A PUSH32 0xACDBB2D76579A5E307875DDE0FBF89862019C7F3C10337A914315BEB169C43B1 DUP3 PUSH3 0x63B JUMP JUMPDEST PUSH2 0x160 MLOAD PUSH3 0x3AC SWAP1 PUSH1 0x0 SWAP1 PUSH3 0x63B JUMP JUMPDEST POP POP POP POP PUSH3 0x99D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH3 0x425 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x71756F72756D4E756D657261746F72203E2044656E6F6D696E61746F72000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x29E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x553476BF02EF2726E8CE5CED78D63E26E602E4A2257B1F559418E24B4633997 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH3 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x70726F706F73616C4E756D657261746F72203E2044656E6F6D696E61746F7200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x29E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x47036A693FE84B7D8F31616A15F6B3E26B080688FFD77D9425E3A0283A3DF261 SWAP2 ADD PUSH3 0x45F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xC565B045403DC03C2EEA82B81A0465EDAD9E2E7FC4D97E11421C209DA93D7A93 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH3 0x591 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E6720706572696F6420746F6F206C6F770000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x29E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x7E3F7F0708A84DE9203036ABAA450DCCC85AD5FF52F78C170F3EDB55CF5E8828 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x8F74EA46EF7894F65EABFB5E6E695DE773A000B47C529AB559178069B226401 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x647 DUP3 DUP3 PUSH3 0x64B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x647 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x6A7 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6F9 SWAP1 PUSH3 0x960 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x71D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x768 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x738 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x768 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x768 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x768 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x74B JUMP JUMPDEST POP PUSH3 0x776 SWAP3 SWAP2 POP PUSH3 0x77A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x776 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x77B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x7A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x7CE DUP2 PUSH3 0x791 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH3 0x7E1 DUP2 PUSH3 0x791 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0x7F4 DUP2 PUSH3 0x791 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x807 DUP2 PUSH3 0x791 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 DUP2 AND DUP1 PUSH3 0x83B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x89E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x8B3 JUMPI PUSH3 0x8B3 PUSH3 0x847 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x8DE JUMPI PUSH3 0x8DE PUSH3 0x847 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x8F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x91B JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x8FC JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x92D JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x959 DUP2 PUSH3 0x791 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x975 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x997 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x3627 PUSH3 0xA11 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x80D ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x454 ADD MSTORE DUP2 DUP2 PUSH2 0x1734 ADD MSTORE PUSH2 0x1C58 ADD MSTORE PUSH1 0x0 PUSH2 0x1FB3 ADD MSTORE PUSH1 0x0 PUSH2 0x2002 ADD MSTORE PUSH1 0x0 PUSH2 0x1FDD ADD MSTORE PUSH1 0x0 PUSH2 0x1F36 ADD MSTORE PUSH1 0x0 PUSH2 0x1F60 ADD MSTORE PUSH1 0x0 PUSH2 0x1F8A ADD MSTORE PUSH2 0x3627 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x6F3F9E6 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x160CBED7 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x2656227D EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x2D63F693 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x327A71E7 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x3BCCF4FD EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x3E4F49E6 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x43859632 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x452115D6 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x4CF088D9 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x544FFC9C EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x56781388 EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0x5D643493 EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0x70B0F660 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0x7629A4AC EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x7B3C71D3 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0x7D5E81E2 EQ PUSH2 0x5A3 JUMPI DUP1 PUSH4 0x8834987D EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0xA7713A70 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xA890C910 EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0xAB58FB8E EQ PUSH2 0x650 JUMPI DUP1 PUSH4 0xB58131B0 EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0xC01F9E37 EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0xC28BC2FA EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0xC59057E4 EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0xD33219B4 EQ PUSH2 0x6E5 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0xDD4E2BA5 EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0xDEAAA7CC EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0xE0CF1F9B EQ PUSH2 0x78B JUMPI DUP1 PUSH4 0xEA0217CF EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0xEB9019D4 EQ PUSH2 0x7CB JUMPI DUP1 PUSH4 0xF8CE560A EQ PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x213 JUMPI ADDRESS PUSH2 0x1FE PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x244 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0x91F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x25E PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0xC28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x2CFF JUMP JUMPDEST PUSH2 0xC5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x372 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CFF JUMP JUMPDEST PUSH2 0xC81 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x25E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D45 JUMP JUMPDEST PUSH2 0xCFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x2DA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CFF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0xD8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x476 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x244 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH2 0x4A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x244 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DD1 JUMP JUMPDEST PUSH2 0xDBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x2710 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0xDE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x57E CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0xE27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x59E CALLDATASIZE PUSH1 0x4 PUSH2 0x2E45 JUMP JUMPDEST PUSH2 0xE4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2E9E JUMP JUMPDEST PUSH2 0xE94 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35D2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x600 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CFF JUMP JUMPDEST PUSH2 0xF0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x64B CALLDATASIZE PUSH1 0x4 PUSH2 0x2F5E JUMP JUMPDEST PUSH2 0xF35 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x66B CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0xF76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x1020 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x6A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0x102F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x6C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F7B JUMP JUMPDEST PUSH2 0x105E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x6E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0x10DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x476 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x71E CALLDATASIZE PUSH1 0x4 PUSH2 0x2CFF JUMP JUMPDEST PUSH2 0x1119 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x737570706F72743D627261766F2671756F72756D3D666F722C6162737461696E SWAP1 DUP3 ADD MSTORE PUSH2 0x2A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3589 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x7A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0x1136 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x7C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0x1177 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x7E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FBE JUMP JUMPDEST PUSH2 0x11B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x806 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0x11C4 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83A DUP3 PUSH2 0x11CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x848 PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x11F4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x89C SWAP1 PUSH2 0x301C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8C8 SWAP1 PUSH2 0x301C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x915 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x915 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x92E DUP7 DUP7 DUP7 DUP7 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH2 0x93B DUP3 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x94C JUMPI PUSH2 0x94C PUSH2 0x2D93 JUMP JUMPDEST EQ PUSH2 0x969 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x3057 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x793D0649 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xF27A0C92 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E6 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB1C5F427 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB1C5F427 SWAP1 PUSH2 0xA20 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x0 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x317D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA70 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x8 SLOAD SWAP2 MLOAD PUSH4 0x8F2A0BB PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x8F2A0BB0 SWAP2 PUSH2 0xABB SWAP2 DUP12 SWAP2 DUP12 SWAP2 DUP12 SWAP2 SWAP1 DUP12 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x31CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x9A2E42FD6722813D69113E7D0079D3D940171428DF7373DF9C7F7617CFDA2892 DUP3 DUP3 TIMESTAMP PUSH2 0xB1B SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB29 SWAP3 SWAP2 SWAP1 PUSH2 0x3251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB5F DUP7 DUP7 DUP7 DUP7 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB6C DUP3 PUSH2 0xD81 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xB82 JUMPI PUSH2 0xB82 PUSH2 0x2D93 JUMP JUMPDEST EQ DUP1 PUSH2 0xB9F JUMPI POP PUSH1 0x5 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xB9D JUMPI PUSH2 0xB9D PUSH2 0x2D93 JUMP JUMPDEST EQ JUMPDEST PUSH2 0xBBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x3057 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F SWAP1 PUSH2 0xC09 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xC1E DUP3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x128C JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD SWAP3 DUP4 ADD SWAP1 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 DUP2 SWAP1 MSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC68 DUP3 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0xC72 DUP2 CALLER PUSH2 0x1299 JUMP JUMPDEST PUSH2 0xC7C DUP4 DUP4 PUSH2 0x12FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xCF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH2 0xCFB DUP3 DUP3 PUSH2 0x1381 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3589 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xFF DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0xD59 SWAP1 PUSH2 0xD51 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x13E6 JUMP JUMPDEST DUP7 DUP7 DUP7 PUSH2 0x1434 JUMP JUMPDEST SWAP1 POP PUSH2 0xD76 DUP8 DUP3 DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1452 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83A DUP3 PUSH2 0x155C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35D2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xDA7 DUP2 CALLER PUSH2 0x1299 JUMP JUMPDEST PUSH2 0xDB3 DUP7 DUP7 DUP7 DUP7 PUSH2 0x16C4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH2 0xDDE DUP5 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1452 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xDEE PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x16DB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x5 SLOAD PUSH2 0xE38 DUP5 PUSH2 0x171B JUMP JUMPDEST PUSH2 0xE42 SWAP2 SWAP1 PUSH2 0x325F JUMP JUMPDEST PUSH2 0x83A SWAP2 SWAP1 PUSH2 0x327E JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH2 0xDB3 DUP7 DUP3 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1452 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEA2 PUSH1 0x1 NUMBER PUSH2 0x32A0 JUMP JUMPDEST SWAP1 POP PUSH2 0xEAD DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0xEB7 CALLER DUP4 PUSH2 0x11B8 JUMP JUMPDEST LT ISZERO PUSH2 0xF00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x141C9BDC1BDCD85B0818995B1BDDC81D1A1C995CDA1BDB19 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH2 0xDB3 DUP7 DUP7 DUP7 DUP7 PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xF3D PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xD45C4435 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD45C4435 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1006 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 EQ PUSH2 0x1016 JUMPI DUP1 PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102A PUSH2 0x1AE5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD SWAP3 DUP4 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 DUP2 SWAP1 MSTORE PUSH2 0xC50 JUMP JUMPDEST PUSH2 0x1066 PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x10D8 DUP5 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP9 SWAP3 POP PUSH2 0x1AF5 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1122 DUP3 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x112C DUP2 CALLER PUSH2 0x1299 JUMP JUMPDEST PUSH2 0xC7C DUP4 DUP4 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0x113E PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x116E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x1B1B JUMP JUMPDEST PUSH2 0x117F PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x11AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1019 DUP4 DUP4 PUSH2 0x1C2F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83A DUP3 PUSH2 0x1CE4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6E665CED PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x83A JUMPI POP PUSH2 0x83A DUP3 PUSH2 0x1CF5 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x1246 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x71756F72756D4E756D657261746F72203E2044656E6F6D696E61746F72000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x553476BF02EF2726E8CE5CED78D63E26E602E4A2257B1F559418E24B4633997 SWAP1 PUSH2 0x1280 SWAP1 DUP4 SWAP1 DUP6 SWAP1 PUSH2 0x3251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x10D8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0x12A3 DUP3 DUP3 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xCFB JUMPI PUSH2 0x12BB DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x12C6 DUP4 PUSH1 0x20 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12D7 SWAP3 SWAP2 SWAP1 PUSH2 0x3302 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x878 SWAP2 PUSH1 0x4 ADD PUSH2 0x2A25 JUMP JUMPDEST PUSH2 0x1307 DUP3 DUP3 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xCFB JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x133D CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x138B DUP3 DUP3 PUSH2 0xF0C JUMP JUMPDEST ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83A PUSH2 0x13F3 PUSH2 0x1F29 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1445 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2050 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xC1E DUP2 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH2 0x146B DUP8 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x147C JUMPI PUSH2 0x147C PUSH2 0x2D93 JUMP JUMPDEST EQ PUSH2 0x14D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20766F7465206E6F742063757272656E746C7920616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x697665 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x14FD SWAP1 DUP8 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x150B DUP8 DUP8 DUP8 DUP5 PUSH2 0x22E9 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB8E138887D0AA13BAB447E82DE9D5C1777041ECD21CA36BA824FF1E6C07DDDA4 DUP9 DUP8 DUP5 DUP9 PUSH1 0x40 MLOAD PUSH2 0x154A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1568 DUP4 PUSH2 0x2467 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x157E JUMPI PUSH2 0x157E PUSH2 0x2D93 JUMP JUMPDEST EQ PUSH2 0x1589 JUMPI SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x15A4 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2AB0F529 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2AB0F529 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1620 SWAP2 SWAP1 PUSH2 0x3399 JUMP JUMPDEST ISZERO PUSH2 0x162F JUMPI POP PUSH1 0x7 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2C258A9F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x584B153E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1687 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16AB SWAP2 SWAP1 PUSH2 0x3399 JUMP JUMPDEST ISZERO PUSH2 0x16BA JUMPI POP PUSH1 0x5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x2 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D2 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2574 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0xC565B045403DC03C2EEA82B81A0465EDAD9E2E7FC4D97E11421C209DA93D7A93 PUSH1 0x6 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x170E SWAP3 SWAP2 SWAP1 PUSH2 0x3251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2394E7A3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8E539E8C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x177E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1792 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17B6 SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CF PUSH2 0x1020 JUMP JUMPDEST PUSH2 0x17DE CALLER PUSH2 0x7E6 PUSH1 0x1 NUMBER PUSH2 0x32A0 JUMP JUMPDEST LT ISZERO PUSH2 0x185E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F72436F6D7061746962696C697479427261766F3A2070726F70 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F73657220766F7465732062656C6F772070726F706F73616C20746872657368 PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x1BDB19 PUSH1 0xEA SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1873 DUP7 DUP7 DUP7 DUP7 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP DUP5 MLOAD DUP7 MLOAD EQ PUSH2 0x1896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST DUP4 MLOAD DUP7 MLOAD EQ PUSH2 0x18B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST PUSH1 0x0 DUP7 MLOAD GT PUSH2 0x1903 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x11DBDD995C9B9BDC8E88195B5C1D1E481C1C9BDC1BDCD85B PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD SWAP2 DUP3 ADD SWAP1 SWAP3 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 DUP2 SWAP1 MSTORE ISZERO PUSH2 0x1983 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A2070726F706F73616C20616C7265616479206578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1996 PUSH2 0x1991 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x199F NUMBER PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x19A9 SWAP2 SWAP1 PUSH2 0x3425 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19B9 PUSH2 0x1991 PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19C3 SWAP1 DUP4 PUSH2 0x3425 JUMP JUMPDEST SWAP1 POP PUSH2 0x19CF DUP4 DUP4 PUSH2 0x2692 JUMP JUMPDEST PUSH2 0x19DC PUSH1 0x1 DUP5 ADD DUP3 PUSH2 0x2692 JUMP JUMPDEST PUSH32 0x7D84A6263AE0D98D3329BD7B46BB4E8D6F98CD35A7ADB45C274C8B7FD5EBD5E0 DUP5 CALLER DUP12 DUP12 DUP14 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A1A JUMPI PUSH2 0x1A1A PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A4D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1A38 JUMPI SWAP1 POP JUMPDEST POP DUP13 DUP9 DUP9 DUP15 PUSH1 0x40 MLOAD PUSH2 0x1A67 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x8F74EA46EF7894F65EABFB5E6E695DE773A000B47C529AB559178069B226401 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102A PUSH2 0x57E PUSH1 0x1 NUMBER PUSH2 0x32A0 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDDE DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x35A9 PUSH1 0x29 SWAP2 CODECOPY PUSH2 0x26AF JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x1B6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x70726F706F73616C4E756D657261746F72203E2044656E6F6D696E61746F7200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x47036A693FE84B7D8F31616A15F6B3E26B080688FFD77D9425E3A0283A3DF261 SWAP1 PUSH2 0x1280 SWAP1 DUP4 SWAP1 DUP6 SWAP1 PUSH2 0x3251 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1BEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x566F74696E6720706572696F6420746F6F206C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH32 0x7E3F7F0708A84DE9203036ABAA450DCCC85AD5FF52F78C170F3EDB55CF5E8828 PUSH1 0x7 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x1C22 SWAP3 SWAP2 SWAP1 PUSH2 0x3251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x748D635 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x3A46B1A8 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CD4 SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x4 SLOAD PUSH2 0xE38 DUP5 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xBF26D897 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x83A JUMPI POP PUSH2 0x83A DUP3 PUSH2 0x27D5 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE38335E5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE38335E5 SWAP1 CALLVALUE SWAP1 PUSH2 0x1D55 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x0 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x317D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1D9D DUP4 PUSH1 0x2 PUSH2 0x325F JUMP JUMPDEST PUSH2 0x1DA8 SWAP1 PUSH1 0x2 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1DBF JUMPI PUSH2 0x1DBF PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DE9 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1E04 JUMPI PUSH2 0x1E04 PUSH2 0x353F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1E33 JUMPI PUSH2 0x1E33 PUSH2 0x353F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1E57 DUP5 PUSH1 0x2 PUSH2 0x325F JUMP JUMPDEST PUSH2 0x1E62 SWAP1 PUSH1 0x1 PUSH2 0x3239 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1EDA JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1E96 JUMPI PUSH2 0x1E96 PUSH2 0x353F JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1EAC JUMPI PUSH2 0x1EAC PUSH2 0x353F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1ED3 DUP2 PUSH2 0x3555 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E65 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1019 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x1F82 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1FAC JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP3 DUP5 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 GT ISZERO PUSH2 0x207D JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x212A JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x2095 JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x20A6 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2123 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x212A JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2147 JUMPI PUSH2 0x2147 PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO PUSH2 0x2150 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2164 JUMPI PUSH2 0x2164 PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO PUSH2 0x21AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x45434453413A20696E76616C6964207369676E6174757265 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x21C1 JUMPI PUSH2 0x21C1 PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO PUSH2 0x220F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2223 JUMPI PUSH2 0x2223 PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO PUSH2 0x227C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2290 JUMPI PUSH2 0x2290 PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP6 MSTORE SWAP3 DUP4 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2370 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F72566F74696E6753696D706C653A20766F746520616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x191E4818D85CDD PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xFF AND DUP4 PUSH1 0xFF AND EQ ISZERO PUSH2 0x23C1 JUMPI DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x23B6 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x10D8 SWAP1 POP JUMP JUMPDEST PUSH1 0xFF DUP4 AND PUSH1 0x1 EQ ISZERO PUSH2 0x23E1 JUMPI DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x23B6 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0xFF DUP4 AND PUSH1 0x2 EQ ISZERO PUSH2 0x2401 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x23B6 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F72566F74696E6753696D706C653A20696E76616C6964207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6C756520666F7220656E756D20566F746554797065 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x248C JUMPI POP PUSH1 0x7 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x24A7 JUMPI POP PUSH1 0x2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24B2 DUP5 PUSH2 0xC28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2501 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20756E6B6E6F776E2070726F706F73616C206964000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST NUMBER DUP2 LT PUSH2 0x2512 JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251D DUP6 PUSH2 0x102F JUMP JUMPDEST SWAP1 POP NUMBER DUP2 LT PUSH2 0x2531 JUMPI POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x253A DUP6 PUSH2 0x280A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2559 JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD GT JUMPDEST ISZERO PUSH2 0x2569 JUMPI POP PUSH1 0x4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH1 0x3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2583 DUP7 DUP7 DUP7 DUP7 PUSH2 0x2841 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x16D2 JUMPI PUSH1 0x8 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xC4D252F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xC4D252F5 SWAP2 PUSH2 0x25DC SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x260A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x268E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2036 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x342062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2710 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2767 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2783 SWAP2 SWAP1 PUSH2 0x356C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x27C0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x27C5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xD76 DUP3 DUP3 DUP7 PUSH2 0x294D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x83A JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x83A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x282C SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH2 0x2838 PUSH2 0x806 DUP6 PUSH2 0xC28 JUMP JUMPDEST GT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2850 DUP7 DUP7 DUP7 DUP7 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x285D DUP3 PUSH2 0xD81 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2873 JUMPI PUSH2 0x2873 PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x2893 JUMPI POP PUSH1 0x6 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2890 JUMPI PUSH2 0x2890 PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x28B1 JUMPI POP PUSH1 0x7 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x28AE JUMPI PUSH2 0x28AE PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO JUMPDEST PUSH2 0x28FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A2070726F706F73616C206E6F7420616374697665000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE MLOAD PUSH32 0x789CF55BE980739DAD1D0699B93B58E806B51C9D96619BFA8FE0A28ABAA7B30C SWAP1 PUSH2 0xB29 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x295C JUMPI POP DUP2 PUSH2 0x1019 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x296C JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP2 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29E4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x29CC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x29F3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2A11 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x29C9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1019 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x29F9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2A76 JUMPI PUSH2 0x2A76 PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2A97 JUMPI PUSH2 0x2A97 PUSH2 0x2A38 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x88A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2AC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2ADC PUSH2 0x2AD7 DUP4 PUSH2 0x2A7E JUMP JUMPDEST PUSH2 0x2A4E JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2B1F JUMPI DUP1 CALLDATALOAD PUSH2 0x2B12 DUP2 PUSH2 0x2AA1 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2AFF JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2B4B PUSH2 0x2AD7 DUP4 PUSH2 0x2A7E JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2B6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2B1F JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2B6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x2B9E JUMPI PUSH2 0x2B9E PUSH2 0x2A38 JUMP JUMPDEST PUSH2 0x2BB1 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x2A4E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x2BC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2BED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2BFD PUSH2 0x2AD7 DUP4 PUSH2 0x2A7E JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2C1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2B1F JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C3F JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 ADD PUSH1 0x3F DUP2 ADD DUP10 SGT PUSH2 0x2C51 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2C62 DUP10 DUP7 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP5 ADD PUSH2 0x2B85 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2C9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CA9 DUP9 DUP4 DUP10 ADD PUSH2 0x2AB6 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CCB DUP9 DUP4 DUP10 ADD PUSH2 0x2B2A JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CEE DUP8 DUP3 DUP9 ADD PUSH2 0x2BDC JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2D24 DUP2 PUSH2 0x2AA1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2D40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2D5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x2D6D PUSH1 0x20 DUP8 ADD PUSH2 0x2D2F JUMP JUMPDEST SWAP4 POP PUSH2 0x2D7B PUSH1 0x40 DUP8 ADD PUSH2 0x2D2F JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x8 DUP4 LT PUSH2 0x2DCB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2DF4 PUSH1 0x20 DUP5 ADD PUSH2 0x2D2F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2E0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2E3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x2E6B PUSH1 0x20 DUP7 ADD PUSH2 0x2D2F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E92 DUP8 DUP3 DUP9 ADD PUSH2 0x2DFD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2EB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2ECB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2ED7 DUP9 DUP4 DUP10 ADD PUSH2 0x2AB6 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EF9 DUP9 DUP4 DUP10 ADD PUSH2 0x2B2A JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2F0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F1B DUP9 DUP4 DUP10 ADD PUSH2 0x2BDC JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2F31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2F43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F52 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2B85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1019 DUP2 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2F91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2F9C DUP2 PUSH2 0x2AA1 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2FDC DUP2 PUSH2 0x2AA1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH24 0x476F7665726E6F723A206F6E6C79476F7665726E616E6365 PUSH1 0x40 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3030 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3051 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A2070726F706F73616C206E6F7420737563636573736675 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30EA JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x30C5 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30EA JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3109 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP DUP1 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD DUP2 DUP7 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3170 JUMPI PUSH1 0x1F NOT DUP7 DUP5 SUB ADD DUP10 MSTORE PUSH2 0x315E DUP4 DUP4 MLOAD PUSH2 0x29F9 JUMP JUMPDEST SWAP9 DUP5 ADD SWAP9 SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3142 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3190 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x30B1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x31A2 DUP2 DUP9 PUSH2 0x30F5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x31B6 DUP2 DUP8 PUSH2 0x3125 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x31DE PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x30B1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x31F0 DUP2 DUP10 PUSH2 0x30F5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x3204 DUP2 DUP9 PUSH2 0x3125 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP PUSH1 0x80 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x324C JUMPI PUSH2 0x324C PUSH2 0x3223 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3279 JUMPI PUSH2 0x3279 PUSH2 0x3223 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x329B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x32B2 JUMPI PUSH2 0x32B2 PUSH2 0x3223 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x32CA PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x30B1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x32DC DUP2 DUP8 PUSH2 0x30F5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x32F0 DUP2 DUP7 PUSH2 0x3125 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x3334 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x29C9 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x3365 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x29C9 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xDB3 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20696E76616C69642070726F706F73616C206C656E6774 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xFB SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP2 AND DUP5 DUP3 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x3447 JUMPI PUSH2 0x3447 PUSH2 0x3223 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP12 DUP4 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP13 AND DUP2 DUP6 ADD MSTORE DUP2 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x3479 DUP3 DUP6 ADD DUP13 PUSH2 0x30B1 JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x348D DUP3 DUP12 PUSH2 0x30F5 JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE DUP2 DUP10 MLOAD DUP1 DUP5 MSTORE DUP3 DUP5 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP6 ADD ADD DUP4 DUP13 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34DE JUMPI PUSH1 0x1F NOT DUP8 DUP5 SUB ADD DUP6 MSTORE PUSH2 0x34CC DUP4 DUP4 MLOAD PUSH2 0x29F9 JUMP JUMPDEST SWAP5 DUP7 ADD SWAP5 SWAP3 POP SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x34B0 JUMP JUMPDEST POP POP DUP7 DUP2 SUB PUSH1 0xA0 DUP9 ADD MSTORE PUSH2 0x34F2 DUP2 DUP13 PUSH2 0x3125 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x350D PUSH1 0xC0 DUP5 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0xE0 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x352F DUP2 DUP6 PUSH2 0x29F9 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3564 JUMPI PUSH2 0x3564 PUSH2 0x3223 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x357E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x29C9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID ISZERO MUL EQ 0xD7 0x4D MSIZE 0xB7 0xD1 0xE9 0xC PUSH20 0xFC22EF3D991DD0A76B046543D4D80AB92D2A5032 DUP16 COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2063616C6C KECCAK256 PUSH24 0x6974682076616C7565206661696C6564ACDBB2D76579A5E3 SMOD DUP8 0x5D 0xDE 0xF 0xBF DUP10 DUP7 KECCAK256 NOT 0xC7 RETURN 0xC1 SUB CALLDATACOPY 0xA9 EQ BALANCE JUMPDEST 0xEB AND SWAP13 NUMBER 0xB1 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0x4B 0xF9 0xEC 0xB7 AND 0xB8 0xC MSTORE SWAP15 0xA7 CALLDATACOPY SWAP7 JUMP CHAINID 0x2C MSTORE8 CALLER 0xCC SWAP8 RETURNDATACOPY 0x2B SHL SUB 0x28 SAR 0xD4 0xEE SSTORE 0xAD 0xD6 PUSH3 0x64736F PUSH13 0x63430008090033000000000000 ",
      "sourceMap": "1455:4638:55:-:0;;;2158:872;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2618:9;2576:8;1640:3;1752:2;1856:38;1610:2:52;1856:6:55;:38;:::i;:::-;-1:-1:-1;;;;;2482:20:55;1957:39;1610:2:52;1957:7:55;:39;:::i;:::-;-1:-1:-1;;;;;2516:21:55;1840:88:9;;;;;;;;;;;;;-1:-1:-1;;;1840:88:9;;;1880:5;1887:9;:7;;;:9;;:::i;:::-;2541:22:40;;;;;;;;;;2597:25;;;;;;2778;;;;2813:31;;;;2873:13;2854:32;;;;-1:-1:-1;3633:73:40;;2651:117;3633:73;;;3723:25:80;;;3764:18;;;3757:34;;;-1:-1:-1;3807:18:80;;3800:34;;;3850:18;;;3843:34;;;;3700:4:40;3893:19:80;;;3886:61;3633:73:40;;;;;;;;;;3695:19:80;;3633:73:40;;3623:84;;;;;;;;2541:22;;2597:25;;2896:85;;3014:4;2991:28;;3029:21;;-1:-1:-1;;1908:13:9;;::::1;::::0;-1:-1:-1;1908:5:9::1;::::0;-1:-1:-1;1908:13:9::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2347:44:52;;-1:-1:-1;2370:20:52;2347:22;:44::i;:::-;2401:57;2435:22;2401:33;:57::i;:::-;2468:35;2484:18;2468:15;:35::i;:::-;2513:37;2530:19;2513:16;:37::i;:::-;-1:-1:-1;;;;;;;;;1379:25:56;;;1780:32:14;1796:15;1780;:32::i;:::-;1722:97;2738:28:55::4;;;;;;;;;;;;;;;;::::0;2728:39:::4;;;;;;2680:19;-1:-1:-1::0;;;;;2680:24:55::4;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;::::0;;::::4;-1:-1:-1::0;;2680:26:55::4;::::0;::::4;;::::0;::::4;::::0;;;::::4;::::0;::::4;:::i;:::-;2664:44;;;;;;:103;2643:179;;;::::0;-1:-1:-1;;;2643:179:55;;2690:2:80;2643:179:55::4;::::0;::::4;2672:21:80::0;2729:2;2709:18;;;2702:30;2768:31;2748:18;;;2741:59;2817:18;;2643:179:55::4;;;;;;;;;2842:19;-1:-1:-1::0;;;;;2842:28:55::4;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2832:40:55::4;;::::0;;;2882:52:::4;;;::::0;-1:-1:-1;;;2882:52:55;;3319:2:80;2882:52:55::4;::::0;::::4;3301:21:80::0;3358:2;3338:18;;;3331:30;-1:-1:-1;;;3377:18:80;;;3370:48;3435:18;;2882:52:55::4;3117:342:80::0;2882:52:55::4;2944:30;2048:62;2967:6:::0;2944:10:::4;:30::i;:::-;3015:7;::::0;2984:39:::4;::::0;2072:4:6::4;::::0;2984:10:55::4;:39::i;:::-;2158:872:::0;;;;1455:4638;;2655:99:9;2737:10;;;;;;;;;;;;-1:-1:-1;;;2737:10:9;;;;;2655:99::o;5151:411:52:-;1542:5;5279:18;:42;;5258:118;;;;-1:-1:-1;;;5258:118:52;;4160:2:80;5258:118:52;;;4142:21:80;4199:2;4179:18;;;4172:30;4238:31;4218:18;;;4211:59;4287:18;;5258:118:52;3958:353:80;5258:118:52;5416:15;;;5441:36;;;;5493:62;;;4490:25:80;;;4546:2;4531:18;;4524:34;;;5493:62:52;;4463:18:80;5493:62:52;;;;;;;;5248:314;5151:411;:::o;5568:441::-;1542:5;5706:17;:41;;5685:119;;;;-1:-1:-1;;;5685:119:52;;4771:2:80;5685:119:52;;;4753:21:80;4810:2;4790:18;;;4783:30;4849:33;4829:18;;;4822:61;4900:18;;5685:119:52;4569:355:80;5685:119:52;5838:26;;;5874:46;;;;5936:66;;;4490:25:80;;;4546:2;4531:18;;4524:34;;;5936:66:52;;4463:18:80;5936:66:52;4316:248:80;6015:171:52;6111:12;;6096:44;;;4490:25:80;;;4546:2;4531:18;;4524:34;;;6096:44:52;;4463:18:80;6096:44:52;;;;;;;6150:12;:29;6015:171::o;6192:298::-;6353:1;6335:15;:19;6327:53;;;;-1:-1:-1;;;6327:53:52;;5131:2:80;6327:53:52;;;5113:21:80;5170:2;5150:18;;;5143:30;5209:23;5189:18;;;5182:51;5250:18;;6327:53:52;4929:345:80;6327:53:52;6411:13;;6395:47;;;4490:25:80;;;4546:2;4531:18;;4524:34;;;6395:47:52;;4463:18:80;6395:47:52;;;;;;;6452:13;:31;6192:298::o;6134:176:14:-;6237:9;;6214:56;;;-1:-1:-1;;;;;6237:9:14;;;5491:34:80;;5561:15;;;5556:2;5541:18;;5534:43;6214:56:14;;5426:18:80;6214:56:14;;;;;;;6280:9;:23;;-1:-1:-1;;;;;;6280:23:14;-1:-1:-1;;;;;6280:23:14;;;;;;;;;;6134:176::o;6257:110:6:-;6335:25;6346:4;6352:7;6335:10;:25::i;:::-;6257:110;;:::o;6861:233::-;2995:4;3018:12;;;;;;;;;;;-1:-1:-1;;;;;3018:29:6;;;;;;;;;;;;6939:149;;6982:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6982:29:6;;;;;;;;;:36;;-1:-1:-1;;6982:36:6;7014:4;6982:36;;;7064:12;719:10:34;;640:96;7064:12:6;-1:-1:-1;;;;;7037:40:6;7055:7;-1:-1:-1;;;;;7037:40:6;7049:4;7037:40;;;;;;;;;;6861:233;;:::o;1455:4638:55:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1455:4638:55;;;-1:-1:-1;1455:4638:55;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:146:80;-1:-1:-1;;;;;104:31:80;;94:42;;84:70;;150:1;147;140:12;84:70;14:146;:::o;165:793::-;341:6;349;357;365;418:3;406:9;397:7;393:23;389:33;386:53;;;435:1;432;425:12;386:53;467:9;461:16;486:46;526:5;486:46;:::i;:::-;601:2;586:18;;580:25;551:5;;-1:-1:-1;614:48:80;580:25;614:48;:::i;:::-;733:2;718:18;;712:25;681:7;;-1:-1:-1;746:48:80;712:25;746:48;:::i;:::-;865:2;850:18;;844:25;813:7;;-1:-1:-1;878:48:80;844:25;878:48;:::i;:::-;165:793;;;;-1:-1:-1;165:793:80;;-1:-1:-1;;165:793:80:o;963:296::-;1002:1;-1:-1:-1;;;;;1066:10:80;;;;1085:134;;1141:10;1136:3;1132:20;1129:1;1122:31;1176:4;1173:1;1166:15;1204:4;1201:1;1194:15;1085:134;1237:10;;1233:20;;;;;963:296;-1:-1:-1;;963:296:80:o;1264:127::-;1325:10;1320:3;1316:20;1313:1;1306:31;1356:4;1353:1;1346:15;1380:4;1377:1;1370:15;1396:1087;1476:6;1507:2;1550;1538:9;1529:7;1525:23;1521:32;1518:52;;;1566:1;1563;1556:12;1518:52;1593:16;;-1:-1:-1;;;;;1658:14:80;;;1655:34;;;1685:1;1682;1675:12;1655:34;1723:6;1712:9;1708:22;1698:32;;1768:7;1761:4;1757:2;1753:13;1749:27;1739:55;;1790:1;1787;1780:12;1739:55;1819:2;1813:9;1841:2;1837;1834:10;1831:36;;;1847:18;;:::i;:::-;1922:2;1916:9;1890:2;1976:13;;-1:-1:-1;;1972:22:80;;;1996:2;1968:31;1964:40;1952:53;;;2020:18;;;2040:22;;;2017:46;2014:72;;;2066:18;;:::i;:::-;2106:10;2102:2;2095:22;2141:2;2133:6;2126:18;2181:7;2176:2;2171;2167;2163:11;2159:20;2156:33;2153:53;;;2202:1;2199;2192:12;2153:53;2224:1;2215:10;;2234:129;2248:2;2245:1;2242:9;2234:129;;;2336:10;;;2332:19;;2326:26;2305:14;;;2301:23;;2294:59;2259:10;;;;2234:129;;;2381:2;2378:1;2375:9;2372:80;;;2440:1;2435:2;2430;2422:6;2418:15;2414:24;2407:35;2372:80;2471:6;1396:1087;-1:-1:-1;;;;;;;;1396:1087:80:o;2846:266::-;2916:6;2969:2;2957:9;2948:7;2944:23;2940:32;2937:52;;;2985:1;2982;2975:12;2937:52;3017:9;3011:16;3036:46;3076:5;3036:46;:::i;:::-;3101:5;2846:266;-1:-1:-1;;;2846:266:80:o;5588:380::-;5667:1;5663:12;;;;5710;;;5731:61;;5785:4;5777:6;5773:17;5763:27;;5731:61;5838:2;5830:6;5827:14;5807:18;5804:38;5801:161;;;5884:10;5879:3;5875:20;5872:1;5865:31;5919:4;5916:1;5909:15;5947:4;5944:1;5937:15;5801:161;;5588:380;;;:::o;:::-;1455:4638:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@BALLOT_TYPEHASH_1617": {
          "entryPoint": null,
          "id": 1617,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@COUNTING_MODE_3492": {
          "entryPoint": null,
          "id": 3492,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@DEFAULT_ADMIN_ROLE_1127": {
          "entryPoint": null,
          "id": 1127,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@FRACTION_DENOMINATOR_10691": {
          "entryPoint": null,
          "id": 10691,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@VETO_POWER_11182": {
          "entryPoint": null,
          "id": 11182,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_1680": {
          "entryPoint": null,
          "id": 1680,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_buildDomainSeparator_8426": {
          "entryPoint": null,
          "id": 8426,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@_cancel_11474": {
          "entryPoint": 5828,
          "id": 11474,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@_cancel_2254": {
          "entryPoint": 10305,
          "id": 2254,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@_cancel_4189": {
          "entryPoint": 9588,
          "id": 4189,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@_castVote_2407": {
          "entryPoint": 5202,
          "id": 2407,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@_checkRole_1224": {
          "entryPoint": 4761,
          "id": 1224,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_countVote_3679": {
          "entryPoint": 8937,
          "id": 3679,
          "parameterSlots": 4,
          "returnSlots": 0
        },
        "@_domainSeparatorV4_8399": {
          "entryPoint": 7977,
          "id": 8399,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_execute_11446": {
          "entryPoint": 4748,
          "id": 11446,
          "parameterSlots": 5,
          "returnSlots": 0
        },
        "@_execute_4138": {
          "entryPoint": 7450,
          "id": 4138,
          "parameterSlots": 5,
          "returnSlots": 0
        },
        "@_executor_11486": {
          "entryPoint": 2059,
          "id": 11486,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_getPastTotalSupply_11541": {
          "entryPoint": 5915,
          "id": 11541,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@_grantRole_1376": {
          "entryPoint": 4861,
          "id": 1376,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_hashTypedDataV4_8442": {
          "entryPoint": 5094,
          "id": 8442,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@_msgSender_7321": {
          "entryPoint": null,
          "id": 7321,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_quorumReached_3568": {
          "entryPoint": 10250,
          "id": 3568,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@_revokeRole_1407": {
          "entryPoint": 4993,
          "id": 1407,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_setVotingDelay_10941": {
          "entryPoint": 5851,
          "id": 10941,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_setVotingPeriod_10963": {
          "entryPoint": 7079,
          "id": 10963,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_throwError_7946": {
          "entryPoint": 8499,
          "id": 7946,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_updateProposalThresholdNumerator_10926": {
          "entryPoint": 6939,
          "id": 10926,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_updateQuorumNumerator_10900": {
          "entryPoint": 4596,
          "id": 10900,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_updateTimelock_4238": {
          "entryPoint": 6780,
          "id": 4238,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_voteSucceeded_3591": {
          "entryPoint": null,
          "id": 3591,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@cancel_11286": {
          "entryPoint": 3468,
          "id": 11286,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@castVoteBySig_2348": {
          "entryPoint": 3327,
          "id": 2348,
          "parameterSlots": 5,
          "returnSlots": 1
        },
        "@castVoteWithReason_2304": {
          "entryPoint": 3660,
          "id": 2304,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@castVote_2278": {
          "entryPoint": 3517,
          "id": 2278,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@execute_2129": {
          "entryPoint": 2896,
          "id": 2129,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@functionCallWithValue_7123": {
          "entryPoint": 6901,
          "id": 7123,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@functionCallWithValue_7173": {
          "entryPoint": 9903,
          "id": 7173,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@getDeadline_7791": {
          "entryPoint": null,
          "id": 7791,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getRoleAdmin_1239": {
          "entryPoint": 2875,
          "id": 1239,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getVotes_11382": {
          "entryPoint": 4536,
          "id": 11382,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@getVotes_11526": {
          "entryPoint": 7215,
          "id": 11526,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@grantRole_1259": {
          "entryPoint": 3167,
          "id": 1259,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@hasRole_1181": {
          "entryPoint": 3852,
          "id": 1181,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@hasVoted_3511": {
          "entryPoint": null,
          "id": 3511,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@hashProposal_1756": {
          "entryPoint": 4319,
          "id": 1756,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@isContract_7032": {
          "entryPoint": null,
          "id": 7032,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@isUnset_7833": {
          "entryPoint": null,
          "id": 7833,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@name_1714": {
          "entryPoint": 2189,
          "id": 1714,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@proposalDeadline_1877": {
          "entryPoint": 4143,
          "id": 1877,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@proposalEta_4028": {
          "entryPoint": 3958,
          "id": 4028,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@proposalSnapshot_1860": {
          "entryPoint": 3112,
          "id": 1860,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@proposalThresholdNumerator_10698": {
          "entryPoint": null,
          "id": 10698,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@proposalThreshold_10838": {
          "entryPoint": 6885,
          "id": 10838,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@proposalThreshold_10856": {
          "entryPoint": 3623,
          "id": 10856,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@proposalThreshold_11363": {
          "entryPoint": 4128,
          "id": 11363,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@proposalVotes_3539": {
          "entryPoint": null,
          "id": 3539,
          "parameterSlots": 1,
          "returnSlots": 3
        },
        "@propose_11334": {
          "entryPoint": 3732,
          "id": 11334,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@propose_2060": {
          "entryPoint": 6085,
          "id": 2060,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@queue_4106": {
          "entryPoint": 2335,
          "id": 4106,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@quorumNumerator_10696": {
          "entryPoint": null,
          "id": 10696,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@quorum_10823": {
          "entryPoint": 7396,
          "id": 10823,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@quorum_11350": {
          "entryPoint": 4548,
          "id": 11350,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@recover_8229": {
          "entryPoint": 5172,
          "id": 8229,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@relay_2428": {
          "entryPoint": 4190,
          "id": 2428,
          "parameterSlots": 4,
          "returnSlots": 0
        },
        "@renounceRole_1302": {
          "entryPoint": 3201,
          "id": 1302,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@revokeRole_1279": {
          "entryPoint": 4377,
          "id": 1279,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@setDeadline_7806": {
          "entryPoint": 9874,
          "id": 7806,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@setVotingDelay_10791": {
          "entryPoint": 3558,
          "id": 10791,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@setVotingPeriod_10804": {
          "entryPoint": 4471,
          "id": 10804,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@staking_11497": {
          "entryPoint": null,
          "id": 11497,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@state_11399": {
          "entryPoint": 3457,
          "id": 11399,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@state_1843": {
          "entryPoint": 9319,
          "id": 1843,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@state_3989": {
          "entryPoint": 5468,
          "id": 3989,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@supportsInterface_11416": {
          "entryPoint": 2095,
          "id": 11416,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@supportsInterface_1162": {
          "entryPoint": 10197,
          "id": 1162,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@supportsInterface_1704": {
          "entryPoint": 7413,
          "id": 1704,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@supportsInterface_3922": {
          "entryPoint": 4559,
          "id": 3922,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@supportsInterface_8466": {
          "entryPoint": null,
          "id": 8466,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@timelock_4002": {
          "entryPoint": null,
          "id": 4002,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@toHexString_7667": {
          "entryPoint": 7566,
          "id": 7667,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@toTypedDataHash_8288": {
          "entryPoint": null,
          "id": 8288,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@toUint64_8670": {
          "entryPoint": 9766,
          "id": 8670,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@tryRecover_8196": {
          "entryPoint": 8272,
          "id": 8196,
          "parameterSlots": 4,
          "returnSlots": 2
        },
        "@updateProposalThresholdNumerator_10778": {
          "entryPoint": 4406,
          "id": 10778,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@updateQuorumNumerator_10766": {
          "entryPoint": 2112,
          "id": 10766,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@updateTimelock_4216": {
          "entryPoint": 3893,
          "id": 4216,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@verifyCallResult_7308": {
          "entryPoint": 10573,
          "id": 7308,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@version_1724": {
          "entryPoint": null,
          "id": 1724,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@votingDelay_10865": {
          "entryPoint": null,
          "id": 10865,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@votingPeriod_10874": {
          "entryPoint": null,
          "id": 10874,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "abi_decode_array_address_dyn": {
          "entryPoint": 10934,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_array_bytes_dyn": {
          "entryPoint": 11228,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_array_uint256_dyn": {
          "entryPoint": 11050,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_available_length_bytes": {
          "entryPoint": 11141,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_decode_string_calldata": {
          "entryPoint": 11773,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_addresst_uint256": {
          "entryPoint": 12222,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr": {
          "entryPoint": 12155,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 4
        },
        "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_bytes32": {
          "entryPoint": 11376,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 4
        },
        "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_string_memory_ptr": {
          "entryPoint": 11934,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 4
        },
        "abi_decode_tuple_t_bool_fromMemory": {
          "entryPoint": 13209,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bytes32": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bytes32_fromMemory": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bytes32t_address": {
          "entryPoint": 11519,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_bytes4": {
          "entryPoint": 10630,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_contract$_TimelockController_$3456": {
          "entryPoint": 12126,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 10672,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256_fromMemory": {
          "entryPoint": 12440,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256t_address": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_uint256t_uint8": {
          "entryPoint": 11729,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptr": {
          "entryPoint": 11845,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 4
        },
        "abi_decode_tuple_t_uint256t_uint8t_uint8t_bytes32t_bytes32": {
          "entryPoint": 11589,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 5
        },
        "abi_decode_tuple_t_uint96_fromMemory": {
          "entryPoint": 13243,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_uint8": {
          "entryPoint": 11567,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_array_address_dyn": {
          "entryPoint": 12465,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_array_bytes_dyn": {
          "entryPoint": 12581,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_array_uint256_dyn": {
          "entryPoint": 12533,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_string": {
          "entryPoint": 10745,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 13676,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 13058,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__fromStack_reversed": {
          "entryPoint": 12983,
          "id": null,
          "parameterSlots": 5,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_rational_0_by_1_t_bytes32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32_t_bytes32__fromStack_reversed": {
          "entryPoint": 12669,
          "id": null,
          "parameterSlots": 6,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_rational_0_by_1_t_bytes32_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32_t_bytes32_t_uint256__fromStack_reversed": {
          "entryPoint": 12747,
          "id": null,
          "parameterSlots": 7,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 6,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32_t_uint256_t_uint8__to_t_bytes32_t_uint256_t_uint8__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 5,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_IVotesHistory_$10991__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_enum$_ProposalState_$2456__to_t_uint8__fromStack_reversed": {
          "entryPoint": 11689,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 10789,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 12266,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_0fcf173f1bde133af2b1bcbd64cbceefebae51775d6ea3d3574428ce6085d7c1__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_1600c4dfd0321c3477f2e1e913760ed9f016c92abd9858f5b9c3de2925772cab__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 13284,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_3f6e45275d065aa13d86991cade5f99a8a63c55fa182497aa674a14110f12414__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_45d5930a4426e9d2d1b4f1f6409a1e566e48968b077a6aeae252991ffd79df7f__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9df62e32cc9e9c02131fa3d2189c515bf05634e5979aec1a0e5b3a9e44a36d0b__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 12375,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_a64000c09bcc896d8b2adceb9571e34dc548b6385d5291f0ff78341396a1053e__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 13392,
          "id": null,
          "parameterSlots": 10,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": 12881,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 13169,
          "id": null,
          "parameterSlots": 5,
          "returnSlots": 1
        },
        "abi_encode_uint64": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "allocate_memory": {
          "entryPoint": 10830,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "array_allocation_size_array_address_dyn": {
          "entryPoint": 10878,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "checked_add_t_uint256": {
          "entryPoint": 12857,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_add_t_uint64": {
          "entryPoint": 13349,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_div_t_uint256": {
          "entryPoint": 12926,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_mul_t_uint256": {
          "entryPoint": 12895,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_sub_t_uint256": {
          "entryPoint": 12960,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "copy_memory_to_memory": {
          "entryPoint": 10697,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "decrement_t_uint256": {
          "entryPoint": 13653,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "extract_byte_array_length": {
          "entryPoint": 12316,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "panic_error_0x11": {
          "entryPoint": 12835,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x21": {
          "entryPoint": 11667,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x32": {
          "entryPoint": 13631,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x41": {
          "entryPoint": 10808,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "validator_revert_address": {
          "entryPoint": 10913,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:34451:80",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:80",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "83:217:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "129:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "138:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "141:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "131:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "131:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "131:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "104:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "113:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "100:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "100:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "125:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "96:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "96:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "93:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "154:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "180:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "167:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "167:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "158:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "254:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "263:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "266:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "256:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "256:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "256:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "212:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "223:5:80"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "234:3:80",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:10:80",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "230:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "230:20:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "219:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "219:32:80"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "209:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "209:43:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "202:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "202:51:80"
                      },
                      "nodeType": "YulIf",
                      "src": "199:71:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "279:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "289:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "279:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes4",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "49:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "60:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "72:6:80",
                    "type": ""
                  }
                ],
                "src": "14:286:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "400:92:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "410:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "422:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "433:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "418:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "418:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "410:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "452:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "477:6:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "470:6:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "470:14:80"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "463:6:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "463:22:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "445:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "445:41:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "445:41:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "369:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "380:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "391:4:80",
                    "type": ""
                  }
                ],
                "src": "305:187:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "598:76:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "608:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "620:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "631:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "616:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "616:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "608:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "650:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "661:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "643:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "643:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "643:25:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "567:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "578:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "589:4:80",
                    "type": ""
                  }
                ],
                "src": "497:177:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "749:110:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "795:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "804:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "807:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "797:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "797:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "797:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "770:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "779:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "766:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "766:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "791:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "762:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "762:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "759:52:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "820:33:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "843:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "830:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "830:23:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "820:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "715:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "726:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "738:6:80",
                    "type": ""
                  }
                ],
                "src": "679:180:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "917:205:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "927:10:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "936:1:80",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "931:1:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "996:63:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "1021:3:80"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1026:1:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1017:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1017:11:80"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "1040:3:80"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1045:1:80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1036:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1036:11:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1030:5:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1030:18:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1010:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1010:39:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1010:39:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "957:1:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "960:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "954:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "954:13:80"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "968:19:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "970:15:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "979:1:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "982:2:80",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "975:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "975:10:80"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "970:1:80"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "950:3:80",
                        "statements": []
                      },
                      "src": "946:113:80"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1085:31:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "1098:3:80"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "1103:6:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1094:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1094:16:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1112:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1087:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1087:27:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1087:27:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1074:1:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1077:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1071:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1071:13:80"
                      },
                      "nodeType": "YulIf",
                      "src": "1068:48:80"
                    }
                  ]
                },
                "name": "copy_memory_to_memory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "895:3:80",
                    "type": ""
                  },
                  {
                    "name": "dst",
                    "nodeType": "YulTypedName",
                    "src": "900:3:80",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "905:6:80",
                    "type": ""
                  }
                ],
                "src": "864:258:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1177:208:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1187:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1207:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1201:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1201:12:80"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "1191:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1229:3:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1234:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1222:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1222:19:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1222:19:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1276:5:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1283:4:80",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1272:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1272:16:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1294:3:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1299:4:80",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1290:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1290:14:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1306:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "1250:21:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1250:63:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1250:63:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1322:57:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1337:3:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1350:6:80"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1358:2:80",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1346:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1346:15:80"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1367:2:80",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "1363:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1363:7:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1342:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1342:29:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1333:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1333:39:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1374:4:80",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1329:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1329:50:80"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "1322:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_string",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "1154:5:80",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "1161:3:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "1169:3:80",
                    "type": ""
                  }
                ],
                "src": "1127:258:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1511:99:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1528:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1539:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1521:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1521:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1521:21:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1551:53:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1577:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1589:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1600:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1585:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1585:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_string",
                          "nodeType": "YulIdentifier",
                          "src": "1559:17:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1559:45:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1551:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1480:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1491:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1502:4:80",
                    "type": ""
                  }
                ],
                "src": "1390:220:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1647:95:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1664:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1671:3:80",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1676:10:80",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1667:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1667:20:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1657:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1657:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1657:31:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1704:1:80",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1707:4:80",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1697:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1697:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1697:15:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1728:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1731:4:80",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "1721:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1721:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1721:15:80"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "1615:127:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1792:230:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1802:19:80",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1818:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1812:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1812:9:80"
                      },
                      "variableNames": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulIdentifier",
                          "src": "1802:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1830:58:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1852:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "1868:4:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1874:2:80",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1864:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1864:13:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1883:2:80",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1879:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1879:7:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1860:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1860:27:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1848:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1848:40:80"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "1834:10:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1963:22:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "1965:16:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1965:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1965:18:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "1906:10:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1926:2:80",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1930:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1922:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1922:10:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1934:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1918:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1918:18:80"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "1903:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1903:34:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "1942:10:80"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1954:6:80"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1939:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1939:22:80"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "1900:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1900:62:80"
                      },
                      "nodeType": "YulIf",
                      "src": "1897:88:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2001:2:80",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2005:10:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1994:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1994:22:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1994:22:80"
                    }
                  ]
                },
                "name": "allocate_memory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "size",
                    "nodeType": "YulTypedName",
                    "src": "1772:4:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "memPtr",
                    "nodeType": "YulTypedName",
                    "src": "1781:6:80",
                    "type": ""
                  }
                ],
                "src": "1747:275:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2096:114:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2140:22:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "2142:16:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2142:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2142:18:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2112:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2128:2:80",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2132:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2124:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2124:10:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2136:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2120:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2120:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2109:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2109:30:80"
                      },
                      "nodeType": "YulIf",
                      "src": "2106:56:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2171:33:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2187:1:80",
                                "type": "",
                                "value": "5"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2190:6:80"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2183:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2183:14:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2199:4:80",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2179:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2179:25:80"
                      },
                      "variableNames": [
                        {
                          "name": "size",
                          "nodeType": "YulIdentifier",
                          "src": "2171:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "array_allocation_size_array_address_dyn",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "2076:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "size",
                    "nodeType": "YulTypedName",
                    "src": "2087:4:80",
                    "type": ""
                  }
                ],
                "src": "2027:183:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2260:86:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2324:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2333:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2336:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2326:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2326:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2326:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2283:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2294:5:80"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2309:3:80",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2314:1:80",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "2305:3:80"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2305:11:80"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2318:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2301:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2301:19:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2290:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2290:31:80"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "2280:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2280:42:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2273:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2273:50:80"
                      },
                      "nodeType": "YulIf",
                      "src": "2270:70:80"
                    }
                  ]
                },
                "name": "validator_revert_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "2249:5:80",
                    "type": ""
                  }
                ],
                "src": "2215:131:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2415:673:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2464:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2473:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2476:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2466:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2466:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2466:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2443:6:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2451:4:80",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2439:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2439:17:80"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "2458:3:80"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2435:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2435:27:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2428:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2428:35:80"
                      },
                      "nodeType": "YulIf",
                      "src": "2425:55:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2489:30:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2512:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2499:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2499:20:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "2493:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2528:14:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2538:4:80",
                        "type": "",
                        "value": "0x20"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "2532:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2551:71:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2618:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "array_allocation_size_array_address_dyn",
                              "nodeType": "YulIdentifier",
                              "src": "2578:39:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2578:43:80"
                          }
                        ],
                        "functionName": {
                          "name": "allocate_memory",
                          "nodeType": "YulIdentifier",
                          "src": "2562:15:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2562:60:80"
                      },
                      "variables": [
                        {
                          "name": "dst",
                          "nodeType": "YulTypedName",
                          "src": "2555:3:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2631:16:80",
                      "value": {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "2644:3:80"
                      },
                      "variables": [
                        {
                          "name": "dst_1",
                          "nodeType": "YulTypedName",
                          "src": "2635:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "2663:3:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2668:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2656:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2656:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2656:15:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2680:19:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "2691:3:80"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2696:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2687:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2687:12:80"
                      },
                      "variableNames": [
                        {
                          "name": "dst",
                          "nodeType": "YulIdentifier",
                          "src": "2680:3:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2708:46:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2730:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2742:1:80",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2745:2:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2738:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2738:10:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2726:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2726:23:80"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2751:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2722:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2722:32:80"
                      },
                      "variables": [
                        {
                          "name": "srcEnd",
                          "nodeType": "YulTypedName",
                          "src": "2712:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2782:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2791:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2794:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2784:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2784:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2784:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "srcEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2769:6:80"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2777:3:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2766:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2766:15:80"
                      },
                      "nodeType": "YulIf",
                      "src": "2763:35:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2807:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2822:6:80"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2830:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2818:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2818:15:80"
                      },
                      "variables": [
                        {
                          "name": "src",
                          "nodeType": "YulTypedName",
                          "src": "2811:3:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2898:161:80",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2912:30:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "2938:3:80"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "2925:12:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2925:17:80"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "2916:5:80",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2980:5:80"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_address",
                                "nodeType": "YulIdentifier",
                                "src": "2955:24:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2955:31:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2955:31:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3006:3:80"
                                },
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "3011:5:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2999:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2999:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2999:18:80"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3030:19:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3041:3:80"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3046:2:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3037:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3037:12:80"
                            },
                            "variableNames": [
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "3030:3:80"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "2853:3:80"
                          },
                          {
                            "name": "srcEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2858:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2850:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2850:15:80"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "2866:23:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2868:19:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "2879:3:80"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2884:2:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2875:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2875:12:80"
                            },
                            "variableNames": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "2868:3:80"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "2846:3:80",
                        "statements": []
                      },
                      "src": "2842:217:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3068:14:80",
                      "value": {
                        "name": "dst_1",
                        "nodeType": "YulIdentifier",
                        "src": "3077:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "array",
                          "nodeType": "YulIdentifier",
                          "src": "3068:5:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_array_address_dyn",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "2389:6:80",
                    "type": ""
                  },
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "2397:3:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "array",
                    "nodeType": "YulTypedName",
                    "src": "2405:5:80",
                    "type": ""
                  }
                ],
                "src": "2351:737:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3157:598:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3206:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3215:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3218:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3208:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3208:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3208:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3185:6:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3193:4:80",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3181:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3181:17:80"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "3200:3:80"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3177:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3177:27:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3170:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3170:35:80"
                      },
                      "nodeType": "YulIf",
                      "src": "3167:55:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3231:30:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3254:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3241:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3241:20:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "3235:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3270:14:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3280:4:80",
                        "type": "",
                        "value": "0x20"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "3274:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3293:71:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3360:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "array_allocation_size_array_address_dyn",
                              "nodeType": "YulIdentifier",
                              "src": "3320:39:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3320:43:80"
                          }
                        ],
                        "functionName": {
                          "name": "allocate_memory",
                          "nodeType": "YulIdentifier",
                          "src": "3304:15:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3304:60:80"
                      },
                      "variables": [
                        {
                          "name": "dst",
                          "nodeType": "YulTypedName",
                          "src": "3297:3:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3373:16:80",
                      "value": {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "3386:3:80"
                      },
                      "variables": [
                        {
                          "name": "dst_1",
                          "nodeType": "YulTypedName",
                          "src": "3377:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "3405:3:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3410:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3398:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3398:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3398:15:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3422:19:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "3433:3:80"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3438:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3429:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3429:12:80"
                      },
                      "variableNames": [
                        {
                          "name": "dst",
                          "nodeType": "YulIdentifier",
                          "src": "3422:3:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3450:46:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3472:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3484:1:80",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3487:2:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3480:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3480:10:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3468:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3468:23:80"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3493:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3464:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3464:32:80"
                      },
                      "variables": [
                        {
                          "name": "srcEnd",
                          "nodeType": "YulTypedName",
                          "src": "3454:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3524:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3533:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3536:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3526:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3526:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3526:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "srcEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3511:6:80"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "3519:3:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3508:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3508:15:80"
                      },
                      "nodeType": "YulIf",
                      "src": "3505:35:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3549:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3564:6:80"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3572:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3560:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3560:15:80"
                      },
                      "variables": [
                        {
                          "name": "src",
                          "nodeType": "YulTypedName",
                          "src": "3553:3:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3640:86:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3661:3:80"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3679:3:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "calldataload",
                                    "nodeType": "YulIdentifier",
                                    "src": "3666:12:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3666:17:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "3654:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3654:30:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3654:30:80"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3697:19:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3708:3:80"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3713:2:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3704:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3704:12:80"
                            },
                            "variableNames": [
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "3697:3:80"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "3595:3:80"
                          },
                          {
                            "name": "srcEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3600:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3592:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3592:15:80"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "3608:23:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "3610:19:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "3621:3:80"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3626:2:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3617:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3617:12:80"
                            },
                            "variableNames": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "3610:3:80"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "3588:3:80",
                        "statements": []
                      },
                      "src": "3584:142:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3735:14:80",
                      "value": {
                        "name": "dst_1",
                        "nodeType": "YulIdentifier",
                        "src": "3744:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "array",
                          "nodeType": "YulIdentifier",
                          "src": "3735:5:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_array_uint256_dyn",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "3131:6:80",
                    "type": ""
                  },
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "3139:3:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "array",
                    "nodeType": "YulTypedName",
                    "src": "3147:5:80",
                    "type": ""
                  }
                ],
                "src": "3093:662:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3834:332:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3878:22:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "3880:16:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3880:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3880:18:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3850:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3866:2:80",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3870:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3862:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3862:10:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3874:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3858:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3858:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3847:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3847:30:80"
                      },
                      "nodeType": "YulIf",
                      "src": "3844:56:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3909:66:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3946:6:80"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3954:2:80",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3942:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3942:15:80"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3963:2:80",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "3959:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3959:7:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3938:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3938:29:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3969:4:80",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3934:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3934:40:80"
                          }
                        ],
                        "functionName": {
                          "name": "allocate_memory",
                          "nodeType": "YulIdentifier",
                          "src": "3918:15:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3918:57:80"
                      },
                      "variableNames": [
                        {
                          "name": "array",
                          "nodeType": "YulIdentifier",
                          "src": "3909:5:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "3991:5:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3998:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3984:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3984:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3984:21:80"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4043:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4052:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4055:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4045:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4045:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4045:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "4024:3:80"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "4029:6:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4020:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4020:16:80"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "4038:3:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4017:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4017:25:80"
                      },
                      "nodeType": "YulIf",
                      "src": "4014:45:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "4085:5:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4092:4:80",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4081:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4081:16:80"
                          },
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "4099:3:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4104:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "4068:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4068:43:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4068:43:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "4135:5:80"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4142:6:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4131:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4131:18:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4151:4:80",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4127:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4127:29:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4158:1:80",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4120:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4120:40:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4120:40:80"
                    }
                  ]
                },
                "name": "abi_decode_available_length_bytes",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "3803:3:80",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "3808:6:80",
                    "type": ""
                  },
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "3816:3:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "array",
                    "nodeType": "YulTypedName",
                    "src": "3824:5:80",
                    "type": ""
                  }
                ],
                "src": "3760:406:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4233:1025:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4282:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4291:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4294:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4284:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4284:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4284:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4261:6:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4269:4:80",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4257:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4257:17:80"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "4276:3:80"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "4253:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4253:27:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4246:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4246:35:80"
                      },
                      "nodeType": "YulIf",
                      "src": "4243:55:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4307:30:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4330:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4317:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4317:20:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "4311:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4346:14:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4356:4:80",
                        "type": "",
                        "value": "0x20"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "4350:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4369:71:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4436:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "array_allocation_size_array_address_dyn",
                              "nodeType": "YulIdentifier",
                              "src": "4396:39:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4396:43:80"
                          }
                        ],
                        "functionName": {
                          "name": "allocate_memory",
                          "nodeType": "YulIdentifier",
                          "src": "4380:15:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4380:60:80"
                      },
                      "variables": [
                        {
                          "name": "dst",
                          "nodeType": "YulTypedName",
                          "src": "4373:3:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4449:16:80",
                      "value": {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "4462:3:80"
                      },
                      "variables": [
                        {
                          "name": "dst_1",
                          "nodeType": "YulTypedName",
                          "src": "4453:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "4481:3:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4486:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4474:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4474:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4474:15:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4498:19:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "4509:3:80"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "4514:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4505:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4505:12:80"
                      },
                      "variableNames": [
                        {
                          "name": "dst",
                          "nodeType": "YulIdentifier",
                          "src": "4498:3:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4526:46:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4548:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4560:1:80",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4563:2:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4556:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4556:10:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4544:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4544:23:80"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "4569:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4540:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4540:32:80"
                      },
                      "variables": [
                        {
                          "name": "srcEnd",
                          "nodeType": "YulTypedName",
                          "src": "4530:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4600:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4609:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4612:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4602:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4602:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4602:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "srcEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4587:6:80"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "4595:3:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4584:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4584:15:80"
                      },
                      "nodeType": "YulIf",
                      "src": "4581:35:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4625:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4640:6:80"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "4648:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4636:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4636:15:80"
                      },
                      "variables": [
                        {
                          "name": "src",
                          "nodeType": "YulTypedName",
                          "src": "4629:3:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4716:513:80",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4730:36:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "4762:3:80"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "4749:12:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4749:17:80"
                            },
                            "variables": [
                              {
                                "name": "innerOffset",
                                "nodeType": "YulTypedName",
                                "src": "4734:11:80",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4830:74:80",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4848:11:80",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4858:1:80",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulTypedName",
                                      "src": "4852:2:80",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "4883:2:80"
                                      },
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "4887:2:80"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "4876:6:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4876:14:80"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4876:14:80"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "innerOffset",
                                  "nodeType": "YulIdentifier",
                                  "src": "4785:11:80"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4806:2:80",
                                          "type": "",
                                          "value": "64"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4810:1:80",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "4802:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4802:10:80"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4814:1:80",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "4798:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4798:18:80"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "4782:2:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4782:35:80"
                            },
                            "nodeType": "YulIf",
                            "src": "4779:125:80"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4917:34:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "4931:6:80"
                                },
                                {
                                  "name": "innerOffset",
                                  "nodeType": "YulIdentifier",
                                  "src": "4939:11:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4927:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4927:24:80"
                            },
                            "variables": [
                              {
                                "name": "_4",
                                "nodeType": "YulTypedName",
                                "src": "4921:2:80",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "5009:74:80",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5027:11:80",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5037:1:80",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "_5",
                                      "nodeType": "YulTypedName",
                                      "src": "5031:2:80",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "_5",
                                        "nodeType": "YulIdentifier",
                                        "src": "5062:2:80"
                                      },
                                      {
                                        "name": "_5",
                                        "nodeType": "YulIdentifier",
                                        "src": "5066:2:80"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "5055:6:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5055:14:80"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5055:14:80"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_4",
                                          "nodeType": "YulIdentifier",
                                          "src": "4982:2:80"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4986:2:80",
                                          "type": "",
                                          "value": "63"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4978:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4978:11:80"
                                    },
                                    {
                                      "name": "end",
                                      "nodeType": "YulIdentifier",
                                      "src": "4991:3:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "slt",
                                    "nodeType": "YulIdentifier",
                                    "src": "4974:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4974:21:80"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "4967:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4967:29:80"
                            },
                            "nodeType": "YulIf",
                            "src": "4964:119:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5103:3:80"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_4",
                                          "nodeType": "YulIdentifier",
                                          "src": "5146:2:80"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5150:2:80",
                                          "type": "",
                                          "value": "64"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5142:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5142:11:80"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_4",
                                              "nodeType": "YulIdentifier",
                                              "src": "5172:2:80"
                                            },
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "5176:2:80"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5168:3:80"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5168:11:80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "5155:12:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5155:25:80"
                                    },
                                    {
                                      "name": "end",
                                      "nodeType": "YulIdentifier",
                                      "src": "5182:3:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_available_length_bytes",
                                    "nodeType": "YulIdentifier",
                                    "src": "5108:33:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5108:78:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5096:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5096:91:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5096:91:80"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "5200:19:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5211:3:80"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "5216:2:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5207:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5207:12:80"
                            },
                            "variableNames": [
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "5200:3:80"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "4671:3:80"
                          },
                          {
                            "name": "srcEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4676:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4668:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4668:15:80"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "4684:23:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "4686:19:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "4697:3:80"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4702:2:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4693:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4693:12:80"
                            },
                            "variableNames": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "4686:3:80"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "4664:3:80",
                        "statements": []
                      },
                      "src": "4660:569:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5238:14:80",
                      "value": {
                        "name": "dst_1",
                        "nodeType": "YulIdentifier",
                        "src": "5247:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "array",
                          "nodeType": "YulIdentifier",
                          "src": "5238:5:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_array_bytes_dyn",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "4207:6:80",
                    "type": ""
                  },
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "4215:3:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "array",
                    "nodeType": "YulTypedName",
                    "src": "4223:5:80",
                    "type": ""
                  }
                ],
                "src": "4171:1087:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5468:692:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5515:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5524:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5527:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5517:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5517:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5517:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "5489:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5498:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5485:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5485:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5510:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "5481:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5481:33:80"
                      },
                      "nodeType": "YulIf",
                      "src": "5478:53:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5540:37:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5567:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5554:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5554:23:80"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5544:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5586:28:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5604:2:80",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5608:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5600:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5600:10:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5612:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5596:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5596:18:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "5590:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5641:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5650:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5653:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5643:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5643:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5643:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5629:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5637:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5626:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5626:14:80"
                      },
                      "nodeType": "YulIf",
                      "src": "5623:34:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5666:71:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5709:9:80"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5720:6:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5705:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5705:22:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5729:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_address_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "5676:28:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5676:61:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5666:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5746:48:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5779:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5790:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5775:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5775:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5762:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5762:32:80"
                      },
                      "variables": [
                        {
                          "name": "offset_1",
                          "nodeType": "YulTypedName",
                          "src": "5750:8:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5823:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5832:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5835:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5825:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5825:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5825:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "5809:8:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5819:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5806:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5806:16:80"
                      },
                      "nodeType": "YulIf",
                      "src": "5803:36:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5848:73:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5891:9:80"
                              },
                              {
                                "name": "offset_1",
                                "nodeType": "YulIdentifier",
                                "src": "5902:8:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5887:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5887:24:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5913:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_uint256_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "5858:28:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5858:63:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5848:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5930:48:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5963:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5974:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5959:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5959:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5946:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5946:32:80"
                      },
                      "variables": [
                        {
                          "name": "offset_2",
                          "nodeType": "YulTypedName",
                          "src": "5934:8:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6007:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6016:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6019:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6009:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6009:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6009:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "5993:8:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6003:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5990:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5990:16:80"
                      },
                      "nodeType": "YulIf",
                      "src": "5987:36:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6032:71:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6073:9:80"
                              },
                              {
                                "name": "offset_2",
                                "nodeType": "YulIdentifier",
                                "src": "6084:8:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6069:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6069:24:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6095:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_bytes_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "6042:26:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6042:61:80"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "6032:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6112:42:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6139:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6150:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6135:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6135:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6122:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6122:32:80"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "6112:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_bytes32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5410:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "5421:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5433:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "5441:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "5449:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "5457:6:80",
                    "type": ""
                  }
                ],
                "src": "5263:897:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6235:110:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6281:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6290:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6293:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6283:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6283:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6283:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6256:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6265:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6252:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6252:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6277:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "6248:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6248:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "6245:52:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6306:33:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6329:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6316:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6316:23:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6306:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6201:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "6212:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6224:6:80",
                    "type": ""
                  }
                ],
                "src": "6165:180:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6451:76:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "6461:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6473:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6484:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6469:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6469:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6461:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6503:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6514:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6496:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6496:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6496:25:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6420:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6431:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6442:4:80",
                    "type": ""
                  }
                ],
                "src": "6350:177:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6619:228:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6665:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6674:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6677:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6667:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6667:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6667:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6640:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6649:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6636:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6636:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6661:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "6632:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6632:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "6629:52:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6690:33:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6713:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6700:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6700:23:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6690:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6732:45:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6762:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6773:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6758:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6758:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6745:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6745:32:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "6736:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6811:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "6786:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6786:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6786:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6826:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6836:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6826:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes32t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6577:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "6588:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6600:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "6608:6:80",
                    "type": ""
                  }
                ],
                "src": "6532:315:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6899:109:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "6909:29:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "6931:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6918:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6918:20:80"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "6909:5:80"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6986:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6995:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6998:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6988:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6988:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6988:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6960:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6971:5:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6978:4:80",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6967:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6967:16:80"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "6957:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6957:27:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6950:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6950:35:80"
                      },
                      "nodeType": "YulIf",
                      "src": "6947:55:80"
                    }
                  ]
                },
                "name": "abi_decode_uint8",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "6878:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "6889:5:80",
                    "type": ""
                  }
                ],
                "src": "6852:156:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7147:324:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7194:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7203:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7206:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "7196:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7196:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7196:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "7168:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7177:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7164:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7164:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7189:3:80",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "7160:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7160:33:80"
                      },
                      "nodeType": "YulIf",
                      "src": "7157:53:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7219:33:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7242:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7229:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7229:23:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7219:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7261:46:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7292:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7303:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7288:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7288:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "7271:16:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7271:36:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7261:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7316:46:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7347:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7358:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7343:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7343:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "7326:16:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7326:36:80"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "7316:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7371:42:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7398:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7409:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7394:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7394:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7381:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7381:32:80"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "7371:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7422:43:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7449:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7460:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7445:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7445:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7432:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7432:33:80"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "7422:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256t_uint8t_uint8t_bytes32t_bytes32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7081:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "7092:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7104:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "7112:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "7120:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "7128:6:80",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "7136:6:80",
                    "type": ""
                  }
                ],
                "src": "7013:458:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7508:95:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7525:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7532:3:80",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7537:10:80",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "7528:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7528:20:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7518:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7518:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7518:31:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7565:1:80",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7568:4:80",
                            "type": "",
                            "value": "0x21"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7558:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7558:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7558:15:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7589:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7592:4:80",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "7582:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7582:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7582:15:80"
                    }
                  ]
                },
                "name": "panic_error_0x21",
                "nodeType": "YulFunctionDefinition",
                "src": "7476:127:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7725:229:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "7735:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7747:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7758:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7743:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7743:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7735:4:80"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7803:111:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7824:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7831:3:80",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7836:10:80",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "7827:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7827:20:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7817:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7817:31:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7817:31:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7868:1:80",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7871:4:80",
                                  "type": "",
                                  "value": "0x21"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7861:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7861:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7861:15:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7896:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7899:4:80",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "7889:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7889:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7889:15:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "7783:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7791:1:80",
                                "type": "",
                                "value": "8"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "7780:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7780:13:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7773:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7773:21:80"
                      },
                      "nodeType": "YulIf",
                      "src": "7770:144:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7930:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7941:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7923:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7923:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7923:25:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_enum$_ProposalState_$2456__to_t_uint8__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7694:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7705:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7716:4:80",
                    "type": ""
                  }
                ],
                "src": "7608:346:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8046:228:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8092:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8101:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8104:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8094:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8094:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8094:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "8067:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8076:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8063:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8063:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8088:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8059:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8059:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "8056:52:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8117:33:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8140:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8127:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8127:23:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8117:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8159:45:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8189:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8200:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8185:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8185:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8172:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8172:32:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "8163:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8238:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "8213:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8213:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8213:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8253:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8263:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "8253:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8004:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "8015:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "8027:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "8035:6:80",
                    "type": ""
                  }
                ],
                "src": "7959:315:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8403:102:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "8413:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8425:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8436:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8421:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8421:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8413:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8455:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "8470:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8486:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8491:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "8482:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8482:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8495:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8478:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8478:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8466:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8466:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8448:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8448:51:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8448:51:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_IVotesHistory_$10991__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8372:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "8383:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8394:4:80",
                    "type": ""
                  }
                ],
                "src": "8279:226:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8667:162:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "8677:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8689:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8700:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8685:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8685:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8677:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8719:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8730:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8712:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8712:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8712:25:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8757:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8768:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8753:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8753:18:80"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8773:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8746:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8746:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8746:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8800:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8811:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8796:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8796:18:80"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "8816:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8789:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8789:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8789:34:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8620:9:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "8631:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "8639:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "8647:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8658:4:80",
                    "type": ""
                  }
                ],
                "src": "8510:319:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8919:165:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8965:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8974:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8977:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8967:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8967:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8967:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "8940:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8949:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8936:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8936:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8961:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8932:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8932:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "8929:52:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8990:33:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9013:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "9000:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9000:23:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8990:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9032:46:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9063:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9074:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9059:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9059:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "9042:16:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9042:36:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "9032:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256t_uint8",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8877:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "8888:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "8900:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "8908:6:80",
                    "type": ""
                  }
                ],
                "src": "8834:250:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9162:275:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9211:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9220:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9223:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "9213:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9213:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9213:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "9190:6:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9198:4:80",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9186:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9186:17:80"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "9205:3:80"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "9182:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9182:27:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9175:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9175:35:80"
                      },
                      "nodeType": "YulIf",
                      "src": "9172:55:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9236:30:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9259:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "9246:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9246:20:80"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "9236:6:80"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9309:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9318:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9321:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "9311:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9311:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9311:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9281:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9297:2:80",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9301:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "9293:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9293:10:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9305:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9289:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9289:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9278:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9278:30:80"
                      },
                      "nodeType": "YulIf",
                      "src": "9275:50:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9334:29:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9350:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9358:4:80",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9346:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9346:17:80"
                      },
                      "variableNames": [
                        {
                          "name": "arrayPos",
                          "nodeType": "YulIdentifier",
                          "src": "9334:8:80"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9415:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9424:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9427:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "9417:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9417:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9417:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "9386:6:80"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9394:6:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9382:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9382:19:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9403:4:80",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9378:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9378:30:80"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "9410:3:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9375:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9375:39:80"
                      },
                      "nodeType": "YulIf",
                      "src": "9372:59:80"
                    }
                  ]
                },
                "name": "abi_decode_string_calldata",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "9125:6:80",
                    "type": ""
                  },
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "9133:3:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "arrayPos",
                    "nodeType": "YulTypedName",
                    "src": "9141:8:80",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "9151:6:80",
                    "type": ""
                  }
                ],
                "src": "9089:348:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9564:427:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9610:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9619:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9622:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "9612:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9612:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9612:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "9585:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9594:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9581:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9581:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9606:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "9577:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9577:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "9574:52:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9635:33:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9658:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "9645:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9645:23:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9635:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9677:46:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9708:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9719:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9704:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9704:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "9687:16:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9687:36:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "9677:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9732:46:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9763:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9774:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9759:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9759:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "9746:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9746:32:80"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9736:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9821:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9830:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9833:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "9823:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9823:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9823:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9793:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9809:2:80",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9813:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "9805:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9805:10:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9817:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9801:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9801:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9790:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9790:30:80"
                      },
                      "nodeType": "YulIf",
                      "src": "9787:50:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9846:85:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9903:9:80"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9914:6:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9899:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9899:22:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9923:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "9872:26:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9872:59:80"
                      },
                      "variables": [
                        {
                          "name": "value2_1",
                          "nodeType": "YulTypedName",
                          "src": "9850:8:80",
                          "type": ""
                        },
                        {
                          "name": "value3_1",
                          "nodeType": "YulTypedName",
                          "src": "9860:8:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9940:18:80",
                      "value": {
                        "name": "value2_1",
                        "nodeType": "YulIdentifier",
                        "src": "9950:8:80"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "9940:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9967:18:80",
                      "value": {
                        "name": "value3_1",
                        "nodeType": "YulIdentifier",
                        "src": "9977:8:80"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "9967:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9506:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "9517:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "9529:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "9537:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "9545:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "9553:6:80",
                    "type": ""
                  }
                ],
                "src": "9442:549:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10211:942:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10258:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10267:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10270:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "10260:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10260:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10260:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "10232:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10241:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "10228:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10228:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10253:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "10224:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10224:33:80"
                      },
                      "nodeType": "YulIf",
                      "src": "10221:53:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10283:37:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10310:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "10297:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10297:23:80"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10287:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10329:28:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10347:2:80",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10351:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "10343:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10343:10:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10355:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10339:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10339:18:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "10333:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10384:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10393:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10396:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "10386:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10386:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10386:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "10372:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10380:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10369:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10369:14:80"
                      },
                      "nodeType": "YulIf",
                      "src": "10366:34:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10409:71:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10452:9:80"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10463:6:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10448:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10448:22:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10472:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_address_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "10419:28:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10419:61:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10409:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10489:48:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10522:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10533:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10518:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10518:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "10505:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10505:32:80"
                      },
                      "variables": [
                        {
                          "name": "offset_1",
                          "nodeType": "YulTypedName",
                          "src": "10493:8:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10566:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10575:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10578:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "10568:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10568:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10568:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "10552:8:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10562:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10549:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10549:16:80"
                      },
                      "nodeType": "YulIf",
                      "src": "10546:36:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10591:73:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10634:9:80"
                              },
                              {
                                "name": "offset_1",
                                "nodeType": "YulIdentifier",
                                "src": "10645:8:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10630:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10630:24:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10656:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_uint256_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "10601:28:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10601:63:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "10591:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10673:48:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10706:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10717:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10702:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10702:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "10689:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10689:32:80"
                      },
                      "variables": [
                        {
                          "name": "offset_2",
                          "nodeType": "YulTypedName",
                          "src": "10677:8:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10750:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10759:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10762:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "10752:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10752:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10752:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "10736:8:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10746:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10733:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10733:16:80"
                      },
                      "nodeType": "YulIf",
                      "src": "10730:36:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10775:71:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10816:9:80"
                              },
                              {
                                "name": "offset_2",
                                "nodeType": "YulIdentifier",
                                "src": "10827:8:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10812:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10812:24:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10838:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_bytes_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "10785:26:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10785:61:80"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "10775:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10855:48:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10888:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10899:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10884:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10884:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "10871:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10871:32:80"
                      },
                      "variables": [
                        {
                          "name": "offset_3",
                          "nodeType": "YulTypedName",
                          "src": "10859:8:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10932:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10941:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10944:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "10934:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10934:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10934:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset_3",
                            "nodeType": "YulIdentifier",
                            "src": "10918:8:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10928:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10915:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10915:16:80"
                      },
                      "nodeType": "YulIf",
                      "src": "10912:36:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10957:34:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10971:9:80"
                          },
                          {
                            "name": "offset_3",
                            "nodeType": "YulIdentifier",
                            "src": "10982:8:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10967:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10967:24:80"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "10961:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "11039:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11048:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11051:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "11041:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11041:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "11041:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "11018:2:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11022:4:80",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11014:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11014:13:80"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "11029:7:80"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "11010:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11010:27:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11003:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11003:35:80"
                      },
                      "nodeType": "YulIf",
                      "src": "11000:55:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11064:83:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "11112:2:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11116:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11108:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11108:11:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "11134:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "11121:12:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11121:16:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11139:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_available_length_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "11074:33:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11074:73:80"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "11064:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_string_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "10153:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "10164:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "10176:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "10184:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "10192:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "10200:6:80",
                    "type": ""
                  }
                ],
                "src": "9996:1157:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11255:177:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "11301:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11310:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11313:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "11303:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11303:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "11303:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "11276:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11285:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "11272:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11272:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11297:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "11268:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11268:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "11265:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11326:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11352:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "11339:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11339:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "11330:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11396:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "11371:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11371:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11371:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11411:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11421:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "11411:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_contract$_TimelockController_$3456",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "11221:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "11232:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "11244:6:80",
                    "type": ""
                  }
                ],
                "src": "11158:274:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11560:490:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "11606:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11615:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11618:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "11608:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11608:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "11608:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "11581:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11590:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "11577:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11577:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11602:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "11573:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11573:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "11570:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11631:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11657:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "11644:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11644:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "11635:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11701:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "11676:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11676:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11676:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11716:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11726:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "11716:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11740:42:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11767:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11778:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11763:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11763:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "11750:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11750:32:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "11740:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11791:46:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11822:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11833:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11818:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11818:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "11805:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11805:32:80"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "11795:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "11880:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11889:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11892:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "11882:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11882:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "11882:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "11852:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11868:2:80",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11872:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "11864:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11864:10:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11876:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "11860:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11860:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "11849:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11849:30:80"
                      },
                      "nodeType": "YulIf",
                      "src": "11846:50:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11905:85:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11962:9:80"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11973:6:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11958:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11958:22:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11982:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "11931:26:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11931:59:80"
                      },
                      "variables": [
                        {
                          "name": "value2_1",
                          "nodeType": "YulTypedName",
                          "src": "11909:8:80",
                          "type": ""
                        },
                        {
                          "name": "value3_1",
                          "nodeType": "YulTypedName",
                          "src": "11919:8:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11999:18:80",
                      "value": {
                        "name": "value2_1",
                        "nodeType": "YulIdentifier",
                        "src": "12009:8:80"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "11999:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12026:18:80",
                      "value": {
                        "name": "value3_1",
                        "nodeType": "YulIdentifier",
                        "src": "12036:8:80"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "12026:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "11502:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "11513:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "11525:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "11533:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "11541:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "11549:6:80",
                    "type": ""
                  }
                ],
                "src": "11437:613:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12156:102:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "12166:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12178:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12189:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12174:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12174:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12166:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12208:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "12223:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12239:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12244:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "12235:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12235:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12248:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "12231:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12231:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "12219:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12219:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12201:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12201:51:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12201:51:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "12125:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "12136:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "12147:4:80",
                    "type": ""
                  }
                ],
                "src": "12055:203:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12350:228:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12396:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12405:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12408:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "12398:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12398:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "12398:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "12371:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12380:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "12367:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12367:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12392:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "12363:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12363:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "12360:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12421:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12447:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "12434:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12434:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "12425:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12491:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "12466:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12466:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12466:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12506:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12516:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "12506:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12530:42:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12557:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12568:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12553:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12553:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "12540:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12540:32:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "12530:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "12308:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "12319:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "12331:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "12339:6:80",
                    "type": ""
                  }
                ],
                "src": "12263:315:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12757:174:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12774:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12785:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12767:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12767:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12767:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12808:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12819:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12804:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12804:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12824:2:80",
                            "type": "",
                            "value": "24"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12797:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12797:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12797:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12847:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12858:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12843:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12843:18:80"
                          },
                          {
                            "hexValue": "476f7665726e6f723a206f6e6c79476f7665726e616e6365",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "12863:26:80",
                            "type": "",
                            "value": "Governor: onlyGovernance"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12836:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12836:54:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12836:54:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12899:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12911:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12922:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12907:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12907:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12899:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "12734:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "12748:4:80",
                    "type": ""
                  }
                ],
                "src": "12583:348:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12991:325:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "13001:22:80",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13015:1:80",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "13018:4:80"
                          }
                        ],
                        "functionName": {
                          "name": "shr",
                          "nodeType": "YulIdentifier",
                          "src": "13011:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13011:12:80"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "13001:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13032:38:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "13062:4:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13068:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13058:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13058:12:80"
                      },
                      "variables": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulTypedName",
                          "src": "13036:18:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "13109:31:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "13111:27:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "13125:6:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13133:4:80",
                                  "type": "",
                                  "value": "0x7f"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "13121:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13121:17:80"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "13111:6:80"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "13089:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13082:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13082:26:80"
                      },
                      "nodeType": "YulIf",
                      "src": "13079:61:80"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "13199:111:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13220:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "13227:3:80",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "13232:10:80",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "13223:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13223:20:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "13213:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13213:31:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "13213:31:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13264:1:80",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13267:4:80",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "13257:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13257:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "13257:15:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13292:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13295:4:80",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "13285:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13285:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "13285:15:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "13155:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "13178:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13186:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "13175:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13175:14:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13152:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13152:38:80"
                      },
                      "nodeType": "YulIf",
                      "src": "13149:161:80"
                    }
                  ]
                },
                "name": "extract_byte_array_length",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "12971:4:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "12980:6:80",
                    "type": ""
                  }
                ],
                "src": "12936:380:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13495:223:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13512:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13523:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13505:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13505:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13505:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13546:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13557:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13542:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13542:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13562:2:80",
                            "type": "",
                            "value": "33"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13535:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13535:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13535:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13585:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13596:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13581:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13581:18:80"
                          },
                          {
                            "hexValue": "476f7665726e6f723a2070726f706f73616c206e6f7420737563636573736675",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "13601:34:80",
                            "type": "",
                            "value": "Governor: proposal not successfu"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13574:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13574:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13574:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13656:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13667:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13652:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13652:18:80"
                          },
                          {
                            "hexValue": "6c",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "13672:3:80",
                            "type": "",
                            "value": "l"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13645:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13645:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13645:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13685:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13697:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13708:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13693:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13693:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "13685:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13472:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "13486:4:80",
                    "type": ""
                  }
                ],
                "src": "13321:397:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13804:103:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "13850:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13859:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13862:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "13852:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13852:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "13852:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "13825:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13834:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "13821:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13821:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13846:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "13817:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13817:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "13814:52:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13875:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13891:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "13885:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13885:16:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "13875:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13770:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "13781:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "13793:6:80",
                    "type": ""
                  }
                ],
                "src": "13723:184:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13973:400:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13983:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14003:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "13997:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13997:12:80"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "13987:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14025:3:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14030:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14018:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14018:19:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14018:19:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14046:14:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14056:4:80",
                        "type": "",
                        "value": "0x20"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "14050:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14069:19:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14080:3:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14085:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14076:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14076:12:80"
                      },
                      "variableNames": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "14069:3:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14097:28:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14115:5:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14122:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14111:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14111:14:80"
                      },
                      "variables": [
                        {
                          "name": "srcPtr",
                          "nodeType": "YulTypedName",
                          "src": "14101:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14134:10:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14143:1:80",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "14138:1:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "14202:146:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "14223:3:80"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "14238:6:80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "14232:5:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14232:13:80"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "14255:3:80",
                                              "type": "",
                                              "value": "160"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "14260:1:80",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "14251:3:80"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14251:11:80"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14264:1:80",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "14247:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14247:19:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "14228:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14228:39:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "14216:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14216:52:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14216:52:80"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "14281:19:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "14292:3:80"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "14297:2:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14288:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14288:12:80"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14281:3:80"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "14313:25:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "14327:6:80"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "14335:2:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14323:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14323:15:80"
                            },
                            "variableNames": [
                              {
                                "name": "srcPtr",
                                "nodeType": "YulIdentifier",
                                "src": "14313:6:80"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "14164:1:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14167:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14161:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14161:13:80"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "14175:18:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "14177:14:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "14186:1:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14189:1:80",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14182:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14182:9:80"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "14177:1:80"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "14157:3:80",
                        "statements": []
                      },
                      "src": "14153:195:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14357:10:80",
                      "value": {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14364:3:80"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "14357:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_array_address_dyn",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "13950:5:80",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "13957:3:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "13965:3:80",
                    "type": ""
                  }
                ],
                "src": "13912:461:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14439:374:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14449:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14469:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "14463:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14463:12:80"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "14453:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14491:3:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14496:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14484:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14484:19:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14484:19:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14512:14:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14522:4:80",
                        "type": "",
                        "value": "0x20"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "14516:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14535:19:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14546:3:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14551:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14542:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14542:12:80"
                      },
                      "variableNames": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "14535:3:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14563:28:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14581:5:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14588:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14577:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14577:14:80"
                      },
                      "variables": [
                        {
                          "name": "srcPtr",
                          "nodeType": "YulTypedName",
                          "src": "14567:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14600:10:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14609:1:80",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "14604:1:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "14668:120:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "14689:3:80"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "14700:6:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "14694:5:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14694:13:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "14682:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14682:26:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14682:26:80"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "14721:19:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "14732:3:80"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "14737:2:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14728:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14728:12:80"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14721:3:80"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "14753:25:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "14767:6:80"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "14775:2:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14763:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14763:15:80"
                            },
                            "variableNames": [
                              {
                                "name": "srcPtr",
                                "nodeType": "YulIdentifier",
                                "src": "14753:6:80"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "14630:1:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14633:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14627:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14627:13:80"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "14641:18:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "14643:14:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "14652:1:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14655:1:80",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14648:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14648:9:80"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "14643:1:80"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "14623:3:80",
                        "statements": []
                      },
                      "src": "14619:169:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14797:10:80",
                      "value": {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14804:3:80"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "14797:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_array_uint256_dyn",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "14416:5:80",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "14423:3:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "14431:3:80",
                    "type": ""
                  }
                ],
                "src": "14378:435:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14877:532:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14887:16:80",
                      "value": {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14900:3:80"
                      },
                      "variables": [
                        {
                          "name": "pos_1",
                          "nodeType": "YulTypedName",
                          "src": "14891:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14912:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14932:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "14926:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14926:12:80"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "14916:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14954:3:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14959:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14947:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14947:19:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14947:19:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14975:14:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14985:4:80",
                        "type": "",
                        "value": "0x20"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "14979:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14998:19:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "15009:3:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15014:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15005:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15005:12:80"
                      },
                      "variableNames": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "14998:3:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15026:47:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos_1",
                                "nodeType": "YulIdentifier",
                                "src": "15046:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15057:1:80",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "15060:6:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "15053:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15053:14:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15042:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15042:26:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15070:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15038:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15038:35:80"
                      },
                      "variables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "15030:4:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15082:28:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15100:5:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15107:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15096:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15096:14:80"
                      },
                      "variables": [
                        {
                          "name": "srcPtr",
                          "nodeType": "YulTypedName",
                          "src": "15086:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15119:10:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15128:1:80",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "15123:1:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "15187:196:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "15208:3:80"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "tail",
                                          "nodeType": "YulIdentifier",
                                          "src": "15221:4:80"
                                        },
                                        {
                                          "name": "pos_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "15227:5:80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "15217:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15217:16:80"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15239:2:80",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "15235:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15235:7:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "15213:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "15213:30:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "15201:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15201:43:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "15201:43:80"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "15257:46:80",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "15289:6:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "15283:5:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "15283:13:80"
                                },
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15298:4:80"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_string",
                                "nodeType": "YulIdentifier",
                                "src": "15265:17:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15265:38:80"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "15257:4:80"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "15316:25:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "15330:6:80"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "15338:2:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "15326:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15326:15:80"
                            },
                            "variableNames": [
                              {
                                "name": "srcPtr",
                                "nodeType": "YulIdentifier",
                                "src": "15316:6:80"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "15354:19:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "15365:3:80"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "15370:2:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "15361:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15361:12:80"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15354:3:80"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "15149:1:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "15152:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "15146:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15146:13:80"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "15160:18:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "15162:14:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "15171:1:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15174:1:80",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "15167:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15167:9:80"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "15162:1:80"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "15142:3:80",
                        "statements": []
                      },
                      "src": "15138:245:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "15392:11:80",
                      "value": {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15399:4:80"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "15392:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_array_bytes_dyn",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "14854:5:80",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "14861:3:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "14869:3:80",
                    "type": ""
                  }
                ],
                "src": "14818:591:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15803:449:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15820:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15831:3:80",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15813:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15813:22:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15813:22:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15844:71:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15887:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15899:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15910:3:80",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15895:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15895:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_address_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "15858:28:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15858:57:80"
                      },
                      "variables": [
                        {
                          "name": "tail_1",
                          "nodeType": "YulTypedName",
                          "src": "15848:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15935:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15946:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15931:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15931:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "15955:6:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15963:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "15951:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15951:22:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15924:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15924:50:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15924:50:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15983:58:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "16026:6:80"
                          },
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "16034:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_uint256_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "15997:28:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15997:44:80"
                      },
                      "variables": [
                        {
                          "name": "tail_2",
                          "nodeType": "YulTypedName",
                          "src": "15987:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16061:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16072:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16057:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16057:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "16081:6:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16089:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "16077:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16077:22:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "16050:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16050:50:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16050:50:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "16109:50:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "16144:6:80"
                          },
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "16152:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_bytes_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "16117:26:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16117:42:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "16109:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16179:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16190:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16175:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16175:18:80"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "16195:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "16168:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16168:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16168:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16222:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16233:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16218:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16218:19:80"
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "16239:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "16211:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16211:35:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16211:35:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_rational_0_by_1_t_bytes32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "15740:9:80",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "15751:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "15759:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "15767:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "15775:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "15783:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "15794:4:80",
                    "type": ""
                  }
                ],
                "src": "15414:838:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "16338:103:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "16384:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16393:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16396:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "16386:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16386:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "16386:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "16359:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16368:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "16355:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16355:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16380:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "16351:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16351:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "16348:52:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "16409:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16425:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "16419:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16419:16:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "16409:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes32_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "16304:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "16315:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "16327:6:80",
                    "type": ""
                  }
                ],
                "src": "16257:184:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "16863:493:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16880:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16891:3:80",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "16873:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16873:22:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16873:22:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16904:71:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16947:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16959:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16970:3:80",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16955:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16955:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_address_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "16918:28:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16918:57:80"
                      },
                      "variables": [
                        {
                          "name": "tail_1",
                          "nodeType": "YulTypedName",
                          "src": "16908:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16995:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17006:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16991:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16991:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "17015:6:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17023:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "17011:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17011:22:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "16984:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16984:50:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16984:50:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "17043:58:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "17086:6:80"
                          },
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "17094:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_uint256_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "17057:28:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17057:44:80"
                      },
                      "variables": [
                        {
                          "name": "tail_2",
                          "nodeType": "YulTypedName",
                          "src": "17047:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17121:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17132:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17117:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17117:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "17141:6:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17149:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "17137:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17137:22:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17110:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17110:50:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17110:50:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "17169:50:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "17204:6:80"
                          },
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "17212:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_bytes_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "17177:26:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17177:42:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "17169:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17239:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17250:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17235:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17235:18:80"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "17255:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17228:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17228:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17228:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17282:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17293:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17278:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17278:19:80"
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "17299:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17271:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17271:35:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17271:35:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17326:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17337:3:80",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17322:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17322:19:80"
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "17343:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17315:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17315:35:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17315:35:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_rational_0_by_1_t_bytes32_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32_t_bytes32_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "16792:9:80",
                    "type": ""
                  },
                  {
                    "name": "value5",
                    "nodeType": "YulTypedName",
                    "src": "16803:6:80",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "16811:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "16819:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "16827:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "16835:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "16843:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "16854:4:80",
                    "type": ""
                  }
                ],
                "src": "16446:910:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "17393:95:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17410:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17417:3:80",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17422:10:80",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "17413:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17413:20:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17403:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17403:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17403:31:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17450:1:80",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17453:4:80",
                            "type": "",
                            "value": "0x11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17443:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17443:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17443:15:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17474:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17477:4:80",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "17467:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17467:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17467:15:80"
                    }
                  ]
                },
                "name": "panic_error_0x11",
                "nodeType": "YulFunctionDefinition",
                "src": "17361:127:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "17541:80:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "17568:22:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "17570:16:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17570:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "17570:18:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "17557:1:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "17564:1:80"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "17560:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17560:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "17554:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17554:13:80"
                      },
                      "nodeType": "YulIf",
                      "src": "17551:39:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "17599:16:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "17610:1:80"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "17613:1:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17606:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17606:9:80"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "17599:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_add_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "17524:1:80",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "17527:1:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "17533:3:80",
                    "type": ""
                  }
                ],
                "src": "17493:128:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "17755:119:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "17765:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17777:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17788:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17773:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17773:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "17765:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17807:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17818:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17800:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17800:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17800:25:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17845:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17856:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17841:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17841:18:80"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "17861:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17834:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17834:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17834:34:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "17716:9:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "17727:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "17735:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "17746:4:80",
                    "type": ""
                  }
                ],
                "src": "17626:248:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "18053:237:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18070:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18081:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18063:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18063:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18063:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18104:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18115:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18100:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18100:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18120:2:80",
                            "type": "",
                            "value": "47"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18093:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18093:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18093:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18143:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18154:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18139:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18139:18:80"
                          },
                          {
                            "hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "18159:34:80",
                            "type": "",
                            "value": "AccessControl: can only renounce"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18132:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18132:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18132:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18214:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18225:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18210:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18210:18:80"
                          },
                          {
                            "hexValue": "20726f6c657320666f722073656c66",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "18230:17:80",
                            "type": "",
                            "value": " roles for self"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18203:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18203:45:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18203:45:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "18257:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18269:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18280:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18265:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18265:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "18257:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "18030:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "18044:4:80",
                    "type": ""
                  }
                ],
                "src": "17879:411:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "18448:173:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "18458:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18470:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18481:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18466:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18466:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "18458:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18500:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "18511:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18493:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18493:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18493:25:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18538:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18549:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18534:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18534:18:80"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "18554:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18527:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18527:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18527:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18581:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18592:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18577:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18577:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "18601:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18609:4:80",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "18597:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18597:17:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18570:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18570:45:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18570:45:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32_t_uint256_t_uint8__to_t_bytes32_t_uint256_t_uint8__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "18401:9:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "18412:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "18420:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "18428:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "18439:4:80",
                    "type": ""
                  }
                ],
                "src": "18295:326:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "18678:116:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "18737:22:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "18739:16:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18739:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "18739:18:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "18709:1:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "18702:6:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18702:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "18695:6:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18695:17:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "18717:1:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18728:1:80",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "18724:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18724:6:80"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "18732:1:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "18720:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18720:14:80"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "18714:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18714:21:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18691:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18691:45:80"
                      },
                      "nodeType": "YulIf",
                      "src": "18688:71:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "18768:20:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "18783:1:80"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "18786:1:80"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "18779:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18779:9:80"
                      },
                      "variableNames": [
                        {
                          "name": "product",
                          "nodeType": "YulIdentifier",
                          "src": "18768:7:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_mul_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "18657:1:80",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "18660:1:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "product",
                    "nodeType": "YulTypedName",
                    "src": "18666:7:80",
                    "type": ""
                  }
                ],
                "src": "18626:168:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "18845:171:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "18876:111:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "18897:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "18904:3:80",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "18909:10:80",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "18900:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "18900:20:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "18890:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18890:31:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "18890:31:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "18941:1:80",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "18944:4:80",
                                  "type": "",
                                  "value": "0x12"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "18934:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18934:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "18934:15:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "18969:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "18972:4:80",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "18962:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18962:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "18962:15:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "18865:1:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "18858:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18858:9:80"
                      },
                      "nodeType": "YulIf",
                      "src": "18855:132:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "18996:14:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "19005:1:80"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "19008:1:80"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "19001:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19001:9:80"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "18996:1:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_div_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "18830:1:80",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "18833:1:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "18839:1:80",
                    "type": ""
                  }
                ],
                "src": "18799:217:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "19070:76:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "19092:22:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "19094:16:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "19094:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "19094:18:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "19086:1:80"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "19089:1:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "19083:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19083:8:80"
                      },
                      "nodeType": "YulIf",
                      "src": "19080:34:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "19123:17:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "19135:1:80"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "19138:1:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19131:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19131:9:80"
                      },
                      "variableNames": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "19123:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_sub_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "19052:1:80",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "19055:1:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "diff",
                    "nodeType": "YulTypedName",
                    "src": "19061:4:80",
                    "type": ""
                  }
                ],
                "src": "19021:125:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "19325:174:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19342:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19353:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "19335:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19335:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "19335:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "19376:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19387:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19372:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19372:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19392:2:80",
                            "type": "",
                            "value": "24"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "19365:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19365:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "19365:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "19415:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19426:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19411:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19411:18:80"
                          },
                          {
                            "hexValue": "50726f706f73616c2062656c6f77207468726573686f6c64",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "19431:26:80",
                            "type": "",
                            "value": "Proposal below threshold"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "19404:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19404:54:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "19404:54:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "19467:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19479:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19490:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19475:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19475:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "19467:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_3f6e45275d065aa13d86991cade5f99a8a63c55fa182497aa674a14110f12414__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "19302:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "19316:4:80",
                    "type": ""
                  }
                ],
                "src": "19151:348:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "19857:405:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19874:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19885:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "19867:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19867:22:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "19867:22:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "19898:71:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "19941:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "19953:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19964:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19949:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19949:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_address_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "19912:28:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19912:57:80"
                      },
                      "variables": [
                        {
                          "name": "tail_1",
                          "nodeType": "YulTypedName",
                          "src": "19902:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "19989:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20000:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19985:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19985:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "20009:6:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20017:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "20005:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20005:22:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "19978:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19978:50:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "19978:50:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "20037:58:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "20080:6:80"
                          },
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "20088:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_uint256_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "20051:28:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20051:44:80"
                      },
                      "variables": [
                        {
                          "name": "tail_2",
                          "nodeType": "YulTypedName",
                          "src": "20041:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20115:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20126:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20111:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20111:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "20135:6:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20143:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "20131:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20131:22:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "20104:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20104:50:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "20104:50:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "20163:50:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "20198:6:80"
                          },
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "20206:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_bytes_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "20171:26:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20171:42:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "20163:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20233:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20244:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20229:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20229:18:80"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "20249:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "20222:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20222:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "20222:34:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "19802:9:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "19813:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "19821:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "19829:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "19837:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "19848:4:80",
                    "type": ""
                  }
                ],
                "src": "19504:758:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "20441:179:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20458:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20469:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "20451:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20451:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "20451:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20492:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20503:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20488:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20488:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20508:2:80",
                            "type": "",
                            "value": "29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "20481:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20481:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "20481:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20531:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20542:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20527:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20527:18:80"
                          },
                          {
                            "hexValue": "71756f72756d4e756d657261746f72203e2044656e6f6d696e61746f72",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "20547:31:80",
                            "type": "",
                            "value": "quorumNumerator > Denominator"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "20520:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20520:59:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "20520:59:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "20588:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20600:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20611:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20596:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20596:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "20588:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_a64000c09bcc896d8b2adceb9571e34dc548b6385d5291f0ff78341396a1053e__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "20418:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "20432:4:80",
                    "type": ""
                  }
                ],
                "src": "20267:353:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "21014:397:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "21031:3:80"
                          },
                          {
                            "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "21036:25:80",
                            "type": "",
                            "value": "AccessControl: account "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "21024:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21024:38:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "21024:38:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "21071:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21091:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "21085:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21085:13:80"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "21075:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "21133:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21141:4:80",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21129:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21129:17:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "21152:3:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21157:2:80",
                                "type": "",
                                "value": "23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21148:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21148:12:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "21162:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "21107:21:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21107:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "21107:62:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "21178:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "21192:3:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "21197:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21188:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21188:16:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "21182:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "21224:2:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21228:2:80",
                                "type": "",
                                "value": "23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21220:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21220:11:80"
                          },
                          {
                            "hexValue": "206973206d697373696e6720726f6c6520",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "21233:19:80",
                            "type": "",
                            "value": " is missing role "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "21213:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21213:40:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "21213:40:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "21262:29:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "21284:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "21278:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21278:13:80"
                      },
                      "variables": [
                        {
                          "name": "length_1",
                          "nodeType": "YulTypedName",
                          "src": "21266:8:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "21326:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21334:4:80",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21322:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21322:17:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "21345:2:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21349:2:80",
                                "type": "",
                                "value": "40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21341:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21341:11:80"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "21354:8:80"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "21300:21:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21300:63:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "21300:63:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "21372:33:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "21387:2:80"
                              },
                              {
                                "name": "length_1",
                                "nodeType": "YulIdentifier",
                                "src": "21391:8:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21383:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21383:17:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21402:2:80",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21379:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21379:26:80"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "21372:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "20982:3:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "20987:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "20995:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "21006:3:80",
                    "type": ""
                  }
                ],
                "src": "20625:786:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "21590:225:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21607:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21618:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "21600:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21600:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "21600:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "21641:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21652:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21637:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21637:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21657:2:80",
                            "type": "",
                            "value": "35"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "21630:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21630:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "21630:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "21680:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21691:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21676:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21676:18:80"
                          },
                          {
                            "hexValue": "476f7665726e6f723a20766f7465206e6f742063757272656e746c7920616374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "21696:34:80",
                            "type": "",
                            "value": "Governor: vote not currently act"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "21669:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21669:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "21669:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "21751:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21762:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21747:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21747:18:80"
                          },
                          {
                            "hexValue": "697665",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "21767:5:80",
                            "type": "",
                            "value": "ive"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "21740:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21740:33:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "21740:33:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "21782:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21794:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21805:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21790:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21790:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "21782:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "21567:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "21581:4:80",
                    "type": ""
                  }
                ],
                "src": "21416:399:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "22021:241:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22038:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "22049:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "22031:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22031:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "22031:25:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22076:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22087:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22072:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22072:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "22096:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22104:4:80",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "22092:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22092:17:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "22065:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22065:45:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "22065:45:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22130:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22141:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22126:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22126:18:80"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "22146:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "22119:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22119:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "22119:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22173:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22184:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22169:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22169:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22189:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "22162:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22162:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "22162:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "22202:54:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "22228:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22240:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22251:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22236:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22236:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_string",
                          "nodeType": "YulIdentifier",
                          "src": "22210:17:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22210:46:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "22202:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "21966:9:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "21977:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "21985:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "21993:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "22001:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "22012:4:80",
                    "type": ""
                  }
                ],
                "src": "21820:442:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "22345:199:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "22391:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22400:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22403:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "22393:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22393:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "22393:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "22366:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22375:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "22362:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22362:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22387:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "22358:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22358:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "22355:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "22416:29:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22435:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "22429:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22429:16:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "22420:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "22498:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22507:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22510:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "22500:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22500:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "22500:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "22467:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "22488:5:80"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "22481:6:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22481:13:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "22474:6:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22474:21:80"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "22464:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22464:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "22457:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22457:40:80"
                      },
                      "nodeType": "YulIf",
                      "src": "22454:60:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "22523:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "22533:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "22523:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "22311:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "22322:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "22334:6:80",
                    "type": ""
                  }
                ],
                "src": "22267:277:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "22629:208:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "22675:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22684:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22687:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "22677:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22677:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "22677:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "22650:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22659:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "22646:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22646:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22671:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "22642:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22642:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "22639:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "22700:29:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22719:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "22713:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22713:16:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "22704:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "22791:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22800:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22803:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "22793:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22793:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "22793:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "22751:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "22762:5:80"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "22777:2:80",
                                            "type": "",
                                            "value": "96"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "22781:1:80",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "22773:3:80"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22773:10:80"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22785:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "22769:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22769:18:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "22758:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22758:30:80"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "22748:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22748:41:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "22741:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22741:49:80"
                      },
                      "nodeType": "YulIf",
                      "src": "22738:69:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "22816:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "22826:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "22816:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint96_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "22595:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "22606:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "22618:6:80",
                    "type": ""
                  }
                ],
                "src": "22549:288:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "23016:297:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23033:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23044:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23026:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23026:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23026:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23067:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23078:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23063:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23063:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23083:2:80",
                            "type": "",
                            "value": "67"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23056:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23056:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23056:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23106:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23117:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23102:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23102:18:80"
                          },
                          {
                            "hexValue": "476f7665726e6f72436f6d7061746962696c697479427261766f3a2070726f70",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "23122:34:80",
                            "type": "",
                            "value": "GovernorCompatibilityBravo: prop"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23095:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23095:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23095:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23177:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23188:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23173:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23173:18:80"
                          },
                          {
                            "hexValue": "6f73657220766f7465732062656c6f772070726f706f73616c20746872657368",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "23193:34:80",
                            "type": "",
                            "value": "oser votes below proposal thresh"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23166:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23166:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23166:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23248:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23259:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23244:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23244:19:80"
                          },
                          {
                            "hexValue": "6f6c64",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "23265:5:80",
                            "type": "",
                            "value": "old"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23237:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23237:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23237:34:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "23280:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23292:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23303:3:80",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23288:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23288:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "23280:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_1600c4dfd0321c3477f2e1e913760ed9f016c92abd9858f5b9c3de2925772cab__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "22993:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "23007:4:80",
                    "type": ""
                  }
                ],
                "src": "22842:471:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "23492:223:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23509:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23520:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23502:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23502:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23502:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23543:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23554:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23539:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23539:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23559:2:80",
                            "type": "",
                            "value": "33"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23532:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23532:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23532:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23582:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23593:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23578:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23578:18:80"
                          },
                          {
                            "hexValue": "476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e6774",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "23598:34:80",
                            "type": "",
                            "value": "Governor: invalid proposal lengt"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23571:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23571:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23571:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23653:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23664:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23649:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23649:18:80"
                          },
                          {
                            "hexValue": "68",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "23669:3:80",
                            "type": "",
                            "value": "h"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23642:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23642:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23642:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "23682:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23694:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23705:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23690:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23690:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "23682:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "23469:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "23483:4:80",
                    "type": ""
                  }
                ],
                "src": "23318:397:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "23894:174:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23911:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23922:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23904:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23904:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23904:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23945:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23956:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23941:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23941:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23961:2:80",
                            "type": "",
                            "value": "24"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23934:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23934:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23934:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23984:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23995:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23980:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23980:18:80"
                          },
                          {
                            "hexValue": "476f7665726e6f723a20656d7074792070726f706f73616c",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "24000:26:80",
                            "type": "",
                            "value": "Governor: empty proposal"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23973:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23973:54:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23973:54:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "24036:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24048:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24059:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24044:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24044:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "24036:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "23871:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "23885:4:80",
                    "type": ""
                  }
                ],
                "src": "23720:348:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "24247:223:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24264:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24275:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "24257:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24257:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "24257:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24298:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "24309:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24294:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24294:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24314:2:80",
                            "type": "",
                            "value": "33"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "24287:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24287:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "24287:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24337:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "24348:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24333:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24333:18:80"
                          },
                          {
                            "hexValue": "476f7665726e6f723a2070726f706f73616c20616c7265616479206578697374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "24353:34:80",
                            "type": "",
                            "value": "Governor: proposal already exist"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "24326:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24326:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "24326:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24408:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "24419:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24404:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24404:18:80"
                          },
                          {
                            "hexValue": "73",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "24424:3:80",
                            "type": "",
                            "value": "s"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "24397:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24397:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "24397:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "24437:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24449:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24460:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24445:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24445:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "24437:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "24224:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "24238:4:80",
                    "type": ""
                  }
                ],
                "src": "24073:397:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "24522:189:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "24532:28:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "24550:2:80",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "24554:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "24546:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24546:10:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24558:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "24542:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24542:18:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "24536:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "24569:21:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "24584:1:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "24587:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "24580:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24580:10:80"
                      },
                      "variables": [
                        {
                          "name": "x_1",
                          "nodeType": "YulTypedName",
                          "src": "24573:3:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "24599:21:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "24614:1:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "24617:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "24610:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24610:10:80"
                      },
                      "variables": [
                        {
                          "name": "y_1",
                          "nodeType": "YulTypedName",
                          "src": "24603:3:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "24654:22:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "24656:16:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "24656:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "24656:18:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x_1",
                            "nodeType": "YulIdentifier",
                            "src": "24635:3:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "24644:2:80"
                              },
                              {
                                "name": "y_1",
                                "nodeType": "YulIdentifier",
                                "src": "24648:3:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "24640:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24640:12:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "24632:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24632:21:80"
                      },
                      "nodeType": "YulIf",
                      "src": "24629:47:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "24685:20:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "x_1",
                            "nodeType": "YulIdentifier",
                            "src": "24696:3:80"
                          },
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "24701:3:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24692:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24692:13:80"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "24685:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_add_t_uint64",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "24505:1:80",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "24508:1:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "24514:3:80",
                    "type": ""
                  }
                ],
                "src": "24475:236:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "24759:59:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "24776:3:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "24785:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24800:2:80",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24804:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "24796:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24796:10:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24808:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "24792:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24792:18:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "24781:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24781:30:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "24769:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24769:43:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "24769:43:80"
                    }
                  ]
                },
                "name": "abi_encode_uint64",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "24743:5:80",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "24750:3:80",
                    "type": ""
                  }
                ],
                "src": "24716:102:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "25404:1303:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "25414:13:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25424:3:80",
                        "type": "",
                        "value": "288"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "25418:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25443:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "25454:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "25436:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25436:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "25436:25:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "25470:12:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25480:2:80",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "25474:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "25502:9:80"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "25513:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "25498:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25498:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "25522:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25538:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25543:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "25534:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25534:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25547:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "25530:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25530:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "25518:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25518:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "25491:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25491:60:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "25491:60:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "25571:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25582:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "25567:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25567:18:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "25587:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "25560:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25560:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "25560:30:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "25599:70:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "25642:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "25654:9:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "25665:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "25650:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25650:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_address_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "25613:28:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25613:56:80"
                      },
                      "variables": [
                        {
                          "name": "tail_1",
                          "nodeType": "YulTypedName",
                          "src": "25603:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "25689:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25700:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "25685:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25685:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "25709:6:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "25717:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "25705:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25705:22:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "25678:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25678:50:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "25678:50:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "25737:58:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "25780:6:80"
                          },
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "25788:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_uint256_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "25751:28:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25751:44:80"
                      },
                      "variables": [
                        {
                          "name": "tail_2",
                          "nodeType": "YulTypedName",
                          "src": "25741:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "25815:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25826:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "25811:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25811:19:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "25836:6:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "25844:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "25832:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25832:22:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "25804:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25804:51:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "25804:51:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "25864:17:80",
                      "value": {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "25875:6:80"
                      },
                      "variables": [
                        {
                          "name": "pos",
                          "nodeType": "YulTypedName",
                          "src": "25868:3:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "25890:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "25910:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "25904:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25904:13:80"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "25894:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "25933:6:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "25941:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "25926:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25926:22:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "25926:22:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "25957:22:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "25968:6:80"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "25976:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25964:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25964:15:80"
                      },
                      "variableNames": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "25957:3:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "25988:50:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "26010:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26022:1:80",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "26025:6:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "26018:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26018:14:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "26006:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26006:27:80"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "26035:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26002:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26002:36:80"
                      },
                      "variables": [
                        {
                          "name": "tail_3",
                          "nodeType": "YulTypedName",
                          "src": "25992:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "26047:29:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "26065:6:80"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "26073:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26061:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26061:15:80"
                      },
                      "variables": [
                        {
                          "name": "srcPtr",
                          "nodeType": "YulTypedName",
                          "src": "26051:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "26085:10:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26094:1:80",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "26089:1:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "26153:203:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "26174:3:80"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "tail_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "26187:6:80"
                                        },
                                        {
                                          "name": "tail_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "26195:6:80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "26183:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26183:19:80"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "26208:2:80",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "26204:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26204:7:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "26179:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "26179:33:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "26167:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "26167:46:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "26167:46:80"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "26226:50:80",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "26260:6:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "26254:5:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "26254:13:80"
                                },
                                {
                                  "name": "tail_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "26269:6:80"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_string",
                                "nodeType": "YulIdentifier",
                                "src": "26236:17:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "26236:40:80"
                            },
                            "variableNames": [
                              {
                                "name": "tail_3",
                                "nodeType": "YulIdentifier",
                                "src": "26226:6:80"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "26289:25:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "26303:6:80"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "26311:2:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "26299:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "26299:15:80"
                            },
                            "variableNames": [
                              {
                                "name": "srcPtr",
                                "nodeType": "YulIdentifier",
                                "src": "26289:6:80"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "26327:19:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "26338:3:80"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "26343:2:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "26334:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "26334:12:80"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "26327:3:80"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "26115:1:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "26118:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "26112:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26112:13:80"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "26126:18:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "26128:14:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "26137:1:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "26140:1:80",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "26133:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "26133:9:80"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "26128:1:80"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "26108:3:80",
                        "statements": []
                      },
                      "src": "26104:252:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "26376:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26387:3:80",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "26372:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26372:19:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail_3",
                                "nodeType": "YulIdentifier",
                                "src": "26397:6:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "26405:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "26393:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26393:22:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "26365:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26365:51:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "26365:51:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "26425:56:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "26466:6:80"
                          },
                          {
                            "name": "tail_3",
                            "nodeType": "YulIdentifier",
                            "src": "26474:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_bytes_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "26439:26:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26439:42:80"
                      },
                      "variables": [
                        {
                          "name": "tail_4",
                          "nodeType": "YulTypedName",
                          "src": "26429:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value6",
                            "nodeType": "YulIdentifier",
                            "src": "26508:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "26520:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26531:3:80",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "26516:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26516:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_uint64",
                          "nodeType": "YulIdentifier",
                          "src": "26490:17:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26490:46:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "26490:46:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value7",
                            "nodeType": "YulIdentifier",
                            "src": "26563:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "26575:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26586:3:80",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "26571:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26571:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_uint64",
                          "nodeType": "YulIdentifier",
                          "src": "26545:17:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26545:46:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "26545:46:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "26611:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26622:3:80",
                                "type": "",
                                "value": "256"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "26607:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26607:19:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail_4",
                                "nodeType": "YulIdentifier",
                                "src": "26632:6:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "26640:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "26628:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26628:22:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "26600:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26600:51:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "26600:51:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "26660:41:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value8",
                            "nodeType": "YulIdentifier",
                            "src": "26686:6:80"
                          },
                          {
                            "name": "tail_4",
                            "nodeType": "YulIdentifier",
                            "src": "26694:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_string",
                          "nodeType": "YulIdentifier",
                          "src": "26668:17:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26668:33:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "26660:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "25309:9:80",
                    "type": ""
                  },
                  {
                    "name": "value8",
                    "nodeType": "YulTypedName",
                    "src": "25320:6:80",
                    "type": ""
                  },
                  {
                    "name": "value7",
                    "nodeType": "YulTypedName",
                    "src": "25328:6:80",
                    "type": ""
                  },
                  {
                    "name": "value6",
                    "nodeType": "YulTypedName",
                    "src": "25336:6:80",
                    "type": ""
                  },
                  {
                    "name": "value5",
                    "nodeType": "YulTypedName",
                    "src": "25344:6:80",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "25352:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "25360:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "25368:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "25376:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "25384:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "25395:4:80",
                    "type": ""
                  }
                ],
                "src": "24823:1884:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "26841:175:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "26851:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26863:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26874:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26859:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26859:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "26851:4:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "26886:29:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26904:3:80",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26909:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "26900:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26900:11:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26913:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "26896:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26896:19:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "26890:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26931:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "26946:6:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "26954:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "26942:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26942:15:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "26924:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26924:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "26924:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "26978:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26989:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "26974:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26974:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "26998:6:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "27006:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "26994:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26994:15:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "26967:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26967:43:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "26967:43:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "26802:9:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "26813:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "26821:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "26832:4:80",
                    "type": ""
                  }
                ],
                "src": "26712:304:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "27195:181:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27212:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27223:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "27205:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27205:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "27205:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "27246:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "27257:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "27242:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27242:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27262:2:80",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "27235:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27235:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "27235:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "27285:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "27296:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "27281:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27281:18:80"
                          },
                          {
                            "hexValue": "70726f706f73616c4e756d657261746f72203e2044656e6f6d696e61746f72",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "27301:33:80",
                            "type": "",
                            "value": "proposalNumerator > Denominator"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "27274:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27274:61:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "27274:61:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "27344:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27356:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27367:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27352:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27352:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "27344:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_0fcf173f1bde133af2b1bcbd64cbceefebae51775d6ea3d3574428ce6085d7c1__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "27172:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "27186:4:80",
                    "type": ""
                  }
                ],
                "src": "27021:355:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "27555:171:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27572:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27583:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "27565:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27565:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "27565:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "27606:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "27617:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "27602:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27602:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27622:2:80",
                            "type": "",
                            "value": "21"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "27595:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27595:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "27595:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "27645:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "27656:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "27641:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27641:18:80"
                          },
                          {
                            "hexValue": "566f74696e6720706572696f6420746f6f206c6f77",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "27661:23:80",
                            "type": "",
                            "value": "Voting period too low"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "27634:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27634:51:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "27634:51:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "27694:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27706:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27717:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27702:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27702:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "27694:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_45d5930a4426e9d2d1b4f1f6409a1e566e48968b077a6aeae252991ffd79df7f__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "27532:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "27546:4:80",
                    "type": ""
                  }
                ],
                "src": "27381:345:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "27860:145:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "27870:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27882:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27893:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27878:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27878:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "27870:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27912:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "27927:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27943:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27948:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "27939:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27939:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27952:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "27935:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27935:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "27923:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27923:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "27905:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27905:51:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "27905:51:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "27976:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "27987:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "27972:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "27972:18:80"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "27992:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "27965:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27965:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "27965:34:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "27821:9:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "27832:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "27840:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "27851:4:80",
                    "type": ""
                  }
                ],
                "src": "27731:274:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "28042:95:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28059:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "28066:3:80",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "28071:10:80",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "28062:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28062:20:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "28052:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28052:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "28052:31:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28099:1:80",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28102:4:80",
                            "type": "",
                            "value": "0x32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "28092:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28092:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "28092:15:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28123:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28126:4:80",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "28116:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28116:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "28116:15:80"
                    }
                  ]
                },
                "name": "panic_error_0x32",
                "nodeType": "YulFunctionDefinition",
                "src": "28010:127:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "28189:89:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "28216:22:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "28218:16:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "28218:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "28218:18:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "28209:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "28202:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28202:13:80"
                      },
                      "nodeType": "YulIf",
                      "src": "28199:39:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "28247:25:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "28258:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "28269:1:80",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "28265:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28265:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28254:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28254:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "ret",
                          "nodeType": "YulIdentifier",
                          "src": "28247:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "decrement_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "28171:5:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "ret",
                    "nodeType": "YulTypedName",
                    "src": "28181:3:80",
                    "type": ""
                  }
                ],
                "src": "28142:136:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "28457:182:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28474:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28485:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "28467:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28467:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "28467:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "28508:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "28519:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "28504:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28504:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28524:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "28497:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28497:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "28497:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "28547:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "28558:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "28543:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28543:18:80"
                          },
                          {
                            "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "28563:34:80",
                            "type": "",
                            "value": "Strings: hex length insufficient"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "28536:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28536:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "28536:62:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "28607:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28619:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28630:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28615:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28615:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "28607:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "28434:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "28448:4:80",
                    "type": ""
                  }
                ],
                "src": "28283:356:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "28892:144:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "28909:3:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "28918:3:80",
                                "type": "",
                                "value": "240"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "28923:4:80",
                                "type": "",
                                "value": "6401"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "28914:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28914:14:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "28902:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28902:27:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "28902:27:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "28949:3:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "28954:1:80",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "28945:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28945:11:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "28958:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "28938:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28938:27:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "28938:27:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "28985:3:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "28990:2:80",
                                "type": "",
                                "value": "34"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "28981:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28981:12:80"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "28995:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "28974:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28974:28:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "28974:28:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "29011:19:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "29022:3:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29027:2:80",
                            "type": "",
                            "value": "66"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29018:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29018:12:80"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "29011:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "28860:3:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "28865:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "28873:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "28884:3:80",
                    "type": ""
                  }
                ],
                "src": "28644:392:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "29222:217:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "29232:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29244:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29255:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29240:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29240:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "29232:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29275:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "29286:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "29268:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29268:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "29268:25:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "29313:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "29324:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "29309:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29309:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "29333:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "29341:4:80",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "29329:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29329:17:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "29302:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29302:45:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "29302:45:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "29367:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "29378:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "29363:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29363:18:80"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "29383:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "29356:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29356:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "29356:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "29410:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "29421:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "29406:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29406:18:80"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "29426:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "29399:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29399:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "29399:34:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "29167:9:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "29178:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "29186:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "29194:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "29202:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "29213:4:80",
                    "type": ""
                  }
                ],
                "src": "29041:398:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "29618:174:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29635:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29646:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "29628:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29628:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "29628:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "29669:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "29680:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "29665:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29665:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29685:2:80",
                            "type": "",
                            "value": "24"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "29658:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29658:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "29658:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "29708:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "29719:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "29704:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29704:18:80"
                          },
                          {
                            "hexValue": "45434453413a20696e76616c6964207369676e6174757265",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "29724:26:80",
                            "type": "",
                            "value": "ECDSA: invalid signature"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "29697:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29697:54:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "29697:54:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "29760:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29772:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29783:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29768:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29768:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "29760:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "29595:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "29609:4:80",
                    "type": ""
                  }
                ],
                "src": "29444:348:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "29971:181:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29988:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29999:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "29981:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29981:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "29981:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "30022:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30033:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "30018:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30018:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30038:2:80",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "30011:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30011:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "30011:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "30061:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30072:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "30057:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30057:18:80"
                          },
                          {
                            "hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "30077:33:80",
                            "type": "",
                            "value": "ECDSA: invalid signature length"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "30050:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30050:61:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "30050:61:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "30120:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30132:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30143:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30128:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30128:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "30120:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "29948:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "29962:4:80",
                    "type": ""
                  }
                ],
                "src": "29797:355:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "30331:224:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30348:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30359:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "30341:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30341:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "30341:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "30382:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30393:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "30378:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30378:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30398:2:80",
                            "type": "",
                            "value": "34"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "30371:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30371:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "30371:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "30421:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30432:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "30417:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30417:18:80"
                          },
                          {
                            "hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "30437:34:80",
                            "type": "",
                            "value": "ECDSA: invalid signature 's' val"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "30410:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30410:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "30410:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "30492:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30503:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "30488:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30488:18:80"
                          },
                          {
                            "hexValue": "7565",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "30508:4:80",
                            "type": "",
                            "value": "ue"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "30481:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30481:32:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "30481:32:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "30522:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30534:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30545:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30530:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30530:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "30522:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "30308:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "30322:4:80",
                    "type": ""
                  }
                ],
                "src": "30157:398:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "30734:224:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30751:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30762:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "30744:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30744:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "30744:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "30785:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30796:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "30781:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30781:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30801:2:80",
                            "type": "",
                            "value": "34"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "30774:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30774:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "30774:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "30824:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30835:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "30820:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30820:18:80"
                          },
                          {
                            "hexValue": "45434453413a20696e76616c6964207369676e6174757265202776272076616c",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "30840:34:80",
                            "type": "",
                            "value": "ECDSA: invalid signature 'v' val"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "30813:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30813:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "30813:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "30895:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "30906:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "30891:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30891:18:80"
                          },
                          {
                            "hexValue": "7565",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "30911:4:80",
                            "type": "",
                            "value": "ue"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "30884:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30884:32:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "30884:32:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "30925:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30937:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30948:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30933:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30933:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "30925:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "30711:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "30725:4:80",
                    "type": ""
                  }
                ],
                "src": "30560:398:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "31137:229:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31154:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31165:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "31147:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31147:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "31147:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "31188:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31199:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "31184:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31184:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31204:2:80",
                            "type": "",
                            "value": "39"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "31177:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31177:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "31177:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "31227:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31238:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "31223:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31223:18:80"
                          },
                          {
                            "hexValue": "476f7665726e6f72566f74696e6753696d706c653a20766f746520616c726561",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "31243:34:80",
                            "type": "",
                            "value": "GovernorVotingSimple: vote alrea"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "31216:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31216:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "31216:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "31298:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31309:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "31294:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31294:18:80"
                          },
                          {
                            "hexValue": "64792063617374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "31314:9:80",
                            "type": "",
                            "value": "dy cast"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "31287:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31287:37:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "31287:37:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "31333:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31345:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31356:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31341:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31341:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "31333:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "31114:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "31128:4:80",
                    "type": ""
                  }
                ],
                "src": "30963:403:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "31545:243:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31562:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31573:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "31555:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31555:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "31555:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "31596:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31607:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "31592:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31592:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31612:2:80",
                            "type": "",
                            "value": "53"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "31585:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31585:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "31585:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "31635:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31646:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "31631:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31631:18:80"
                          },
                          {
                            "hexValue": "476f7665726e6f72566f74696e6753696d706c653a20696e76616c6964207661",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "31651:34:80",
                            "type": "",
                            "value": "GovernorVotingSimple: invalid va"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "31624:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31624:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "31624:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "31706:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "31717:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "31702:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31702:18:80"
                          },
                          {
                            "hexValue": "6c756520666f7220656e756d20566f746554797065",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "31722:23:80",
                            "type": "",
                            "value": "lue for enum VoteType"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "31695:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31695:51:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "31695:51:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "31755:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31767:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31778:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31763:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31763:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "31755:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "31522:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "31536:4:80",
                    "type": ""
                  }
                ],
                "src": "31371:417:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "31967:179:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31984:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31995:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "31977:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31977:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "31977:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "32018:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "32029:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "32014:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32014:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32034:2:80",
                            "type": "",
                            "value": "29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "32007:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32007:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "32007:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "32057:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "32068:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "32053:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32053:18:80"
                          },
                          {
                            "hexValue": "476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c206964",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "32073:31:80",
                            "type": "",
                            "value": "Governor: unknown proposal id"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "32046:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32046:59:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "32046:59:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "32114:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32126:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32137:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32122:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32122:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "32114:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "31944:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "31958:4:80",
                    "type": ""
                  }
                ],
                "src": "31793:353:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "32325:228:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32342:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32353:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "32335:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32335:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "32335:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "32376:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "32387:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "32372:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32372:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32392:2:80",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "32365:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32365:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "32365:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "32415:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "32426:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "32411:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32411:18:80"
                          },
                          {
                            "hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2036",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "32431:34:80",
                            "type": "",
                            "value": "SafeCast: value doesn't fit in 6"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "32404:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32404:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "32404:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "32486:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "32497:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "32482:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32482:18:80"
                          },
                          {
                            "hexValue": "342062697473",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "32502:8:80",
                            "type": "",
                            "value": "4 bits"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "32475:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32475:36:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "32475:36:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "32520:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32532:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32543:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32528:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32528:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "32520:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "32302:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "32316:4:80",
                    "type": ""
                  }
                ],
                "src": "32151:402:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "32732:228:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32749:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32760:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "32742:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32742:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "32742:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "32783:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "32794:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "32779:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32779:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32799:2:80",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "32772:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32772:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "32772:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "32822:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "32833:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "32818:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32818:18:80"
                          },
                          {
                            "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "32838:34:80",
                            "type": "",
                            "value": "Address: insufficient balance fo"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "32811:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32811:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "32811:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "32893:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "32904:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "32889:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32889:18:80"
                          },
                          {
                            "hexValue": "722063616c6c",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "32909:8:80",
                            "type": "",
                            "value": "r call"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "32882:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32882:36:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "32882:36:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "32927:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32939:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32950:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32935:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32935:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "32927:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "32709:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "32723:4:80",
                    "type": ""
                  }
                ],
                "src": "32558:402:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "33139:179:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33156:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33167:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "33149:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33149:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "33149:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "33190:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "33201:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "33186:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "33186:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33206:2:80",
                            "type": "",
                            "value": "29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "33179:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33179:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "33179:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "33229:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "33240:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "33225:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "33225:18:80"
                          },
                          {
                            "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "33245:31:80",
                            "type": "",
                            "value": "Address: call to non-contract"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "33218:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33218:59:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "33218:59:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "33286:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33298:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33309:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33294:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33294:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "33286:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "33116:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "33130:4:80",
                    "type": ""
                  }
                ],
                "src": "32965:353:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "33460:137:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "33470:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "33490:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "33484:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33484:13:80"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "33474:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "33532:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "33540:4:80",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "33528:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "33528:17:80"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "33547:3:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "33552:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "33506:21:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33506:53:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "33506:53:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "33568:23:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "33579:3:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "33584:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33575:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33575:16:80"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "33568:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "33436:3:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "33441:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "33452:3:80",
                    "type": ""
                  }
                ],
                "src": "33323:274:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "33815:276:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "33825:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33837:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33848:3:80",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33833:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33833:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "33825:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33868:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "33879:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "33861:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33861:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "33861:25:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "33906:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "33917:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "33902:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "33902:18:80"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "33922:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "33895:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33895:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "33895:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "33949:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "33960:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "33945:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "33945:18:80"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "33965:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "33938:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33938:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "33938:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "33992:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "34003:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "33988:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "33988:18:80"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "34008:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "33981:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33981:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "33981:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "34035:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "34046:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "34031:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "34031:19:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value4",
                                "nodeType": "YulIdentifier",
                                "src": "34056:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "34072:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "34077:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "34068:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34068:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34081:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "34064:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34064:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "34052:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "34052:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "34024:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34024:61:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "34024:61:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "33752:9:80",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "33763:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "33771:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "33779:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "33787:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "33795:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "33806:4:80",
                    "type": ""
                  }
                ],
                "src": "33602:489:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "34270:179:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34287:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34298:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "34280:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34280:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "34280:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "34321:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "34332:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "34317:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "34317:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34337:2:80",
                            "type": "",
                            "value": "29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "34310:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34310:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "34310:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "34360:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "34371:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "34356:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "34356:18:80"
                          },
                          {
                            "hexValue": "476f7665726e6f723a2070726f706f73616c206e6f7420616374697665",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "34376:31:80",
                            "type": "",
                            "value": "Governor: proposal not active"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "34349:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34349:59:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "34349:59:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "34417:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34429:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34440:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34425:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34425:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "34417:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9df62e32cc9e9c02131fa3d2189c515bf05634e5979aec1a0e5b3a9e44a36d0b__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "34247:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "34261:4:80",
                    "type": ""
                  }
                ],
                "src": "34096:353:80"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        array := allocate_memory(add(and(add(length, 31), not(31)), 0x20))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_array_bytes_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, sub(shl(64, 1), 1))\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            let _4 := add(offset, innerOffset)\n            if iszero(slt(add(_4, 63), end))\n            {\n                let _5 := 0\n                revert(_5, _5)\n            }\n            mstore(dst, abi_decode_available_length_bytes(add(_4, 64), calldataload(add(_4, _2)), end))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_bytes32(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_array_bytes_dyn(add(headStart, offset_2), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint8t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n        value2 := abi_decode_uint8(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_ProposalState_$2456__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 8))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_contract$_IVotesHistory_$10991__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256t_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_array_bytes_dyn(add(headStart, offset_2), dataEnd)\n        let offset_3 := calldataload(add(headStart, 96))\n        if gt(offset_3, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset_3)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_bytes(add(_2, 32), calldataload(_2), dataEnd)\n    }\n    function abi_decode_tuple_t_contract$_TimelockController_$3456(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Governor: onlyGovernance\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Governor: proposal not successfu\")\n        mstore(add(headStart, 96), \"l\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_array_bytes_dyn(value, pos) -> end\n    {\n        let pos_1 := pos\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let tail := add(add(pos_1, shl(5, length)), _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail, pos_1), not(31)))\n            tail := abi_encode_string(mload(srcPtr), tail)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        end := tail\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_rational_0_by_1_t_bytes32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 160)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 160))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_array_bytes_dyn(value2, tail_2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_rational_0_by_1_t_bytes32_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32_t_bytes32_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 192)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 192))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_array_bytes_dyn(value2, tail_2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_uint8__to_t_bytes32_t_uint256_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_3f6e45275d065aa13d86991cade5f99a8a63c55fa182497aa674a14110f12414__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Proposal below threshold\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_array_bytes_dyn(value2, tail_2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_a64000c09bcc896d8b2adceb9571e34dc548b6385d5291f0ff78341396a1053e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"quorumNumerator > Denominator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Governor: vote not currently act\")\n        mstore(add(headStart, 96), \"ive\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint96_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(96, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1600c4dfd0321c3477f2e1e913760ed9f016c92abd9858f5b9c3de2925772cab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"GovernorCompatibilityBravo: prop\")\n        mstore(add(headStart, 96), \"oser votes below proposal thresh\")\n        mstore(add(headStart, 128), \"old\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Governor: invalid proposal lengt\")\n        mstore(add(headStart, 96), \"h\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Governor: empty proposal\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Governor: proposal already exist\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint64(x, y) -> sum\n    {\n        let _1 := sub(shl(64, 1), 1)\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function abi_encode_uint64(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(64, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 288\n        mstore(headStart, value0)\n        let _2 := 32\n        mstore(add(headStart, _2), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), _1)\n        let tail_1 := abi_encode_array_address_dyn(value2, add(headStart, _1))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value4)\n        mstore(tail_2, length)\n        pos := add(tail_2, _2)\n        let tail_3 := add(add(tail_2, shl(5, length)), _2)\n        let srcPtr := add(value4, _2)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_3, tail_2), not(31)))\n            tail_3 := abi_encode_string(mload(srcPtr), tail_3)\n            srcPtr := add(srcPtr, _2)\n            pos := add(pos, _2)\n        }\n        mstore(add(headStart, 160), sub(tail_3, headStart))\n        let tail_4 := abi_encode_array_bytes_dyn(value5, tail_3)\n        abi_encode_uint64(value6, add(headStart, 192))\n        abi_encode_uint64(value7, add(headStart, 224))\n        mstore(add(headStart, 256), sub(tail_4, headStart))\n        tail := abi_encode_string(value8, tail_4)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_0fcf173f1bde133af2b1bcbd64cbceefebae51775d6ea3d3574428ce6085d7c1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"proposalNumerator > Denominator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45d5930a4426e9d2d1b4f1f6409a1e566e48968b077a6aeae252991ffd79df7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Voting period too low\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 'v' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"GovernorVotingSimple: vote alrea\")\n        mstore(add(headStart, 96), \"dy cast\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"GovernorVotingSimple: invalid va\")\n        mstore(add(headStart, 96), \"lue for enum VoteType\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Governor: unknown proposal id\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 6\")\n        mstore(add(headStart, 96), \"4 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_9df62e32cc9e9c02131fa3d2189c515bf05634e5979aec1a0e5b3a9e44a36d0b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Governor: proposal not active\")\n        tail := add(headStart, 96)\n    }\n}",
          "id": 80,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {
        "8295": [
          {
            "length": 32,
            "start": 8074
          }
        ],
        "8297": [
          {
            "length": 32,
            "start": 8032
          }
        ],
        "8299": [
          {
            "length": 32,
            "start": 7990
          }
        ],
        "8301": [
          {
            "length": 32,
            "start": 8157
          }
        ],
        "8303": [
          {
            "length": 32,
            "start": 8194
          }
        ],
        "8305": [
          {
            "length": 32,
            "start": 8115
          }
        ],
        "11184": [
          {
            "length": 32,
            "start": 2061
          }
        ],
        "11497": [
          {
            "length": 32,
            "start": 1108
          },
          {
            "length": 32,
            "start": 5940
          },
          {
            "length": 32,
            "start": 7256
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x6F3F9E6 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x160CBED7 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x2656227D EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x2D63F693 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x327A71E7 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x3BCCF4FD EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x3E4F49E6 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x43859632 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x452115D6 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x4CF088D9 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x544FFC9C EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x56781388 EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0x5D643493 EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0x70B0F660 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0x7629A4AC EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x7B3C71D3 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0x7D5E81E2 EQ PUSH2 0x5A3 JUMPI DUP1 PUSH4 0x8834987D EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0xA7713A70 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xA890C910 EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0xAB58FB8E EQ PUSH2 0x650 JUMPI DUP1 PUSH4 0xB58131B0 EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0xC01F9E37 EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0xC28BC2FA EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0xC59057E4 EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0xD33219B4 EQ PUSH2 0x6E5 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0xDD4E2BA5 EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0xDEAAA7CC EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0xE0CF1F9B EQ PUSH2 0x78B JUMPI DUP1 PUSH4 0xEA0217CF EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0xEB9019D4 EQ PUSH2 0x7CB JUMPI DUP1 PUSH4 0xF8CE560A EQ PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x213 JUMPI ADDRESS PUSH2 0x1FE PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x244 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0x91F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x25E PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0xC28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x2CFF JUMP JUMPDEST PUSH2 0xC5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x372 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CFF JUMP JUMPDEST PUSH2 0xC81 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x25E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D45 JUMP JUMPDEST PUSH2 0xCFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x2DA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CFF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0xD8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x476 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x244 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH2 0x4A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x244 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DD1 JUMP JUMPDEST PUSH2 0xDBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x2710 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0xDE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x57E CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0xE27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x59E CALLDATASIZE PUSH1 0x4 PUSH2 0x2E45 JUMP JUMPDEST PUSH2 0xE4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2E9E JUMP JUMPDEST PUSH2 0xE94 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35D2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x600 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CFF JUMP JUMPDEST PUSH2 0xF0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x64B CALLDATASIZE PUSH1 0x4 PUSH2 0x2F5E JUMP JUMPDEST PUSH2 0xF35 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x66B CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0xF76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x1020 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x6A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0x102F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x6C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F7B JUMP JUMPDEST PUSH2 0x105E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x6E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0x10DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x476 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x71E CALLDATASIZE PUSH1 0x4 PUSH2 0x2CFF JUMP JUMPDEST PUSH2 0x1119 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x737570706F72743D627261766F2671756F72756D3D666F722C6162737461696E SWAP1 DUP3 ADD MSTORE PUSH2 0x2A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3589 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x7A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0x1136 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x7C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0x1177 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x7E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FBE JUMP JUMPDEST PUSH2 0x11B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x806 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B0 JUMP JUMPDEST PUSH2 0x11C4 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83A DUP3 PUSH2 0x11CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x848 PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x11F4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x89C SWAP1 PUSH2 0x301C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8C8 SWAP1 PUSH2 0x301C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x915 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x915 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x92E DUP7 DUP7 DUP7 DUP7 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH2 0x93B DUP3 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x94C JUMPI PUSH2 0x94C PUSH2 0x2D93 JUMP JUMPDEST EQ PUSH2 0x969 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x3057 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x793D0649 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xF27A0C92 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E6 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB1C5F427 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB1C5F427 SWAP1 PUSH2 0xA20 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x0 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x317D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA70 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x8 SLOAD SWAP2 MLOAD PUSH4 0x8F2A0BB PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x8F2A0BB0 SWAP2 PUSH2 0xABB SWAP2 DUP12 SWAP2 DUP12 SWAP2 DUP12 SWAP2 SWAP1 DUP12 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x31CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x9A2E42FD6722813D69113E7D0079D3D940171428DF7373DF9C7F7617CFDA2892 DUP3 DUP3 TIMESTAMP PUSH2 0xB1B SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB29 SWAP3 SWAP2 SWAP1 PUSH2 0x3251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB5F DUP7 DUP7 DUP7 DUP7 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB6C DUP3 PUSH2 0xD81 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xB82 JUMPI PUSH2 0xB82 PUSH2 0x2D93 JUMP JUMPDEST EQ DUP1 PUSH2 0xB9F JUMPI POP PUSH1 0x5 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xB9D JUMPI PUSH2 0xB9D PUSH2 0x2D93 JUMP JUMPDEST EQ JUMPDEST PUSH2 0xBBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x3057 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F SWAP1 PUSH2 0xC09 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xC1E DUP3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x128C JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD SWAP3 DUP4 ADD SWAP1 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 DUP2 SWAP1 MSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC68 DUP3 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0xC72 DUP2 CALLER PUSH2 0x1299 JUMP JUMPDEST PUSH2 0xC7C DUP4 DUP4 PUSH2 0x12FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xCF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH2 0xCFB DUP3 DUP3 PUSH2 0x1381 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3589 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xFF DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0xD59 SWAP1 PUSH2 0xD51 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x13E6 JUMP JUMPDEST DUP7 DUP7 DUP7 PUSH2 0x1434 JUMP JUMPDEST SWAP1 POP PUSH2 0xD76 DUP8 DUP3 DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1452 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83A DUP3 PUSH2 0x155C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35D2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xDA7 DUP2 CALLER PUSH2 0x1299 JUMP JUMPDEST PUSH2 0xDB3 DUP7 DUP7 DUP7 DUP7 PUSH2 0x16C4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH2 0xDDE DUP5 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1452 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xDEE PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x16DB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x5 SLOAD PUSH2 0xE38 DUP5 PUSH2 0x171B JUMP JUMPDEST PUSH2 0xE42 SWAP2 SWAP1 PUSH2 0x325F JUMP JUMPDEST PUSH2 0x83A SWAP2 SWAP1 PUSH2 0x327E JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH2 0xDB3 DUP7 DUP3 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1452 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEA2 PUSH1 0x1 NUMBER PUSH2 0x32A0 JUMP JUMPDEST SWAP1 POP PUSH2 0xEAD DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0xEB7 CALLER DUP4 PUSH2 0x11B8 JUMP JUMPDEST LT ISZERO PUSH2 0xF00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x141C9BDC1BDCD85B0818995B1BDDC81D1A1C995CDA1BDB19 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH2 0xDB3 DUP7 DUP7 DUP7 DUP7 PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xF3D PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xD45C4435 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD45C4435 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1006 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 EQ PUSH2 0x1016 JUMPI DUP1 PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102A PUSH2 0x1AE5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD SWAP3 DUP4 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 DUP2 SWAP1 MSTORE PUSH2 0xC50 JUMP JUMPDEST PUSH2 0x1066 PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x10D8 DUP5 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP9 SWAP3 POP PUSH2 0x1AF5 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1122 DUP3 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x112C DUP2 CALLER PUSH2 0x1299 JUMP JUMPDEST PUSH2 0xC7C DUP4 DUP4 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0x113E PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x116E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x1B1B JUMP JUMPDEST PUSH2 0x117F PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x11AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1019 DUP4 DUP4 PUSH2 0x1C2F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83A DUP3 PUSH2 0x1CE4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6E665CED PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x83A JUMPI POP PUSH2 0x83A DUP3 PUSH2 0x1CF5 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x1246 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x71756F72756D4E756D657261746F72203E2044656E6F6D696E61746F72000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x553476BF02EF2726E8CE5CED78D63E26E602E4A2257B1F559418E24B4633997 SWAP1 PUSH2 0x1280 SWAP1 DUP4 SWAP1 DUP6 SWAP1 PUSH2 0x3251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x10D8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0x12A3 DUP3 DUP3 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xCFB JUMPI PUSH2 0x12BB DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x12C6 DUP4 PUSH1 0x20 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12D7 SWAP3 SWAP2 SWAP1 PUSH2 0x3302 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x878 SWAP2 PUSH1 0x4 ADD PUSH2 0x2A25 JUMP JUMPDEST PUSH2 0x1307 DUP3 DUP3 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xCFB JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x133D CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x138B DUP3 DUP3 PUSH2 0xF0C JUMP JUMPDEST ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83A PUSH2 0x13F3 PUSH2 0x1F29 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1445 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2050 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xC1E DUP2 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH2 0x146B DUP8 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x147C JUMPI PUSH2 0x147C PUSH2 0x2D93 JUMP JUMPDEST EQ PUSH2 0x14D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20766F7465206E6F742063757272656E746C7920616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x697665 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x14FD SWAP1 DUP8 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x150B DUP8 DUP8 DUP8 DUP5 PUSH2 0x22E9 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB8E138887D0AA13BAB447E82DE9D5C1777041ECD21CA36BA824FF1E6C07DDDA4 DUP9 DUP8 DUP5 DUP9 PUSH1 0x40 MLOAD PUSH2 0x154A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1568 DUP4 PUSH2 0x2467 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x157E JUMPI PUSH2 0x157E PUSH2 0x2D93 JUMP JUMPDEST EQ PUSH2 0x1589 JUMPI SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x15A4 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2AB0F529 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2AB0F529 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1620 SWAP2 SWAP1 PUSH2 0x3399 JUMP JUMPDEST ISZERO PUSH2 0x162F JUMPI POP PUSH1 0x7 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2C258A9F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x584B153E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1687 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16AB SWAP2 SWAP1 PUSH2 0x3399 JUMP JUMPDEST ISZERO PUSH2 0x16BA JUMPI POP PUSH1 0x5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x2 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D2 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2574 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0xC565B045403DC03C2EEA82B81A0465EDAD9E2E7FC4D97E11421C209DA93D7A93 PUSH1 0x6 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x170E SWAP3 SWAP2 SWAP1 PUSH2 0x3251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2394E7A3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8E539E8C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x177E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1792 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17B6 SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CF PUSH2 0x1020 JUMP JUMPDEST PUSH2 0x17DE CALLER PUSH2 0x7E6 PUSH1 0x1 NUMBER PUSH2 0x32A0 JUMP JUMPDEST LT ISZERO PUSH2 0x185E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F72436F6D7061746962696C697479427261766F3A2070726F70 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F73657220766F7465732062656C6F772070726F706F73616C20746872657368 PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x1BDB19 PUSH1 0xEA SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1873 DUP7 DUP7 DUP7 DUP7 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP DUP5 MLOAD DUP7 MLOAD EQ PUSH2 0x1896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST DUP4 MLOAD DUP7 MLOAD EQ PUSH2 0x18B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST PUSH1 0x0 DUP7 MLOAD GT PUSH2 0x1903 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x11DBDD995C9B9BDC8E88195B5C1D1E481C1C9BDC1BDCD85B PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD SWAP2 DUP3 ADD SWAP1 SWAP3 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 DUP2 SWAP1 MSTORE ISZERO PUSH2 0x1983 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A2070726F706F73616C20616C7265616479206578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1996 PUSH2 0x1991 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x199F NUMBER PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x19A9 SWAP2 SWAP1 PUSH2 0x3425 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19B9 PUSH2 0x1991 PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19C3 SWAP1 DUP4 PUSH2 0x3425 JUMP JUMPDEST SWAP1 POP PUSH2 0x19CF DUP4 DUP4 PUSH2 0x2692 JUMP JUMPDEST PUSH2 0x19DC PUSH1 0x1 DUP5 ADD DUP3 PUSH2 0x2692 JUMP JUMPDEST PUSH32 0x7D84A6263AE0D98D3329BD7B46BB4E8D6F98CD35A7ADB45C274C8B7FD5EBD5E0 DUP5 CALLER DUP12 DUP12 DUP14 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A1A JUMPI PUSH2 0x1A1A PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A4D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1A38 JUMPI SWAP1 POP JUMPDEST POP DUP13 DUP9 DUP9 DUP15 PUSH1 0x40 MLOAD PUSH2 0x1A67 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x8F74EA46EF7894F65EABFB5E6E695DE773A000B47C529AB559178069B226401 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102A PUSH2 0x57E PUSH1 0x1 NUMBER PUSH2 0x32A0 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDDE DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x35A9 PUSH1 0x29 SWAP2 CODECOPY PUSH2 0x26AF JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x1B6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x70726F706F73616C4E756D657261746F72203E2044656E6F6D696E61746F7200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x47036A693FE84B7D8F31616A15F6B3E26B080688FFD77D9425E3A0283A3DF261 SWAP1 PUSH2 0x1280 SWAP1 DUP4 SWAP1 DUP6 SWAP1 PUSH2 0x3251 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1BEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x566F74696E6720706572696F6420746F6F206C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH32 0x7E3F7F0708A84DE9203036ABAA450DCCC85AD5FF52F78C170F3EDB55CF5E8828 PUSH1 0x7 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x1C22 SWAP3 SWAP2 SWAP1 PUSH2 0x3251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x748D635 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x3A46B1A8 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CD4 SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x4 SLOAD PUSH2 0xE38 DUP5 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xBF26D897 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x83A JUMPI POP PUSH2 0x83A DUP3 PUSH2 0x27D5 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE38335E5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE38335E5 SWAP1 CALLVALUE SWAP1 PUSH2 0x1D55 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x0 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x317D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1D9D DUP4 PUSH1 0x2 PUSH2 0x325F JUMP JUMPDEST PUSH2 0x1DA8 SWAP1 PUSH1 0x2 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1DBF JUMPI PUSH2 0x1DBF PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DE9 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1E04 JUMPI PUSH2 0x1E04 PUSH2 0x353F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1E33 JUMPI PUSH2 0x1E33 PUSH2 0x353F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1E57 DUP5 PUSH1 0x2 PUSH2 0x325F JUMP JUMPDEST PUSH2 0x1E62 SWAP1 PUSH1 0x1 PUSH2 0x3239 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1EDA JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1E96 JUMPI PUSH2 0x1E96 PUSH2 0x353F JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1EAC JUMPI PUSH2 0x1EAC PUSH2 0x353F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1ED3 DUP2 PUSH2 0x3555 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E65 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1019 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x1F82 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1FAC JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP3 DUP5 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 GT ISZERO PUSH2 0x207D JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x212A JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x2095 JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x20A6 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2123 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x212A JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2147 JUMPI PUSH2 0x2147 PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO PUSH2 0x2150 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2164 JUMPI PUSH2 0x2164 PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO PUSH2 0x21AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x45434453413A20696E76616C6964207369676E6174757265 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x21C1 JUMPI PUSH2 0x21C1 PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO PUSH2 0x220F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2223 JUMPI PUSH2 0x2223 PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO PUSH2 0x227C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2290 JUMPI PUSH2 0x2290 PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP6 MSTORE SWAP3 DUP4 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2370 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F72566F74696E6753696D706C653A20766F746520616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x191E4818D85CDD PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xFF AND DUP4 PUSH1 0xFF AND EQ ISZERO PUSH2 0x23C1 JUMPI DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x23B6 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x10D8 SWAP1 POP JUMP JUMPDEST PUSH1 0xFF DUP4 AND PUSH1 0x1 EQ ISZERO PUSH2 0x23E1 JUMPI DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x23B6 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0xFF DUP4 AND PUSH1 0x2 EQ ISZERO PUSH2 0x2401 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x23B6 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F72566F74696E6753696D706C653A20696E76616C6964207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6C756520666F7220656E756D20566F746554797065 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x248C JUMPI POP PUSH1 0x7 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x24A7 JUMPI POP PUSH1 0x2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24B2 DUP5 PUSH2 0xC28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2501 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20756E6B6E6F776E2070726F706F73616C206964000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST NUMBER DUP2 LT PUSH2 0x2512 JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251D DUP6 PUSH2 0x102F JUMP JUMPDEST SWAP1 POP NUMBER DUP2 LT PUSH2 0x2531 JUMPI POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x253A DUP6 PUSH2 0x280A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2559 JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD GT JUMPDEST ISZERO PUSH2 0x2569 JUMPI POP PUSH1 0x4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH1 0x3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2583 DUP7 DUP7 DUP7 DUP7 PUSH2 0x2841 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x16D2 JUMPI PUSH1 0x8 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xC4D252F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xC4D252F5 SWAP2 PUSH2 0x25DC SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x260A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x268E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2036 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x342062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2710 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2767 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2783 SWAP2 SWAP1 PUSH2 0x356C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x27C0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x27C5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xD76 DUP3 DUP3 DUP7 PUSH2 0x294D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x83A JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x83A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x282C SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH2 0x2838 PUSH2 0x806 DUP6 PUSH2 0xC28 JUMP JUMPDEST GT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2850 DUP7 DUP7 DUP7 DUP7 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x285D DUP3 PUSH2 0xD81 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2873 JUMPI PUSH2 0x2873 PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x2893 JUMPI POP PUSH1 0x6 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2890 JUMPI PUSH2 0x2890 PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x28B1 JUMPI POP PUSH1 0x7 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x28AE JUMPI PUSH2 0x28AE PUSH2 0x2D93 JUMP JUMPDEST EQ ISZERO JUMPDEST PUSH2 0x28FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A2070726F706F73616C206E6F7420616374697665000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x878 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE MLOAD PUSH32 0x789CF55BE980739DAD1D0699B93B58E806B51C9D96619BFA8FE0A28ABAA7B30C SWAP1 PUSH2 0xB29 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x295C JUMPI POP DUP2 PUSH2 0x1019 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x296C JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP2 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29E4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x29CC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x29F3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2A11 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x29C9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1019 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x29F9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2A76 JUMPI PUSH2 0x2A76 PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2A97 JUMPI PUSH2 0x2A97 PUSH2 0x2A38 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x88A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2AC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2ADC PUSH2 0x2AD7 DUP4 PUSH2 0x2A7E JUMP JUMPDEST PUSH2 0x2A4E JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2B1F JUMPI DUP1 CALLDATALOAD PUSH2 0x2B12 DUP2 PUSH2 0x2AA1 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2AFF JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2B4B PUSH2 0x2AD7 DUP4 PUSH2 0x2A7E JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2B6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2B1F JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2B6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x2B9E JUMPI PUSH2 0x2B9E PUSH2 0x2A38 JUMP JUMPDEST PUSH2 0x2BB1 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x2A4E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x2BC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2BED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2BFD PUSH2 0x2AD7 DUP4 PUSH2 0x2A7E JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2C1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2B1F JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C3F JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 ADD PUSH1 0x3F DUP2 ADD DUP10 SGT PUSH2 0x2C51 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2C62 DUP10 DUP7 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP5 ADD PUSH2 0x2B85 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2C9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CA9 DUP9 DUP4 DUP10 ADD PUSH2 0x2AB6 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CCB DUP9 DUP4 DUP10 ADD PUSH2 0x2B2A JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CEE DUP8 DUP3 DUP9 ADD PUSH2 0x2BDC JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2D24 DUP2 PUSH2 0x2AA1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2D40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2D5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x2D6D PUSH1 0x20 DUP8 ADD PUSH2 0x2D2F JUMP JUMPDEST SWAP4 POP PUSH2 0x2D7B PUSH1 0x40 DUP8 ADD PUSH2 0x2D2F JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x8 DUP4 LT PUSH2 0x2DCB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2DF4 PUSH1 0x20 DUP5 ADD PUSH2 0x2D2F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2E0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2E3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x2E6B PUSH1 0x20 DUP7 ADD PUSH2 0x2D2F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E92 DUP8 DUP3 DUP9 ADD PUSH2 0x2DFD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2EB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2ECB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2ED7 DUP9 DUP4 DUP10 ADD PUSH2 0x2AB6 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EF9 DUP9 DUP4 DUP10 ADD PUSH2 0x2B2A JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2F0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F1B DUP9 DUP4 DUP10 ADD PUSH2 0x2BDC JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2F31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2F43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F52 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2B85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1019 DUP2 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2F91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2F9C DUP2 PUSH2 0x2AA1 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2FDC DUP2 PUSH2 0x2AA1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH24 0x476F7665726E6F723A206F6E6C79476F7665726E616E6365 PUSH1 0x40 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3030 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3051 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A2070726F706F73616C206E6F7420737563636573736675 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30EA JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x30C5 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30EA JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3109 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP DUP1 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD DUP2 DUP7 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3170 JUMPI PUSH1 0x1F NOT DUP7 DUP5 SUB ADD DUP10 MSTORE PUSH2 0x315E DUP4 DUP4 MLOAD PUSH2 0x29F9 JUMP JUMPDEST SWAP9 DUP5 ADD SWAP9 SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3142 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3190 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x30B1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x31A2 DUP2 DUP9 PUSH2 0x30F5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x31B6 DUP2 DUP8 PUSH2 0x3125 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x31DE PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x30B1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x31F0 DUP2 DUP10 PUSH2 0x30F5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x3204 DUP2 DUP9 PUSH2 0x3125 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP PUSH1 0x80 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x324C JUMPI PUSH2 0x324C PUSH2 0x3223 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3279 JUMPI PUSH2 0x3279 PUSH2 0x3223 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x329B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x32B2 JUMPI PUSH2 0x32B2 PUSH2 0x3223 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x32CA PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x30B1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x32DC DUP2 DUP8 PUSH2 0x30F5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x32F0 DUP2 DUP7 PUSH2 0x3125 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x3334 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x29C9 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x3365 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x29C9 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xDB3 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20696E76616C69642070726F706F73616C206C656E6774 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xFB SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP2 AND DUP5 DUP3 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x3447 JUMPI PUSH2 0x3447 PUSH2 0x3223 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP12 DUP4 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP13 AND DUP2 DUP6 ADD MSTORE DUP2 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x3479 DUP3 DUP6 ADD DUP13 PUSH2 0x30B1 JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x348D DUP3 DUP12 PUSH2 0x30F5 JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE DUP2 DUP10 MLOAD DUP1 DUP5 MSTORE DUP3 DUP5 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP6 ADD ADD DUP4 DUP13 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34DE JUMPI PUSH1 0x1F NOT DUP8 DUP5 SUB ADD DUP6 MSTORE PUSH2 0x34CC DUP4 DUP4 MLOAD PUSH2 0x29F9 JUMP JUMPDEST SWAP5 DUP7 ADD SWAP5 SWAP3 POP SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x34B0 JUMP JUMPDEST POP POP DUP7 DUP2 SUB PUSH1 0xA0 DUP9 ADD MSTORE PUSH2 0x34F2 DUP2 DUP13 PUSH2 0x3125 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x350D PUSH1 0xC0 DUP5 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0xE0 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x352F DUP2 DUP6 PUSH2 0x29F9 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3564 JUMPI PUSH2 0x3564 PUSH2 0x3223 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x357E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x29C9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID ISZERO MUL EQ 0xD7 0x4D MSIZE 0xB7 0xD1 0xE9 0xC PUSH20 0xFC22EF3D991DD0A76B046543D4D80AB92D2A5032 DUP16 COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2063616C6C KECCAK256 PUSH24 0x6974682076616C7565206661696C6564ACDBB2D76579A5E3 SMOD DUP8 0x5D 0xDE 0xF 0xBF DUP10 DUP7 KECCAK256 NOT 0xC7 RETURN 0xC1 SUB CALLDATACOPY 0xA9 EQ BALANCE JUMPDEST 0xEB AND SWAP13 NUMBER 0xB1 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0x4B 0xF9 0xEC 0xB7 AND 0xB8 0xC MSTORE SWAP15 0xA7 CALLDATACOPY SWAP7 JUMP CHAINID 0x2C MSTORE8 CALLER 0xCC SWAP8 RETURNDATACOPY 0x2B SHL SUB 0x28 SAR 0xD4 0xEE SSTORE 0xAD 0xD6 PUSH3 0x64736F PUSH13 0x63430008090033000000000000 ",
      "sourceMap": "1455:4638:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2148:4:9;2125:11;:9;:11::i;:::-;-1:-1:-1;;;;;2125:28:9;;2117:37;;;;;;1455:4638:55;;;;;4636:229;;;;;;;;;;-1:-1:-1;4636:229:55;;;;;:::i;:::-;;:::i;:::-;;;470:14:80;;463:22;445:41;;433:2;418:18;4636:229:55;;;;;;;;5037:108:52;;;;;;;;;;-1:-1:-1;5125:13:52;;5037:108;;;643:25:80;;;631:2;616:18;5037:108:52;497:177:80;2563:178:52;;;;;;;;;;-1:-1:-1;2563:178:52;;;;;:::i;:::-;;:::i;2498:98:9:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3609:739:14:-;;;;;;;;;;-1:-1:-1;3609:739:14;;;;;:::i;:::-;;:::i;4008:129:6:-;;;;;;;;;;-1:-1:-1;4008:129:6;;;;;:::i;:::-;;:::i;7887:706:9:-;;;;;;:::i;:::-;;:::i;5047:163::-;;;;;;;;;;-1:-1:-1;5047:163:9;;;;;:::i;:::-;;:::i;4387:145:6:-;;;;;;;;;;-1:-1:-1;4387:145:6;;;;;:::i;:::-;;:::i;1655:41:52:-;;;;;;;;;;;;;;;;5404:214:6;;;;;;;;;;-1:-1:-1;5404:214:6;;;;;:::i;:::-;;:::i;4925:106:52:-;;;;;;;;;;-1:-1:-1;5012:12:52;;4925:106;;10831:427:9;;;;;;;;;;-1:-1:-1;10831:427:9;;;;;:::i;:::-;;:::i;4432:198:55:-;;;;;;;;;;-1:-1:-1;4432:198:55;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1024:167:12:-;;;;;;;;;;-1:-1:-1;1024:167:12;;;;;:::i;:::-;1117:4;1140:26;;;:14;:26;;;;;;;;-1:-1:-1;;;;;1140:44:12;;;;:35;;;:44;;;;;;;1024:167;;;;;3036:280:55;;;;;;;;;;-1:-1:-1;3036:280:55;;;;;:::i;:::-;;:::i;1281:38:56:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8466:32:80;;;8448:51;;8436:2;8421:18;1281:38:56;8279:226:80;1263:389:12;;;;;;;;;;-1:-1:-1;1263:389:12;;;;;:::i;:::-;1380:20;1525:26;;;:14;:26;;;;;1569:25;;1596:21;;;;1619:25;;;;;1569;;1263:389;;;;;8712:25:80;;;8768:2;8753:18;;8746:34;;;;8796:18;;;8789:34;8700:2;8685:18;1263:389:12;8510:319:80;2655:99:9;;;;;;;;;;-1:-1:-1;2737:10:9;;;;;;;;;;;;-1:-1:-1;;;2737:10:9;;;;2655:99;;10232:198;;;;;;;;;;-1:-1:-1;10232:198:9;;;;;:::i;:::-;;:::i;1495:52:52:-;;;;;;;;;;;;1542:5;1495:52;;3098:156;;;;;;;;;;-1:-1:-1;3098:156:52;;;;;:::i;:::-;;:::i;4679:240::-;;;;;;;;;;-1:-1:-1;4679:240:52;;;;;:::i;:::-;;:::i;10500:266:9:-;;;;;;;;;;-1:-1:-1;10500:266:9;;;;;:::i;:::-;;:::i;3322:488:55:-;;;;;;;;;;-1:-1:-1;3322:488:55;;;;;:::i;:::-;;:::i;2003:107::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2003:107:55;;2909:145:6;;;;;;;;;;-1:-1:-1;2909:145:6;;;;;:::i;:::-;;:::i;2027:49::-;;;;;;;;;;-1:-1:-1;2027:49:6;2072:4;2027:49;;1619:30:52;;;;;;;;;;;;;;;;5995:133:14;;;;;;;;;;-1:-1:-1;5995:133:14;;;;;:::i;:::-;;:::i;3270:259::-;;;;;;;;;;-1:-1:-1;3270:259:14;;;;;:::i;:::-;;:::i;4014:183:55:-;;;;;;;;;;;;;:::i;5278:161:9:-;;;;;;;;;;-1:-1:-1;5278:161:9;;;;;:::i;:::-;;:::i;12558:196::-;;;;;;;;;;-1:-1:-1;12558:196:9;;;;;:::i;:::-;;:::i;3700:308::-;;;;;;;;;;-1:-1:-1;3700:308:9;;;;;:::i;:::-;;:::i;3073:109:14:-;;;;;;;;;;-1:-1:-1;3165:9:14;;-1:-1:-1;;;;;3165:9:14;3073:109;;4766:147:6;;;;;;;;;;-1:-1:-1;4766:147:6;;;;;:::i;:::-;;:::i;828:136:12:-;;;;;;;;;;-1:-1:-1;916:41:12;;;;;;;;;;;;;;;;;;828:136;;1006:95:9;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1006:95:9;;2747:188:52;;;;;;;;;;-1:-1:-1;2747:188:52;;;;;:::i;:::-;;:::i;3419:160::-;;;;;;;;;;-1:-1:-1;3419:160:52;;;;;:::i;:::-;;:::i;4203:223:55:-;;;;;;;;;;-1:-1:-1;4203:223:55;;;;;:::i;:::-;;:::i;3816:192::-;;;;;;;;;;-1:-1:-1;3816:192:55;;;;;:::i;:::-;;:::i;5927:164::-;6077:7;;5927:164::o;4636:229::-;4795:4;4822:36;4846:11;4822:23;:36::i;:::-;4815:43;4636:229;-1:-1:-1;;4636:229:55:o;2563:178:52:-;1708:11:9;:9;:11::i;:::-;-1:-1:-1;;;;;1692:27:9;719:10:34;-1:-1:-1;;;;;1692:27:9;;1684:64;;;;-1:-1:-1;;;1684:64:9;;;;;;;:::i;:::-;;;;;;;;;2692:42:52::1;2715:18;2692:22;:42::i;:::-;2563:178:::0;:::o;2498:98:9:-;2552:13;2584:5;2577:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2498:98;:::o;3609:739:14:-;3797:7;3816:18;3837:57;3850:7;3859:6;3867:9;3878:15;3837:12;:57::i;:::-;3816:78;-1:-1:-1;3934:23:14;3913:17;3919:10;3913:5;:17::i;:::-;:44;;;;;;;;:::i;:::-;;3905:90;;;;-1:-1:-1;;;3905:90:14;;;;;;;:::i;:::-;4022:9;;:23;;;-1:-1:-1;;;4022:23:14;;;;4006:13;;-1:-1:-1;;;;;4022:9:14;;:21;;:23;;;;;;;;;;;;;;:9;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4082:9;;:76;;-1:-1:-1;;;4082:76:14;;4006:39;;-1:-1:-1;;;;;;4082:9:14;;:28;;:76;;4111:7;;4120:6;;4128:9;;4082;;4142:15;;4082:76;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4055:24;;;;:12;:24;;;;;;:103;;;;4168:9;;:78;;-1:-1:-1;;;4168:78:14;;-1:-1:-1;;;;;4168:9:14;;;;:23;;:78;;4192:7;;4201:6;;4209:9;;4055:24;4223:15;;4240:5;;4168:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4262:51;4277:10;4307:5;4289:15;:23;;;;:::i;:::-;4262:51;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;4331:10:14;3609:739;-1:-1:-1;;;;;3609:739:14:o;4008:129:6:-;4082:7;4108:12;;;;;;;;;;:22;;;;4008:129::o;7887:706:9:-;8085:7;8104:18;8125:57;8138:7;8147:6;8155:9;8166:15;8125:12;:57::i;:::-;8104:78;;8193:20;8216:17;8222:10;8216:5;:17::i;:::-;8193:40;-1:-1:-1;8274:23:9;8264:6;:33;;;;;;;;:::i;:::-;;:67;;;-1:-1:-1;8311:20:9;8301:6;:30;;;;;;;;:::i;:::-;;8264:67;8243:147;;;;-1:-1:-1;;;8243:147:9;;;;;;;:::i;:::-;8400:22;;;;:10;:22;;;;;;;;;:31;:38;;-1:-1:-1;;8400:38:9;8434:4;8400:38;;;8454:28;;;;;8411:10;643:25:80;;631:2;616:18;;497:177;8454:28:9;;;;;;;;8493:65;8502:10;8514:7;8523:6;8531:9;8542:15;8493:8;:65::i;:::-;-1:-1:-1;8576:10:9;7887:706;-1:-1:-1;;;;;7887:706:9:o;5047:163::-;5131:7;5157:22;;;:10;:22;;;;;;;;:44;;;;;;;;;-1:-1:-1;;;;;5157:44:9;;;;;:46;-1:-1:-1;;;;;5150:53:9;;5047:163;-1:-1:-1;;5047:163:9:o;4387:145:6:-;4470:18;4483:4;4470:12;:18::i;:::-;2505:30;2516:4;719:10:34;2505::6;:30::i;:::-;4500:25:::1;4511:4;4517:7;4500:10;:25::i;:::-;4387:145:::0;;;:::o;5404:214::-;-1:-1:-1;;;;;5499:23:6;;719:10:34;5499:23:6;5491:83;;;;-1:-1:-1;;;5491:83:6;;18081:2:80;5491:83:6;;;18063:21:80;18120:2;18100:18;;;18093:30;18159:34;18139:18;;;18132:62;-1:-1:-1;;;18210:18:80;;;18203:45;18265:19;;5491:83:6;17879:411:80;5491:83:6;5585:26;5597:4;5603:7;5585:11;:26::i;:::-;5404:214;;:::o;10831:427:9:-;11088:48;;;-1:-1:-1;;;;;;;;;;;11088:48:9;;;18493:25:80;18534:18;;;18527:34;;;18609:4;18597:17;;18577:18;;;18570:45;10999:7:9;;;;11034:159;;11061:77;;18466:18:80;;11088:48:9;;;;;;;;;;;;11078:59;;;;;;11061:16;:77::i;:::-;11152:1;11167;11182;11034:13;:159::i;:::-;11018:175;;11210:41;11220:10;11232:5;11239:7;11210:41;;;;;;;;;;;;:9;:41::i;:::-;11203:48;10831:427;-1:-1:-1;;;;;;;10831:427:9:o;4432:198:55:-;4564:13;4600:23;4612:10;4600:11;:23::i;3036:280::-;3231:7;-1:-1:-1;;;;;;;;;;;2505:30:6;2048:62:55;719:10:34;2505::6;:30::i;:::-;3257:52:55::1;3265:7;3274:6;3282:9;3293:15;3257:7;:52::i;:::-;3250:59:::0;3036:280;-1:-1:-1;;;;;;3036:280:55:o;10232:198:9:-;10318:7;;719:10:34;10337:28:9;;10382:41;10392:10;10404:5;10411:7;10382:41;;;;;;;;;;;;:9;:41::i;:::-;10375:48;10232:198;-1:-1:-1;;;;10232:198:9:o;3098:156:52:-;1708:11:9;:9;:11::i;:::-;-1:-1:-1;;;;;1692:27:9;719:10:34;-1:-1:-1;;;;;1692:27:9;;1684:64;;;;-1:-1:-1;;;1684:64:9;;;;;;;:::i;:::-;3216:31:52::1;3232:14;3216:15;:31::i;4679:240::-:0;4772:7;1542:5;4850:26;;4815:32;4835:11;4815:19;:32::i;:::-;:61;;;;:::i;:::-;4814:98;;;;:::i;10500:266:9:-;10650:7;;719:10:34;10669:28:9;;10714:45;10724:10;10736:5;10743:7;10752:6;;10714:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10714:9:9;;-1:-1:-1;;;10714:45:9:i;3322:488:55:-;3527:7;;3568:16;3583:1;3568:12;:16;:::i;:::-;3546:38;;3652:30;3670:11;3652:17;:30::i;:::-;3615:33;3624:10;3636:11;3615:8;:33::i;:::-;:67;;3594:138;;;;-1:-1:-1;;;3594:138:55;;19353:2:80;3594:138:55;;;19335:21:80;19392:2;19372:18;;;19365:30;-1:-1:-1;;;19411:18:80;;;19404:54;19475:18;;3594:138:55;19151:348:80;3594:138:55;3749:54;3763:7;3772:6;3780:9;3791:11;3749:13;:54::i;2909:145:6:-;2995:4;3018:12;;;;;;;;;;;-1:-1:-1;;;;;3018:29:6;;;;;;;;;;;;;;;2909:145::o;5995:133:14:-;1708:11:9;:9;:11::i;:::-;-1:-1:-1;;;;;1692:27:9;719:10:34;-1:-1:-1;;;;;1692:27:9;;1684:64;;;;-1:-1:-1;;;1684:64:9;;;;;;;:::i;:::-;6093:28:14::1;6109:11;6093:15;:28::i;3270:259::-:0;3382:9;;3349:7;3405:24;;;:12;:24;;;;;;;3382:48;;-1:-1:-1;;;3382:48:14;;;;;643:25:80;;;;3349:7:14;;;;-1:-1:-1;;;;;3382:9:14;;;;:22;;616:18:80;;3382:48:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3368:62;;3447:3;3454:1;3447:8;:18;;3462:3;3447:18;;;3458:1;3447:18;3440:25;3270:259;-1:-1:-1;;;3270:259:14:o;4014:183:55:-;4135:7;4165:25;:23;:25::i;:::-;4158:32;;4014:183;:::o;5278:161:9:-;5362:7;5388:22;;;:10;:22;;;;;;;;:42;;;;;;;;:30;;:42;-1:-1:-1;;;;;5388:42:9;;;;;:44;1170:117:38;12558:196:9;1708:11;:9;:11::i;:::-;-1:-1:-1;;;;;1692:27:9;719:10:34;-1:-1:-1;;;;;1692:27:9;;1684:64;;;;-1:-1:-1;;;1684:64:9;;;;;;;:::i;:::-;12697:50:::1;12727:6;12735:4;;12697:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;12741:5:9;;-1:-1:-1;12697:29:9::1;::::0;-1:-1:-1;;12697:50:9:i:1;:::-;;12558:196:::0;;;;:::o;3700:308::-;3900:7;3955;3964:6;3972:9;3983:15;3944:55;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3944:55:9;;;;;;;;;3934:66;;3944:55;3934:66;;;;;3700:308;-1:-1:-1;;;;;3700:308:9:o;4766:147:6:-;4850:18;4863:4;4850:12;:18::i;:::-;2505:30;2516:4;719:10:34;2505::6;:30::i;:::-;4880:26:::1;4892:4;4898:7;4880:11;:26::i;2747:188:52:-:0;1708:11:9;:9;:11::i;:::-;-1:-1:-1;;;;;1692:27:9;719:10:34;-1:-1:-1;;;;;1692:27:9;;1684:64;;;;-1:-1:-1;;;1684:64:9;;;;;;;:::i;:::-;2881:47:52::1;2915:12;2881:33;:47::i;3419:160::-:0;1708:11:9;:9;:11::i;:::-;-1:-1:-1;;;;;1692:27:9;719:10:34;-1:-1:-1;;;;;1692:27:9;;1684:64;;;;-1:-1:-1;;;1684:64:9;;;;;;;:::i;:::-;3539:33:52::1;3556:15;3539:16;:33::i;4203:223:55:-:0;4353:7;4383:36;4398:7;4407:11;4383:14;:36::i;3816:192::-;3946:7;3976:25;3989:11;3976:12;:25::i;1886:224:14:-;1990:4;-1:-1:-1;;;;;;2013:50:14;;-1:-1:-1;;;2013:50:14;;:90;;;2067:36;2091:11;2067:23;:36::i;5151:411:52:-;1542:5;5279:18;:42;;5258:118;;;;-1:-1:-1;;;5258:118:52;;20469:2:80;5258:118:52;;;20451:21:80;20508:2;20488:18;;;20481:30;20547:31;20527:18;;;20520:59;20596:18;;5258:118:52;20267:353:80;5258:118:52;5416:15;;;5441:36;;;;5493:62;;;;;;5416:15;;5459:18;;5493:62;:::i;:::-;;;;;;;;5248:314;5151:411;:::o;4871:327:55:-;5120:71;5135:10;5147:7;5156:6;5164:9;5175:15;5120:14;:71::i;3335:492:6:-;3423:22;3431:4;3437:7;3423;:22::i;:::-;3418:403;;3606:41;3634:7;-1:-1:-1;;;;;3606:41:6;3644:2;3606:19;:41::i;:::-;3718:38;3746:4;3753:2;3718:19;:38::i;:::-;3513:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3513:265:6;;;;;;;;;;-1:-1:-1;;;3461:349:6;;;;;;;:::i;6861:233::-;6944:22;6952:4;6958:7;6944;:22::i;:::-;6939:149;;6982:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6982:29:6;;;;;;;;;:36;;-1:-1:-1;;6982:36:6;7014:4;6982:36;;;7064:12;719:10:34;;640:96;7064:12:6;-1:-1:-1;;;;;7037:40:6;7055:7;-1:-1:-1;;;;;7037:40:6;7049:4;7037:40;;;;;;;;;;6861:233;;:::o;7219:234::-;7302:22;7310:4;7316:7;7302;:22::i;:::-;7298:149;;;7372:5;7340:12;;;;;;;;;;;-1:-1:-1;;;;;7340:29:6;;;;;;;;;;:37;;-1:-1:-1;;7340:37:6;;;7396:40;719:10:34;;7340:12:6;;7396:40;;7372:5;7396:40;7219:234;;:::o;4339:165:40:-;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;9226:57:39;;-1:-1:-1;;;9226:57:39;;;28902:27:80;28945:11;;;28938:27;;;28981:12;;;28974:28;;;9190:7:39;;29018:12:80;;9226:57:39;;;;;;;;;;;;9216:68;;;;;;9209:75;;9097:194;;;;;7452:270;7575:7;7595:17;7614:18;7636:25;7647:4;7653:1;7656;7659;7636:10;:25::i;:::-;7594:67;;;;7671:18;7683:5;7671:11;:18::i;11540:567:9:-;11697:7;11748:22;;;:10;:22;;;;;11809:20;11788:17;11794:10;11788:5;:17::i;:::-;:41;;;;;;;;:::i;:::-;;11780:89;;;;-1:-1:-1;;;11780:89:9;;21618:2:80;11780:89:9;;;21600:21:80;21657:2;21637:18;;;21630:30;21696:34;21676:18;;;21669:62;-1:-1:-1;;;21747:18:80;;;21740:33;21790:19;;11780:89:9;21416:399:80;11780:89:9;11915:30;;;;;;;;;;;-1:-1:-1;;;;;11915:30:9;;;;;-1:-1:-1;;11897:51:9;;11906:7;;11897:8;:51::i;:::-;11880:68;;11958:48;11969:10;11981:7;11990;11999:6;11958:10;:48::i;:::-;12031:7;-1:-1:-1;;;;;12022:54:9;;12040:10;12052:7;12061:6;12069;12022:54;;;;;;;;;:::i;:::-;;;;;;;;12094:6;11540:567;-1:-1:-1;;;;;;11540:567:9:o;2239:747:14:-;2333:13;2358:20;2381:23;2393:10;2381:11;:23::i;:::-;2358:46;-1:-1:-1;2429:23:14;2419:6;:33;;;;;;;;:::i;:::-;;2415:77;;2475:6;2239:747;-1:-1:-1;;2239:747:14:o;2415:77::-;2602:15;2620:24;;;:12;:24;;;;;;2658:21;2654:326;;-1:-1:-1;2702:6:14;2239:747;-1:-1:-1;;2239:747:14:o;2654:326::-;2729:9;;:34;;-1:-1:-1;;;2729:34:14;;;;;643:25:80;;;-1:-1:-1;;;;;2729:9:14;;;;:25;;616:18:80;;2729:34:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2725:255;;;-1:-1:-1;2786:22:14;;2239:747;-1:-1:-1;;;2239:747:14:o;2725:255::-;2829:9;;:37;;-1:-1:-1;;;2829:37:14;;;;;643:25:80;;;-1:-1:-1;;;;;2829:9:14;;;;:28;;616:18:80;;2829:37:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2825:155;;;-1:-1:-1;2889:20:14;;2239:747;-1:-1:-1;;;2239:747:14:o;2825:155::-;-1:-1:-1;2947:22:14;;2239:747;-1:-1:-1;;;2239:747:14:o;5204:310:55:-;5423:7;5449:58;5463:7;5472:6;5480:9;5491:15;5449:13;:58::i;:::-;5442:65;5204:310;-1:-1:-1;;;;;5204:310:55:o;6015:171:52:-;6096:44;6111:12;;6125:14;6096:44;;;;;;;:::i;:::-;;;;;;;;6150:12;:29;6015:171::o;2130:206:56:-;2290:39;;-1:-1:-1;;;2290:39:56;;;;;643:25:80;;;2260:7:56;;2290;-1:-1:-1;;;;;2290:26:56;;;;616:18:80;;2290:39:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2283:46:56;;2130:206;-1:-1:-1;;2130:206:56:o;6404:1424:9:-;6596:7;6678:19;:17;:19::i;:::-;6636:38;6645:10;6657:16;6672:1;6657:12;:16;:::i;6636:38::-;:61;;6615:175;;;;-1:-1:-1;;;6615:175:9;;23044:2:80;6615:175:9;;;23026:21:80;23083:2;23063:18;;;23056:30;23122:34;23102:18;;;23095:62;23193:34;23173:18;;;23166:62;-1:-1:-1;;;23244:19:80;;;23237:34;23288:19;;6615:175:9;22842:471:80;6615:175:9;6801:18;6822:71;6835:7;6844:6;6852:9;6879:11;6863:29;;;;;;6822:12;:71::i;:::-;6801:92;;6930:6;:13;6912:7;:14;:31;6904:77;;;;-1:-1:-1;;;6904:77:9;;;;;;;:::i;:::-;7017:9;:16;6999:7;:14;:34;6991:80;;;;-1:-1:-1;;;6991:80:9;;;;;;;:::i;:::-;7106:1;7089:7;:14;:18;7081:55;;;;-1:-1:-1;;;7081:55:9;;23922:2:80;7081:55:9;;;23904:21:80;23961:2;23941:18;;;23934:30;-1:-1:-1;;;23980:18:80;;;23973:54;24044:18;;7081:55:9;23720:348:80;7081:55:9;7147:29;7179:22;;;:10;:22;;;;;;;;;7219:26;;;;;;;;;;-1:-1:-1;;;;;7219:26:9;;;;;1600:20:38;7211:74:9;;;;-1:-1:-1;;;7211:74:9;;24275:2:80;7211:74:9;;;24257:21:80;24314:2;24294:18;;;24287:30;24353:34;24333:18;;;24326:62;-1:-1:-1;;;24404:18:80;;;24397:31;24445:19;;7211:74:9;24073:397:80;7211:74:9;7296:15;7340:24;:13;5012:12:52;;;4925:106;7340:13:9;:22;:24::i;:::-;7314:23;:12;:21;:23::i;:::-;:50;;;;:::i;:::-;7296:68;;7374:15;7403:25;:14;5125:13:52;;;5037:108;7403:25:9;7392:36;;:8;:36;:::i;:::-;7374:54;-1:-1:-1;7439:40:9;:8;7470;7439:30;:40::i;:::-;7489:38;:16;;;7518:8;7489:28;:38::i;:::-;7543:250;7572:10;719::34;7622:7:9;7643:6;7676:7;:14;-1:-1:-1;;;;;7663:28:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7705:9;7728:8;7750;7772:11;7543:250;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;7811:10:9;;6404:1424;-1:-1:-1;;;;;;;6404:1424:9:o;6134:176:14:-;6237:9;;6214:56;;;-1:-1:-1;;;;;6237:9:14;;;26924:34:80;;26994:15;;;26989:2;26974:18;;26967:43;6214:56:14;;26859:18:80;6214:56:14;;;;;;;6280:9;:23;;-1:-1:-1;;;;;;6280:23:14;-1:-1:-1;;;;;6280:23:14;;;;;;;;;;6134:176::o;4336:179:52:-;4443:7;4473:35;4491:16;4506:1;4491:12;:16;:::i;4446:254:33:-;4575:12;4606:87;4628:6;4636:4;4642:5;4606:87;;;;;;;;;;;;;;;;;:21;:87::i;5568:441:52:-;1542:5;5706:17;:41;;5685:119;;;;-1:-1:-1;;;5685:119:52;;27223:2:80;5685:119:52;;;27205:21:80;27262:2;27242:18;;;27235:30;27301:33;27281:18;;;27274:61;27352:18;;5685:119:52;27021:355:80;5685:119:52;5838:26;;;5874:46;;;;5936:66;;;;;;5838:26;;5903:17;;5936:66;:::i;6192:298::-;6353:1;6335:15;:19;6327:53;;;;-1:-1:-1;;;6327:53:52;;27583:2:80;6327:53:52;;;27565:21:80;27622:2;27602:18;;;27595:30;-1:-1:-1;;;27641:18:80;;;27634:51;27702:18;;6327:53:52;27381:345:80;6327:53:52;6395:47;6411:13;;6426:15;6395:47;;;;;;;:::i;:::-;;;;;;;;6452:13;:31;6192:298::o;1773:213:56:-;1937:42;;-1:-1:-1;;;1937:42:56;;-1:-1:-1;;;;;27923:32:80;;;1937:42:56;;;27905:51:80;27972:18;;;27965:34;;;1907:7:56;;1937;:20;;;;;;27878:18:80;;1937:42:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1930:49:56;;1773:213;-1:-1:-1;;;1773:213:56:o;3726:251:52:-;3841:7;1542:5;3919:15;;3884:32;3904:11;3884:19;:32::i;2228:214:9:-;2330:4;-1:-1:-1;;;;;;2353:42:9;;-1:-1:-1;;;2353:42:9;;:82;;;2399:36;2423:11;2399:23;:36::i;4468:323:14:-;4696:9;;:88;;-1:-1:-1;;;4696:88:14;;-1:-1:-1;;;;;4696:9:14;;;;:22;;4726:9;;4696:88;;4737:7;;4746:6;;4754:9;;4696;;4768:15;;4696:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4468:323;;;;;:::o;1588:441:37:-;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;-1:-1:-1;;;;;1710:25:37;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:37;;1688:47;;-1:-1:-1;;;1745:6:37;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:37;;;;;;;;;-1:-1:-1;;;1770:6:37;1777:1;1770:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1770:15:37;;;;;;;;-1:-1:-1;1800:9:37;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:37;1887:3;1879:11;1866:25;;;;;;;:::i;:::-;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1854:37:37;;;;;;;;-1:-1:-1;1915:1:37;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:37;;1936:55;;;;-1:-1:-1;;;1936:55:37;;28485:2:80;1936:55:37;;;28467:21:80;;;28504:18;;;28497:30;28563:34;28543:18;;;28536:62;28615:18;;1936:55:37;28283:356:80;3143:308:40;3196:7;3227:4;-1:-1:-1;;;;;3236:12:40;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:40;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:40;;;3392:10;3633:73;;;;33861:25:80;;;;3404:12:40;33902:18:80;;;33895:34;3418:15:40;33945:18:80;;;33938:34;3677:13:40;33988:18:80;;;33981:34;3700:4:40;34031:19:80;;;;34024:61;;;;3633:73:40;;;;;;;;;;33833:19:80;;;;3633:73:40;;;3623:84;;;;;;4014:183:55:o;5716:1603:39:-;5842:7;;-1:-1:-1;;;;;6753:79:39;;6749:161;;;-1:-1:-1;6864:1:39;;-1:-1:-1;6868:30:39;6848:51;;6749:161;6923:1;:7;;6928:2;6923:7;;:18;;;;;6934:1;:7;;6939:2;6934:7;;6923:18;6919:100;;;-1:-1:-1;6973:1:39;;-1:-1:-1;6977:30:39;6957:51;;6919:100;7130:24;;;7113:14;7130:24;;;;;;;;;29268:25:80;;;29341:4;29329:17;;29309:18;;;29302:45;;;;29363:18;;;29356:34;;;29406:18;;;29399:34;;;7130:24:39;;29240:19:80;;7130:24:39;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7130:24:39;;-1:-1:-1;;7130:24:39;;;-1:-1:-1;;;;;;;7168:20:39;;7164:101;;7220:1;7224:29;7204:50;;;;;;;7164:101;7283:6;-1:-1:-1;7291:20:39;;-1:-1:-1;5716:1603:39;;;;;;;;:::o;548:631::-;625:20;616:5;:29;;;;;;;;:::i;:::-;;612:561;;;548:631;:::o;612:561::-;721:29;712:5;:38;;;;;;;;:::i;:::-;;708:465;;;766:34;;-1:-1:-1;;;766:34:39;;29646:2:80;766:34:39;;;29628:21:80;29685:2;29665:18;;;29658:30;-1:-1:-1;;;29704:18:80;;;29697:54;29768:18;;766:34:39;29444:348:80;708:465:39;830:35;821:5;:44;;;;;;;;:::i;:::-;;817:356;;;881:41;;-1:-1:-1;;;881:41:39;;29999:2:80;881:41:39;;;29981:21:80;30038:2;30018:18;;;30011:30;30077:33;30057:18;;;30050:61;30128:18;;881:41:39;29797:355:80;817:356:39;952:30;943:5;:39;;;;;;;;:::i;:::-;;939:234;;;998:44;;-1:-1:-1;;;998:44:39;;30359:2:80;998:44:39;;;30341:21:80;30398:2;30378:18;;;30371:30;30437:34;30417:18;;;30410:62;-1:-1:-1;;;30488:18:80;;;30481:32;30530:19;;998:44:39;30157:398:80;939:234:39;1072:30;1063:5;:39;;;;;;;;:::i;:::-;;1059:114;;;1118:44;;-1:-1:-1;;;1118:44:39;;30762:2:80;1118:44:39;;;30744:21:80;30801:2;30781:18;;;30774:30;30840:34;30820:18;;;30813:62;-1:-1:-1;;;30891:18:80;;;30884:32;30933:19;;1118:44:39;30560:398:80;2503:780:12;2665:33;2701:26;;;:14;:26;;;;;;;;-1:-1:-1;;;;;2747:30:12;;;;:21;;;:30;;;;;;;;;2746:31;2738:83;;;;-1:-1:-1;;;2738:83:12;;31165:2:80;2738:83:12;;;31147:21:80;31204:2;31184:18;;;31177:30;31243:34;31223:18;;;31216:62;-1:-1:-1;;;31294:18:80;;;31287:37;31341:19;;2738:83:12;30963:403:80;2738:83:12;-1:-1:-1;;;;;2831:30:12;;;;;;:21;;;:30;;;;;:37;;-1:-1:-1;;2831:37:12;2864:4;2831:37;;;2883:34;;:7;:34;;;2879:398;;;2962:6;2933:12;:25;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;2879:398:12;;-1:-1:-1;2879:398:12;;2989:30;;;3006:12;2989:30;2985:292;;;3060:6;3035:12;:21;;;:31;;;;;;;:::i;2985:292::-;3087:34;;;3104:16;3087:34;3083:194;;;3166:6;3137:12;:25;;;:35;;;;;;;:::i;3083:194::-;3203:63;;-1:-1:-1;;;3203:63:12;;31573:2:80;3203:63:12;;;31555:21:80;31612:2;31592:18;;;31585:30;31651:34;31631:18;;;31624:62;-1:-1:-1;;;31702:18:80;;;31695:51;31763:19;;3203:63:12;31371:417:80;4065:914:9;4138:13;4195:22;;;:10;:22;;;;;;;4232:17;;;;;;4228:77;;;-1:-1:-1;4272:22:9;;4065:914;-1:-1:-1;;4065:914:9:o;4228:77::-;4319:17;;;;;;;;;4315:77;;;-1:-1:-1;4359:22:9;;4065:914;-1:-1:-1;;4065:914:9:o;4315:77::-;4402:16;4421:28;4438:10;4421:16;:28::i;:::-;4402:47;-1:-1:-1;4464:13:9;4460:83;;4493:39;;-1:-1:-1;;;4493:39:9;;31995:2:80;4493:39:9;;;31977:21:80;32034:2;32014:18;;;32007:30;32073:31;32053:18;;;32046:59;32122:18;;4493:39:9;31793:353:80;4460:83:9;4569:12;4557:8;:24;4553:83;;-1:-1:-1;4604:21:9;;4065:914;-1:-1:-1;;;4065:914:9:o;4553:83::-;4646:16;4665:28;4682:10;4665:16;:28::i;:::-;4646:47;;4720:12;4708:8;:24;4704:82;;-1:-1:-1;4755:20:9;;4065:914;-1:-1:-1;;;;4065:914:9:o;4704:82::-;4800:26;4815:10;4800:14;:26::i;:::-;:56;;;;-1:-1:-1;2211:4:12;2263:26;;;:14;:26;;;;;2331:25;;2307:21;;;;;:49;4830:26:9;4796:177;;;-1:-1:-1;4879:23:9;;4065:914;-1:-1:-1;;;;4065:914:9:o;4796:177::-;-1:-1:-1;4940:22:9;;4065:914;-1:-1:-1;;;;4065:914:9:o;4949:482:14:-;5141:7;5160:18;5181:58;5195:7;5204:6;5212:9;5223:15;5181:13;:58::i;:::-;5254:24;;;;:12;:24;;;;;;5160:79;;-1:-1:-1;5254:29:14;5250:147;;5299:9;;;5316:24;;;:12;:24;;;;;;;;5299:42;;-1:-1:-1;;;5299:42:14;;-1:-1:-1;;;;;5299:9:14;;;;:16;;:42;;;;643:25:80;;;631:2;616:18;;497:177;5299:42:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5362:24:14;;;;:12;:24;;;;;5355:31;-1:-1:-1;5414:10:14;4949:482;-1:-1:-1;;;;;4949:482:14:o;2571:187:44:-;2627:6;-1:-1:-1;;;;;2653:25:44;;;2645:76;;;;-1:-1:-1;;;2645:76:44;;32353:2:80;2645:76:44;;;32335:21:80;32392:2;32372:18;;;32365:30;32431:34;32411:18;;;32404:62;-1:-1:-1;;;32482:18:80;;;32475:36;32528:19;;2645:76:44;32151:402:80;2645:76:44;-1:-1:-1;2745:5:44;2571:187::o;1293:119:38:-;1378:27;;-1:-1:-1;;;;;;1378:27:38;-1:-1:-1;;;;;1378:27:38;;;;;;;1293:119::o;4948:499:33:-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:33;;32760:2:80;5137:81:33;;;32742:21:80;32799:2;32779:18;;;32772:30;32838:34;32818:18;;;32811:62;-1:-1:-1;;;32889:18:80;;;32882:36;32935:19;;5137:81:33;32558:402:80;5137:81:33;-1:-1:-1;;;;;1465:19:33;;;5228:60;;;;-1:-1:-1;;;5228:60:33;;33167:2:80;5228:60:33;;;33149:21:80;33206:2;33186:18;;;33179:30;33245:31;33225:18;;;33218:59;33294:18;;5228:60:33;32965:353:80;5228:60:33;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:33;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;2620:202:6:-;2705:4;-1:-1:-1;;;;;;2728:47:6;;-1:-1:-1;;;2728:47:6;;:87;;-1:-1:-1;;;;;;;;;;937:40:41;;;2779:36:6;829:155:41;1717:276:12;1801:4;1853:26;;;:14;:26;;;;;1961:25;;;;1937:21;;;;:49;;1961:25;1937:49;:::i;:::-;1897:36;1904:28;1921:10;1904:16;:28::i;1897:36::-;:89;;;1717:276;-1:-1:-1;;;1717:276:12:o;9525:647:9:-;9708:7;9727:18;9748:57;9761:7;9770:6;9778:9;9789:15;9748:12;:57::i;:::-;9727:78;;9815:20;9838:17;9844:10;9838:5;:17::i;:::-;9815:40;-1:-1:-1;9897:22:9;9887:6;:32;;;;;;;;:::i;:::-;;;:67;;;;-1:-1:-1;9933:21:9;9923:6;:31;;;;;;;;:::i;:::-;;;9887:67;:103;;;;-1:-1:-1;9968:22:9;9958:6;:32;;;;;;;;:::i;:::-;;;9887:103;9866:179;;;;-1:-1:-1;;;9866:179:9;;34298:2:80;9866:179:9;;;34280:21:80;34337:2;34317:18;;;34310:30;34376:31;34356:18;;;34349:59;34425:18;;9866:179:9;34096:353:80;9866:179:9;10055:22;;;;:10;:22;;;;;;;;;:31;:38;;-1:-1:-1;;10055:38:9;;;;;10109:28;;;;;10066:10;643:25:80;;631:2;616:18;;497:177;7561:692:33;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:33;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:33;;;;;;;;:::i;14:286:80:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:80;;209:43;;199:71;;266:1;263;256:12;679:180;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:80;;679:180;-1:-1:-1;679:180:80:o;864:258::-;936:1;946:113;960:6;957:1;954:13;946:113;;;1036:11;;;1030:18;1017:11;;;1010:39;982:2;975:10;946:113;;;1077:6;1074:1;1071:13;1068:48;;;1112:1;1103:6;1098:3;1094:16;1087:27;1068:48;;864:258;;;:::o;1127:::-;1169:3;1207:5;1201:12;1234:6;1229:3;1222:19;1250:63;1306:6;1299:4;1294:3;1290:14;1283:4;1276:5;1272:16;1250:63;:::i;:::-;1367:2;1346:15;-1:-1:-1;;1342:29:80;1333:39;;;;1374:4;1329:50;;1127:258;-1:-1:-1;;1127:258:80:o;1390:220::-;1539:2;1528:9;1521:21;1502:4;1559:45;1600:2;1589:9;1585:18;1577:6;1559:45;:::i;1615:127::-;1676:10;1671:3;1667:20;1664:1;1657:31;1707:4;1704:1;1697:15;1731:4;1728:1;1721:15;1747:275;1818:2;1812:9;1883:2;1864:13;;-1:-1:-1;;1860:27:80;1848:40;;-1:-1:-1;;;;;1903:34:80;;1939:22;;;1900:62;1897:88;;;1965:18;;:::i;:::-;2001:2;1994:22;1747:275;;-1:-1:-1;1747:275:80:o;2027:183::-;2087:4;-1:-1:-1;;;;;2109:30:80;;2106:56;;;2142:18;;:::i;:::-;-1:-1:-1;2187:1:80;2183:14;2199:4;2179:25;;2027:183::o;2215:131::-;-1:-1:-1;;;;;2290:31:80;;2280:42;;2270:70;;2336:1;2333;2326:12;2351:737;2405:5;2458:3;2451:4;2443:6;2439:17;2435:27;2425:55;;2476:1;2473;2466:12;2425:55;2512:6;2499:20;2538:4;2562:60;2578:43;2618:2;2578:43;:::i;:::-;2562:60;:::i;:::-;2656:15;;;2742:1;2738:10;;;;2726:23;;2722:32;;;2687:12;;;;2766:15;;;2763:35;;;2794:1;2791;2784:12;2763:35;2830:2;2822:6;2818:15;2842:217;2858:6;2853:3;2850:15;2842:217;;;2938:3;2925:17;2955:31;2980:5;2955:31;:::i;:::-;2999:18;;3037:12;;;;2875;;2842:217;;;-1:-1:-1;3077:5:80;2351:737;-1:-1:-1;;;;;;2351:737:80:o;3093:662::-;3147:5;3200:3;3193:4;3185:6;3181:17;3177:27;3167:55;;3218:1;3215;3208:12;3167:55;3254:6;3241:20;3280:4;3304:60;3320:43;3360:2;3320:43;:::i;3304:60::-;3398:15;;;3484:1;3480:10;;;;3468:23;;3464:32;;;3429:12;;;;3508:15;;;3505:35;;;3536:1;3533;3526:12;3505:35;3572:2;3564:6;3560:15;3584:142;3600:6;3595:3;3592:15;3584:142;;;3666:17;;3654:30;;3704:12;;;;3617;;3584:142;;3760:406;3824:5;-1:-1:-1;;;;;3847:30:80;;3844:56;;;3880:18;;:::i;:::-;3918:57;3963:2;3942:15;;-1:-1:-1;;3938:29:80;3969:4;3934:40;3918:57;:::i;:::-;3909:66;;3998:6;3991:5;3984:21;4038:3;4029:6;4024:3;4020:16;4017:25;4014:45;;;4055:1;4052;4045:12;4014:45;4104:6;4099:3;4092:4;4085:5;4081:16;4068:43;4158:1;4151:4;4142:6;4135:5;4131:18;4127:29;4120:40;3760:406;;;;;:::o;4171:1087::-;4223:5;4276:3;4269:4;4261:6;4257:17;4253:27;4243:55;;4294:1;4291;4284:12;4243:55;4330:6;4317:20;4356:4;4380:60;4396:43;4436:2;4396:43;:::i;4380:60::-;4474:15;;;4560:1;4556:10;;;;4544:23;;4540:32;;;4505:12;;;;4584:15;;;4581:35;;;4612:1;4609;4602:12;4581:35;4648:2;4640:6;4636:15;4660:569;4676:6;4671:3;4668:15;4660:569;;;4749:17;;-1:-1:-1;;;;;4782:35:80;;4779:125;;;4858:1;4887:2;4883;4876:14;4779:125;4927:24;;4986:2;4978:11;;4974:21;-1:-1:-1;4964:119:80;;5037:1;5066:2;5062;5055:14;4964:119;5108:78;5182:3;5176:2;5172;5168:11;5155:25;5150:2;5146;5142:11;5108:78;:::i;:::-;5096:91;;-1:-1:-1;5207:12:80;;;;4693;;4660:569;;5263:897;5433:6;5441;5449;5457;5510:3;5498:9;5489:7;5485:23;5481:33;5478:53;;;5527:1;5524;5517:12;5478:53;5554:23;;-1:-1:-1;;;;;5626:14:80;;;5623:34;;;5653:1;5650;5643:12;5623:34;5676:61;5729:7;5720:6;5709:9;5705:22;5676:61;:::i;:::-;5666:71;;5790:2;5779:9;5775:18;5762:32;5746:48;;5819:2;5809:8;5806:16;5803:36;;;5835:1;5832;5825:12;5803:36;5858:63;5913:7;5902:8;5891:9;5887:24;5858:63;:::i;:::-;5848:73;;5974:2;5963:9;5959:18;5946:32;5930:48;;6003:2;5993:8;5990:16;5987:36;;;6019:1;6016;6009:12;5987:36;;6042:61;6095:7;6084:8;6073:9;6069:24;6042:61;:::i;:::-;5263:897;;;;-1:-1:-1;6032:71:80;;6150:2;6135:18;6122:32;;-1:-1:-1;;;5263:897:80:o;6532:315::-;6600:6;6608;6661:2;6649:9;6640:7;6636:23;6632:32;6629:52;;;6677:1;6674;6667:12;6629:52;6713:9;6700:23;6690:33;;6773:2;6762:9;6758:18;6745:32;6786:31;6811:5;6786:31;:::i;:::-;6836:5;6826:15;;;6532:315;;;;;:::o;6852:156::-;6918:20;;6978:4;6967:16;;6957:27;;6947:55;;6998:1;6995;6988:12;6947:55;6852:156;;;:::o;7013:458::-;7104:6;7112;7120;7128;7136;7189:3;7177:9;7168:7;7164:23;7160:33;7157:53;;;7206:1;7203;7196:12;7157:53;7242:9;7229:23;7219:33;;7271:36;7303:2;7292:9;7288:18;7271:36;:::i;:::-;7261:46;;7326:36;7358:2;7347:9;7343:18;7326:36;:::i;:::-;7013:458;;;;-1:-1:-1;7316:46:80;;7409:2;7394:18;;7381:32;;-1:-1:-1;7460:3:80;7445:19;7432:33;;7013:458;-1:-1:-1;;7013:458:80:o;7476:127::-;7537:10;7532:3;7528:20;7525:1;7518:31;7568:4;7565:1;7558:15;7592:4;7589:1;7582:15;7608:346;7758:2;7743:18;;7791:1;7780:13;;7770:144;;7836:10;7831:3;7827:20;7824:1;7817:31;7871:4;7868:1;7861:15;7899:4;7896:1;7889:15;7770:144;7923:25;;;7608:346;:::o;8834:250::-;8900:6;8908;8961:2;8949:9;8940:7;8936:23;8932:32;8929:52;;;8977:1;8974;8967:12;8929:52;9013:9;9000:23;8990:33;;9042:36;9074:2;9063:9;9059:18;9042:36;:::i;:::-;9032:46;;8834:250;;;;;:::o;9089:348::-;9141:8;9151:6;9205:3;9198:4;9190:6;9186:17;9182:27;9172:55;;9223:1;9220;9213:12;9172:55;-1:-1:-1;9246:20:80;;-1:-1:-1;;;;;9278:30:80;;9275:50;;;9321:1;9318;9311:12;9275:50;9358:4;9350:6;9346:17;9334:29;;9410:3;9403:4;9394:6;9386;9382:19;9378:30;9375:39;9372:59;;;9427:1;9424;9417:12;9372:59;9089:348;;;;;:::o;9442:549::-;9529:6;9537;9545;9553;9606:2;9594:9;9585:7;9581:23;9577:32;9574:52;;;9622:1;9619;9612:12;9574:52;9658:9;9645:23;9635:33;;9687:36;9719:2;9708:9;9704:18;9687:36;:::i;:::-;9677:46;-1:-1:-1;9774:2:80;9759:18;;9746:32;-1:-1:-1;;;;;9790:30:80;;9787:50;;;9833:1;9830;9823:12;9787:50;9872:59;9923:7;9914:6;9903:9;9899:22;9872:59;:::i;:::-;9442:549;;;;-1:-1:-1;9950:8:80;-1:-1:-1;;;;9442:549:80:o;9996:1157::-;10176:6;10184;10192;10200;10253:3;10241:9;10232:7;10228:23;10224:33;10221:53;;;10270:1;10267;10260:12;10221:53;10297:23;;-1:-1:-1;;;;;10369:14:80;;;10366:34;;;10396:1;10393;10386:12;10366:34;10419:61;10472:7;10463:6;10452:9;10448:22;10419:61;:::i;:::-;10409:71;;10533:2;10522:9;10518:18;10505:32;10489:48;;10562:2;10552:8;10549:16;10546:36;;;10578:1;10575;10568:12;10546:36;10601:63;10656:7;10645:8;10634:9;10630:24;10601:63;:::i;:::-;10591:73;;10717:2;10706:9;10702:18;10689:32;10673:48;;10746:2;10736:8;10733:16;10730:36;;;10762:1;10759;10752:12;10730:36;10785:61;10838:7;10827:8;10816:9;10812:24;10785:61;:::i;:::-;10775:71;;10899:2;10888:9;10884:18;10871:32;10855:48;;10928:2;10918:8;10915:16;10912:36;;;10944:1;10941;10934:12;10912:36;-1:-1:-1;10967:24:80;;11022:4;11014:13;;11010:27;-1:-1:-1;11000:55:80;;11051:1;11048;11041:12;11000:55;11074:73;11139:7;11134:2;11121:16;11116:2;11112;11108:11;11074:73;:::i;:::-;11064:83;;;9996:1157;;;;;;;:::o;11158:274::-;11244:6;11297:2;11285:9;11276:7;11272:23;11268:32;11265:52;;;11313:1;11310;11303:12;11265:52;11352:9;11339:23;11371:31;11396:5;11371:31;:::i;11437:613::-;11525:6;11533;11541;11549;11602:2;11590:9;11581:7;11577:23;11573:32;11570:52;;;11618:1;11615;11608:12;11570:52;11657:9;11644:23;11676:31;11701:5;11676:31;:::i;:::-;11726:5;-1:-1:-1;11778:2:80;11763:18;;11750:32;;-1:-1:-1;11833:2:80;11818:18;;11805:32;-1:-1:-1;;;;;11849:30:80;;11846:50;;;11892:1;11889;11882:12;12263:315;12331:6;12339;12392:2;12380:9;12371:7;12367:23;12363:32;12360:52;;;12408:1;12405;12398:12;12360:52;12447:9;12434:23;12466:31;12491:5;12466:31;:::i;:::-;12516:5;12568:2;12553:18;;;;12540:32;;-1:-1:-1;;;12263:315:80:o;12583:348::-;12785:2;12767:21;;;12824:2;12804:18;;;12797:30;-1:-1:-1;;;12858:2:80;12843:18;;12836:54;12922:2;12907:18;;12583:348::o;12936:380::-;13015:1;13011:12;;;;13058;;;13079:61;;13133:4;13125:6;13121:17;13111:27;;13079:61;13186:2;13178:6;13175:14;13155:18;13152:38;13149:161;;;13232:10;13227:3;13223:20;13220:1;13213:31;13267:4;13264:1;13257:15;13295:4;13292:1;13285:15;13149:161;;12936:380;;;:::o;13321:397::-;13523:2;13505:21;;;13562:2;13542:18;;;13535:30;13601:34;13596:2;13581:18;;13574:62;-1:-1:-1;;;13667:2:80;13652:18;;13645:31;13708:3;13693:19;;13321:397::o;13723:184::-;13793:6;13846:2;13834:9;13825:7;13821:23;13817:32;13814:52;;;13862:1;13859;13852:12;13814:52;-1:-1:-1;13885:16:80;;13723:184;-1:-1:-1;13723:184:80:o;13912:461::-;13965:3;14003:5;13997:12;14030:6;14025:3;14018:19;14056:4;14085:2;14080:3;14076:12;14069:19;;14122:2;14115:5;14111:14;14143:1;14153:195;14167:6;14164:1;14161:13;14153:195;;;14232:13;;-1:-1:-1;;;;;14228:39:80;14216:52;;14288:12;;;;14323:15;;;;14264:1;14182:9;14153:195;;;-1:-1:-1;14364:3:80;;13912:461;-1:-1:-1;;;;;13912:461:80:o;14378:435::-;14431:3;14469:5;14463:12;14496:6;14491:3;14484:19;14522:4;14551:2;14546:3;14542:12;14535:19;;14588:2;14581:5;14577:14;14609:1;14619:169;14633:6;14630:1;14627:13;14619:169;;;14694:13;;14682:26;;14728:12;;;;14763:15;;;;14655:1;14648:9;14619:169;;14818:591;14869:3;14900;14932:5;14926:12;14959:6;14954:3;14947:19;14985:4;15014:2;15009:3;15005:12;14998:19;;15070:2;15060:6;15057:1;15053:14;15046:5;15042:26;15038:35;15107:2;15100:5;15096:14;15128:1;15138:245;15152:6;15149:1;15146:13;15138:245;;;15239:2;15235:7;15227:5;15221:4;15217:16;15213:30;15208:3;15201:43;15265:38;15298:4;15289:6;15283:13;15265:38;:::i;:::-;15361:12;;;;15257:46;-1:-1:-1;15326:15:80;;;;15174:1;15167:9;15138:245;;;-1:-1:-1;15399:4:80;;14818:591;-1:-1:-1;;;;;;;14818:591:80:o;15414:838::-;15831:3;15820:9;15813:22;15794:4;15858:57;15910:3;15899:9;15895:19;15887:6;15858:57;:::i;:::-;15963:9;15955:6;15951:22;15946:2;15935:9;15931:18;15924:50;15997:44;16034:6;16026;15997:44;:::i;:::-;15983:58;;16089:9;16081:6;16077:22;16072:2;16061:9;16057:18;16050:50;16117:42;16152:6;16144;16117:42;:::i;:::-;16190:2;16175:18;;16168:34;;;;-1:-1:-1;;16233:3:80;16218:19;16211:35;16109:50;15414:838;-1:-1:-1;;;15414:838:80:o;16446:910::-;16891:3;16880:9;16873:22;16854:4;16918:57;16970:3;16959:9;16955:19;16947:6;16918:57;:::i;:::-;17023:9;17015:6;17011:22;17006:2;16995:9;16991:18;16984:50;17057:44;17094:6;17086;17057:44;:::i;:::-;17043:58;;17149:9;17141:6;17137:22;17132:2;17121:9;17117:18;17110:50;17177:42;17212:6;17204;17177:42;:::i;:::-;17250:2;17235:18;;17228:34;;;;-1:-1:-1;;17293:3:80;17278:19;;17271:35;;;;17337:3;17322:19;;;17315:35;17169:50;16446:910;-1:-1:-1;;;16446:910:80:o;17361:127::-;17422:10;17417:3;17413:20;17410:1;17403:31;17453:4;17450:1;17443:15;17477:4;17474:1;17467:15;17493:128;17533:3;17564:1;17560:6;17557:1;17554:13;17551:39;;;17570:18;;:::i;:::-;-1:-1:-1;17606:9:80;;17493:128::o;17626:248::-;17800:25;;;17856:2;17841:18;;17834:34;17788:2;17773:18;;17626:248::o;18626:168::-;18666:7;18732:1;18728;18724:6;18720:14;18717:1;18714:21;18709:1;18702:9;18695:17;18691:45;18688:71;;;18739:18;;:::i;:::-;-1:-1:-1;18779:9:80;;18626:168::o;18799:217::-;18839:1;18865;18855:132;;18909:10;18904:3;18900:20;18897:1;18890:31;18944:4;18941:1;18934:15;18972:4;18969:1;18962:15;18855:132;-1:-1:-1;19001:9:80;;18799:217::o;19021:125::-;19061:4;19089:1;19086;19083:8;19080:34;;;19094:18;;:::i;:::-;-1:-1:-1;19131:9:80;;19021:125::o;19504:758::-;19885:3;19874:9;19867:22;19848:4;19912:57;19964:3;19953:9;19949:19;19941:6;19912:57;:::i;:::-;20017:9;20009:6;20005:22;20000:2;19989:9;19985:18;19978:50;20051:44;20088:6;20080;20051:44;:::i;:::-;20037:58;;20143:9;20135:6;20131:22;20126:2;20115:9;20111:18;20104:50;20171:42;20206:6;20198;20171:42;:::i;:::-;20163:50;;;20249:6;20244:2;20233:9;20229:18;20222:34;19504:758;;;;;;;:::o;20625:786::-;-1:-1:-1;;;21031:3:80;21024:38;21006:3;21091:6;21085:13;21107:62;21162:6;21157:2;21152:3;21148:12;21141:4;21133:6;21129:17;21107:62;:::i;:::-;-1:-1:-1;;;21228:2:80;21188:16;;;21220:11;;;21213:40;21278:13;;21300:63;21278:13;21349:2;21341:11;;21334:4;21322:17;;21300:63;:::i;:::-;21383:17;21402:2;21379:26;;20625:786;-1:-1:-1;;;;20625:786:80:o;21820:442::-;22049:6;22038:9;22031:25;22104:4;22096:6;22092:17;22087:2;22076:9;22072:18;22065:45;22146:6;22141:2;22130:9;22126:18;22119:34;22189:3;22184:2;22173:9;22169:18;22162:31;22012:4;22210:46;22251:3;22240:9;22236:19;22228:6;22210:46;:::i;22267:277::-;22334:6;22387:2;22375:9;22366:7;22362:23;22358:32;22355:52;;;22403:1;22400;22393:12;22355:52;22435:9;22429:16;22488:5;22481:13;22474:21;22467:5;22464:32;22454:60;;22510:1;22507;22500:12;22549:288;22618:6;22671:2;22659:9;22650:7;22646:23;22642:32;22639:52;;;22687:1;22684;22677:12;22639:52;22713:16;;-1:-1:-1;;;;;22758:30:80;;22748:41;;22738:69;;22803:1;22800;22793:12;23318:397;23520:2;23502:21;;;23559:2;23539:18;;;23532:30;23598:34;23593:2;23578:18;;23571:62;-1:-1:-1;;;23664:2:80;23649:18;;23642:31;23705:3;23690:19;;23318:397::o;24475:236::-;24514:3;-1:-1:-1;;;;;24580:10:80;;;24610;;;24640:12;;;24632:21;;24629:47;;;24656:18;;:::i;:::-;24692:13;;24475:236;-1:-1:-1;;;;24475:236:80:o;24823:1884::-;25395:4;25424:3;25454:6;25443:9;25436:25;25480:2;25547:1;25543;25538:3;25534:11;25530:19;25522:6;25518:32;25513:2;25502:9;25498:18;25491:60;25587:2;25582;25571:9;25567:18;25560:30;25613:56;25665:2;25654:9;25650:18;25642:6;25613:56;:::i;:::-;25599:70;;25717:9;25709:6;25705:22;25700:2;25689:9;25685:18;25678:50;25751:44;25788:6;25780;25751:44;:::i;:::-;25737:58;;25844:9;25836:6;25832:22;25826:3;25815:9;25811:19;25804:51;25875:6;25910;25904:13;25941:6;25933;25926:22;25976:2;25968:6;25964:15;25957:22;;26035:2;26025:6;26022:1;26018:14;26010:6;26006:27;26002:36;26073:2;26065:6;26061:15;26094:1;26104:252;26118:6;26115:1;26112:13;26104:252;;;26208:2;26204:7;26195:6;26187;26183:19;26179:33;26174:3;26167:46;26236:40;26269:6;26260;26254:13;26236:40;:::i;:::-;26334:12;;;;26226:50;-1:-1:-1;26299:15:80;;;;26140:1;26133:9;26104:252;;;26108:3;;26405:9;26397:6;26393:22;26387:3;26376:9;26372:19;26365:51;26439:42;26474:6;26466;26439:42;:::i;:::-;26425:56;;;;;;26490:46;26531:3;26520:9;26516:19;26508:6;-1:-1:-1;;;;;24781:30:80;24769:43;;24716:102;26490:46;-1:-1:-1;;;;;24781:30:80;;26586:3;26571:19;;24769:43;26640:9;26632:6;26628:22;26622:3;26611:9;26607:19;26600:51;26668:33;26694:6;26686;26668:33;:::i;:::-;26660:41;24823:1884;-1:-1:-1;;;;;;;;;;;;24823:1884:80:o;28010:127::-;28071:10;28066:3;28062:20;28059:1;28052:31;28102:4;28099:1;28092:15;28126:4;28123:1;28116:15;28142:136;28181:3;28209:5;28199:39;;28218:18;;:::i;:::-;-1:-1:-1;;;28254:18:80;;28142:136::o;33323:274::-;33452:3;33490:6;33484:13;33506:53;33552:6;33547:3;33540:4;33532:6;33528:17;33506:53;:::i;:::-;33575:16;;;;;33323:274;-1:-1:-1;;33323:274:80:o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "2772600",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "BALLOT_TYPEHASH()": "infinite",
        "COUNTING_MODE()": "infinite",
        "DEFAULT_ADMIN_ROLE()": "767",
        "FRACTION_DENOMINATOR()": "613",
        "VETO_POWER()": "infinite",
        "cancel(address[],uint256[],bytes[],bytes32)": "infinite",
        "castVote(uint256,uint8)": "infinite",
        "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": "infinite",
        "castVoteWithReason(uint256,uint8,string)": "infinite",
        "execute(address[],uint256[],bytes[],bytes32)": "infinite",
        "getRoleAdmin(bytes32)": "2547",
        "getVotes(address,uint256)": "infinite",
        "grantRole(bytes32,address)": "infinite",
        "hasRole(bytes32,address)": "3200",
        "hasVoted(uint256,address)": "2934",
        "hashProposal(address[],uint256[],bytes[],bytes32)": "infinite",
        "name()": "infinite",
        "proposalDeadline(uint256)": "3241",
        "proposalEta(uint256)": "infinite",
        "proposalSnapshot(uint256)": "2674",
        "proposalThreshold()": "infinite",
        "proposalThreshold(uint256)": "infinite",
        "proposalThresholdNumerator()": "2471",
        "proposalVotes(uint256)": "7059",
        "propose(address[],uint256[],bytes[],string)": "infinite",
        "queue(address[],uint256[],bytes[],bytes32)": "infinite",
        "quorum(uint256)": "infinite",
        "quorumNumerator()": "2889",
        "relay(address,uint256,bytes)": "infinite",
        "renounceRole(bytes32,address)": "29192",
        "revokeRole(bytes32,address)": "infinite",
        "setVotingDelay(uint256)": "infinite",
        "setVotingPeriod(uint256)": "infinite",
        "staking()": "infinite",
        "state(uint256)": "infinite",
        "supportsInterface(bytes4)": "infinite",
        "timelock()": "3079",
        "updateProposalThresholdNumerator(uint256)": "infinite",
        "updateQuorumNumerator(uint256)": "infinite",
        "updateTimelock(address)": "infinite",
        "version()": "infinite",
        "votingDelay()": "2512",
        "votingPeriod()": "2281"
      },
      "internal": {
        "_cancel(address[] memory,uint256[] memory,bytes memory[] memory,bytes32)": "infinite",
        "_execute(uint256,address[] memory,uint256[] memory,bytes memory[] memory,bytes32)": "infinite",
        "_executor()": "infinite"
      }
    },
    "methodIdentifiers": {
      "BALLOT_TYPEHASH()": "deaaa7cc",
      "COUNTING_MODE()": "dd4e2ba5",
      "DEFAULT_ADMIN_ROLE()": "a217fddf",
      "FRACTION_DENOMINATOR()": "5d643493",
      "VETO_POWER()": "8834987d",
      "cancel(address[],uint256[],bytes[],bytes32)": "452115d6",
      "castVote(uint256,uint8)": "56781388",
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": "3bccf4fd",
      "castVoteWithReason(uint256,uint8,string)": "7b3c71d3",
      "execute(address[],uint256[],bytes[],bytes32)": "2656227d",
      "getRoleAdmin(bytes32)": "248a9ca3",
      "getVotes(address,uint256)": "eb9019d4",
      "grantRole(bytes32,address)": "2f2ff15d",
      "hasRole(bytes32,address)": "91d14854",
      "hasVoted(uint256,address)": "43859632",
      "hashProposal(address[],uint256[],bytes[],bytes32)": "c59057e4",
      "name()": "06fdde03",
      "proposalDeadline(uint256)": "c01f9e37",
      "proposalEta(uint256)": "ab58fb8e",
      "proposalSnapshot(uint256)": "2d63f693",
      "proposalThreshold()": "b58131b0",
      "proposalThreshold(uint256)": "7629a4ac",
      "proposalThresholdNumerator()": "327a71e7",
      "proposalVotes(uint256)": "544ffc9c",
      "propose(address[],uint256[],bytes[],string)": "7d5e81e2",
      "queue(address[],uint256[],bytes[],bytes32)": "160cbed7",
      "quorum(uint256)": "f8ce560a",
      "quorumNumerator()": "a7713a70",
      "relay(address,uint256,bytes)": "c28bc2fa",
      "renounceRole(bytes32,address)": "36568abe",
      "revokeRole(bytes32,address)": "d547741f",
      "setVotingDelay(uint256)": "70b0f660",
      "setVotingPeriod(uint256)": "ea0217cf",
      "staking()": "4cf088d9",
      "state(uint256)": "3e4f49e6",
      "supportsInterface(bytes4)": "01ffc9a7",
      "timelock()": "d33219b4",
      "updateProposalThresholdNumerator(uint256)": "e0cf1f9b",
      "updateQuorumNumerator(uint256)": "06f3f9e6",
      "updateTimelock(address)": "a890c910",
      "version()": "54fd4d50",
      "votingDelay()": "3932abb1",
      "votingPeriod()": "02a251a3"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVotesHistory\",\"name\":\"_staking\",\"type\":\"address\"},{\"internalType\":\"contract TimelockController\",\"name\":\"_timelock\",\"type\":\"address\"},{\"internalType\":\"contract TokenholderGovernor\",\"name\":\"tokenholderGovernor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vetoer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldThresholdNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newThresholdNumerator\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdNumeratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldQuorumNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuorumNumerator\",\"type\":\"uint256\"}],\"name\":\"QuorumNumeratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldTimelock\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTimelock\",\"type\":\"address\"}],\"name\":\"TimelockChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FRACTION_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VETO_POWER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalEta\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThresholdNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"queue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"setVotingDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"setVotingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staking\",\"outputs\":[{\"internalType\":\"contract IVotesHistory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNumerator\",\"type\":\"uint256\"}],\"name\":\"updateProposalThresholdNumerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newQuorumNumerator\",\"type\":\"uint256\"}],\"name\":\"updateQuorumNumerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TimelockController\",\"name\":\"newTimelock\",\"type\":\"address\"}],\"name\":\"updateTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"See {IGovernor-COUNTING_MODE}.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"hasVoted(uint256,address)\":{\"details\":\"See {IGovernor-hasVoted}.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalEta(uint256)\":{\"details\":\"Public accessor to check the eta of a queued proposal\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold(uint256)\":{\"params\":{\"blockNumber\":\"The block number to get the proposal threshold at\"}},\"proposalVotes(uint256)\":{\"details\":\"Accessor to the internal vote counts.\"},\"queue(address[],uint256[],bytes[],bytes32)\":{\"details\":\"Function to queue a proposal to the timelock.\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"timelock()\":{\"details\":\"Public accessor to check the address of the timelock\"},\"updateTimelock(address)\":{\"details\":\"Public endpoint to update the underlying timelock instance. Restricted to the timelock itself, so updates must be proposed, scheduled, and executed through governance proposals. CAUTION: It is not recommended to change the timelock while there are other queued governance proposals.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingDelay()\":{\"details\":\"Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to leave time for users to buy voting power, of delegate it, before the voting of a proposal starts.\"},\"votingPeriod()\":{\"details\":\"Delay, in number of blocks, between the vote start and vote ends. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"proposalThreshold(uint256)\":{\"notice\":\"Compute the required amount of voting power to create a proposal\"},\"setVotingDelay(uint256)\":{\"notice\":\"Update the voting delay. This operation can only be performed         through a governance proposal. Emits a `VotingDelaySet` event.\"},\"setVotingPeriod(uint256)\":{\"notice\":\"Update the voting period. This operation can only be performed         through a governance proposal. Emits a `VotingPeriodSet` event.\"},\"votingDelay()\":{\"notice\":\"module:user-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/governance/StakerGovernor.sol\":\"StakerGovernor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary MathUpgradeable {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a / b + (a % b == 0 ? 0 : 1);\\n    }\\n}\\n\",\"keccak256\":\"0xd0a917e32d1251a9b2f1dea15e932815d5382e64e6b0a18104664a6cc774cd70\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeCast.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\\n * checks.\\n *\\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\\n * easily result in undesired exploitation or bugs, since developers usually\\n * assume that overflows raise errors. `SafeCast` restores this intuition by\\n * reverting the transaction when such an operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n *\\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\\n * all math on `uint256` and `int256` and then downcasting.\\n */\\nlibrary SafeCastUpgradeable {\\n    /**\\n     * @dev Returns the downcasted uint224 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint224).\\n     *\\n     * Counterpart to Solidity's `uint224` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 224 bits\\n     */\\n    function toUint224(uint256 value) internal pure returns (uint224) {\\n        require(value <= type(uint224).max, \\\"SafeCast: value doesn't fit in 224 bits\\\");\\n        return uint224(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint128 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint128).\\n     *\\n     * Counterpart to Solidity's `uint128` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 128 bits\\n     */\\n    function toUint128(uint256 value) internal pure returns (uint128) {\\n        require(value <= type(uint128).max, \\\"SafeCast: value doesn't fit in 128 bits\\\");\\n        return uint128(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint96 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint96).\\n     *\\n     * Counterpart to Solidity's `uint96` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 96 bits\\n     */\\n    function toUint96(uint256 value) internal pure returns (uint96) {\\n        require(value <= type(uint96).max, \\\"SafeCast: value doesn't fit in 96 bits\\\");\\n        return uint96(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint64 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint64).\\n     *\\n     * Counterpart to Solidity's `uint64` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 64 bits\\n     */\\n    function toUint64(uint256 value) internal pure returns (uint64) {\\n        require(value <= type(uint64).max, \\\"SafeCast: value doesn't fit in 64 bits\\\");\\n        return uint64(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint32 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint32).\\n     *\\n     * Counterpart to Solidity's `uint32` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 32 bits\\n     */\\n    function toUint32(uint256 value) internal pure returns (uint32) {\\n        require(value <= type(uint32).max, \\\"SafeCast: value doesn't fit in 32 bits\\\");\\n        return uint32(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint16 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint16).\\n     *\\n     * Counterpart to Solidity's `uint16` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 16 bits\\n     */\\n    function toUint16(uint256 value) internal pure returns (uint16) {\\n        require(value <= type(uint16).max, \\\"SafeCast: value doesn't fit in 16 bits\\\");\\n        return uint16(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint8 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint8).\\n     *\\n     * Counterpart to Solidity's `uint8` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 8 bits.\\n     */\\n    function toUint8(uint256 value) internal pure returns (uint8) {\\n        require(value <= type(uint8).max, \\\"SafeCast: value doesn't fit in 8 bits\\\");\\n        return uint8(value);\\n    }\\n\\n    /**\\n     * @dev Converts a signed int256 into an unsigned uint256.\\n     *\\n     * Requirements:\\n     *\\n     * - input must be greater than or equal to 0.\\n     */\\n    function toUint256(int256 value) internal pure returns (uint256) {\\n        require(value >= 0, \\\"SafeCast: value must be positive\\\");\\n        return uint256(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int128 from int256, reverting on\\n     * overflow (when the input is less than smallest int128 or\\n     * greater than largest int128).\\n     *\\n     * Counterpart to Solidity's `int128` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 128 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt128(int256 value) internal pure returns (int128) {\\n        require(value >= type(int128).min && value <= type(int128).max, \\\"SafeCast: value doesn't fit in 128 bits\\\");\\n        return int128(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int64 from int256, reverting on\\n     * overflow (when the input is less than smallest int64 or\\n     * greater than largest int64).\\n     *\\n     * Counterpart to Solidity's `int64` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 64 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt64(int256 value) internal pure returns (int64) {\\n        require(value >= type(int64).min && value <= type(int64).max, \\\"SafeCast: value doesn't fit in 64 bits\\\");\\n        return int64(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int32 from int256, reverting on\\n     * overflow (when the input is less than smallest int32 or\\n     * greater than largest int32).\\n     *\\n     * Counterpart to Solidity's `int32` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 32 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt32(int256 value) internal pure returns (int32) {\\n        require(value >= type(int32).min && value <= type(int32).max, \\\"SafeCast: value doesn't fit in 32 bits\\\");\\n        return int32(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int16 from int256, reverting on\\n     * overflow (when the input is less than smallest int16 or\\n     * greater than largest int16).\\n     *\\n     * Counterpart to Solidity's `int16` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 16 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt16(int256 value) internal pure returns (int16) {\\n        require(value >= type(int16).min && value <= type(int16).max, \\\"SafeCast: value doesn't fit in 16 bits\\\");\\n        return int16(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int8 from int256, reverting on\\n     * overflow (when the input is less than smallest int8 or\\n     * greater than largest int8).\\n     *\\n     * Counterpart to Solidity's `int8` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 8 bits.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt8(int256 value) internal pure returns (int8) {\\n        require(value >= type(int8).min && value <= type(int8).max, \\\"SafeCast: value doesn't fit in 8 bits\\\");\\n        return int8(value);\\n    }\\n\\n    /**\\n     * @dev Converts an unsigned uint256 into a signed int256.\\n     *\\n     * Requirements:\\n     *\\n     * - input must be less than or equal to maxInt256.\\n     */\\n    function toInt256(uint256 value) internal pure returns (int256) {\\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\\n        require(value <= uint256(type(int256).max), \\\"SafeCast: value doesn't fit in an int256\\\");\\n        return int256(value);\\n    }\\n}\\n\",\"keccak256\":\"0xcec885ecdf113b4265ed0856972d7ff167bfeb3802604b18cbb782bf47ecc4ae\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role, _msgSender());\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(uint160(account), 20),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x4a1a0ba12bf1a33f10d9fe226278cf59675c0b929d29e4da99658a079b27fb84\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/governance/Governor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/Governor.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/cryptography/ECDSA.sol\\\";\\nimport \\\"../utils/cryptography/draft-EIP712.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\nimport \\\"../utils/math/SafeCast.sol\\\";\\nimport \\\"../utils/Address.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Timers.sol\\\";\\nimport \\\"./IGovernor.sol\\\";\\n\\n/**\\n * @dev Core of the governance system, designed to be extended though various modules.\\n *\\n * This contract is abstract and requires several function to be implemented in various modules:\\n *\\n * - A counting module must implement {quorum}, {_quorumReached}, {_voteSucceeded} and {_countVote}\\n * - A voting module must implement {getVotes}\\n * - Additionanly, the {votingPeriod} must also be implemented\\n *\\n * _Available since v4.3._\\n */\\nabstract contract Governor is Context, ERC165, EIP712, IGovernor {\\n    using SafeCast for uint256;\\n    using Timers for Timers.BlockNumber;\\n\\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\\\"Ballot(uint256 proposalId,uint8 support)\\\");\\n\\n    struct ProposalCore {\\n        Timers.BlockNumber voteStart;\\n        Timers.BlockNumber voteEnd;\\n        bool executed;\\n        bool canceled;\\n    }\\n\\n    string private _name;\\n\\n    mapping(uint256 => ProposalCore) private _proposals;\\n\\n    /**\\n     * @dev Restrict access of functions to the governance executor, which may be the Governor itself or a timelock\\n     * contract, as specified by {_executor}. This generally means that function with this modifier must be voted on and\\n     * executed through the governance protocol.\\n     */\\n    modifier onlyGovernance() {\\n        require(_msgSender() == _executor(), \\\"Governor: onlyGovernance\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Sets the value for {name} and {version}\\n     */\\n    constructor(string memory name_) EIP712(name_, version()) {\\n        _name = name_;\\n    }\\n\\n    /**\\n     * @dev Function to receive ETH that will be handled by the governor (disabled if executor is a third party contract)\\n     */\\n    receive() external payable virtual {\\n        require(_executor() == address(this));\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\\n        return interfaceId == type(IGovernor).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IGovernor-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IGovernor-version}.\\n     */\\n    function version() public view virtual override returns (string memory) {\\n        return \\\"1\\\";\\n    }\\n\\n    /**\\n     * @dev See {IGovernor-hashProposal}.\\n     *\\n     * The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array\\n     * and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id\\n     * can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in\\n     * advance, before the proposal is submitted.\\n     *\\n     * Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the\\n     * same proposal (with same operation and same description) will have the same id if submitted on multiple governors\\n     * accross multiple networks. This also means that in order to execute the same operation twice (on the same\\n     * governor) the proposer will have to change the description in order to avoid proposal id conflicts.\\n     */\\n    function hashProposal(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        bytes32 descriptionHash\\n    ) public pure virtual override returns (uint256) {\\n        return uint256(keccak256(abi.encode(targets, values, calldatas, descriptionHash)));\\n    }\\n\\n    /**\\n     * @dev See {IGovernor-state}.\\n     */\\n    function state(uint256 proposalId) public view virtual override returns (ProposalState) {\\n        ProposalCore storage proposal = _proposals[proposalId];\\n\\n        if (proposal.executed) {\\n            return ProposalState.Executed;\\n        }\\n\\n        if (proposal.canceled) {\\n            return ProposalState.Canceled;\\n        }\\n\\n        uint256 snapshot = proposalSnapshot(proposalId);\\n\\n        if (snapshot == 0) {\\n            revert(\\\"Governor: unknown proposal id\\\");\\n        }\\n\\n        if (snapshot >= block.number) {\\n            return ProposalState.Pending;\\n        }\\n\\n        uint256 deadline = proposalDeadline(proposalId);\\n\\n        if (deadline >= block.number) {\\n            return ProposalState.Active;\\n        }\\n\\n        if (_quorumReached(proposalId) && _voteSucceeded(proposalId)) {\\n            return ProposalState.Succeeded;\\n        } else {\\n            return ProposalState.Defeated;\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IGovernor-proposalSnapshot}.\\n     */\\n    function proposalSnapshot(uint256 proposalId) public view virtual override returns (uint256) {\\n        return _proposals[proposalId].voteStart.getDeadline();\\n    }\\n\\n    /**\\n     * @dev See {IGovernor-proposalDeadline}.\\n     */\\n    function proposalDeadline(uint256 proposalId) public view virtual override returns (uint256) {\\n        return _proposals[proposalId].voteEnd.getDeadline();\\n    }\\n\\n    /**\\n     * @dev Part of the Governor Bravo's interface: _\\\"The number of votes required in order for a voter to become a proposer\\\"_.\\n     */\\n    function proposalThreshold() public view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev Amount of votes already cast passes the threshold limit.\\n     */\\n    function _quorumReached(uint256 proposalId) internal view virtual returns (bool);\\n\\n    /**\\n     * @dev Is the proposal successful or not.\\n     */\\n    function _voteSucceeded(uint256 proposalId) internal view virtual returns (bool);\\n\\n    /**\\n     * @dev Register a vote with a given support and voting weight.\\n     *\\n     * Note: Support is generic and can represent various things depending on the voting system used.\\n     */\\n    function _countVote(\\n        uint256 proposalId,\\n        address account,\\n        uint8 support,\\n        uint256 weight\\n    ) internal virtual;\\n\\n    /**\\n     * @dev See {IGovernor-propose}.\\n     */\\n    function propose(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) public virtual override returns (uint256) {\\n        require(\\n            getVotes(msg.sender, block.number - 1) >= proposalThreshold(),\\n            \\\"GovernorCompatibilityBravo: proposer votes below proposal threshold\\\"\\n        );\\n\\n        uint256 proposalId = hashProposal(targets, values, calldatas, keccak256(bytes(description)));\\n\\n        require(targets.length == values.length, \\\"Governor: invalid proposal length\\\");\\n        require(targets.length == calldatas.length, \\\"Governor: invalid proposal length\\\");\\n        require(targets.length > 0, \\\"Governor: empty proposal\\\");\\n\\n        ProposalCore storage proposal = _proposals[proposalId];\\n        require(proposal.voteStart.isUnset(), \\\"Governor: proposal already exists\\\");\\n\\n        uint64 snapshot = block.number.toUint64() + votingDelay().toUint64();\\n        uint64 deadline = snapshot + votingPeriod().toUint64();\\n\\n        proposal.voteStart.setDeadline(snapshot);\\n        proposal.voteEnd.setDeadline(deadline);\\n\\n        emit ProposalCreated(\\n            proposalId,\\n            _msgSender(),\\n            targets,\\n            values,\\n            new string[](targets.length),\\n            calldatas,\\n            snapshot,\\n            deadline,\\n            description\\n        );\\n\\n        return proposalId;\\n    }\\n\\n    /**\\n     * @dev See {IGovernor-execute}.\\n     */\\n    function execute(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        bytes32 descriptionHash\\n    ) public payable virtual override returns (uint256) {\\n        uint256 proposalId = hashProposal(targets, values, calldatas, descriptionHash);\\n\\n        ProposalState status = state(proposalId);\\n        require(\\n            status == ProposalState.Succeeded || status == ProposalState.Queued,\\n            \\\"Governor: proposal not successful\\\"\\n        );\\n        _proposals[proposalId].executed = true;\\n\\n        emit ProposalExecuted(proposalId);\\n\\n        _execute(proposalId, targets, values, calldatas, descriptionHash);\\n\\n        return proposalId;\\n    }\\n\\n    /**\\n     * @dev Internal execution mechanism. Can be overriden to implement different execution mechanism\\n     */\\n    function _execute(\\n        uint256, /* proposalId */\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        bytes32 /*descriptionHash*/\\n    ) internal virtual {\\n        string memory errorMessage = \\\"Governor: call reverted without message\\\";\\n        for (uint256 i = 0; i < targets.length; ++i) {\\n            (bool success, bytes memory returndata) = targets[i].call{value: values[i]}(calldatas[i]);\\n            Address.verifyCallResult(success, returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal cancel mechanism: locks up the proposal timer, preventing it from being re-submitted. Marks it as\\n     * canceled to allow distinguishing it from executed proposals.\\n     *\\n     * Emits a {IGovernor-ProposalCanceled} event.\\n     */\\n    function _cancel(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        bytes32 descriptionHash\\n    ) internal virtual returns (uint256) {\\n        uint256 proposalId = hashProposal(targets, values, calldatas, descriptionHash);\\n        ProposalState status = state(proposalId);\\n\\n        require(\\n            status != ProposalState.Canceled && status != ProposalState.Expired && status != ProposalState.Executed,\\n            \\\"Governor: proposal not active\\\"\\n        );\\n        _proposals[proposalId].canceled = true;\\n\\n        emit ProposalCanceled(proposalId);\\n\\n        return proposalId;\\n    }\\n\\n    /**\\n     * @dev See {IGovernor-castVote}.\\n     */\\n    function castVote(uint256 proposalId, uint8 support) public virtual override returns (uint256) {\\n        address voter = _msgSender();\\n        return _castVote(proposalId, voter, support, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IGovernor-castVoteWithReason}.\\n     */\\n    function castVoteWithReason(\\n        uint256 proposalId,\\n        uint8 support,\\n        string calldata reason\\n    ) public virtual override returns (uint256) {\\n        address voter = _msgSender();\\n        return _castVote(proposalId, voter, support, reason);\\n    }\\n\\n    /**\\n     * @dev See {IGovernor-castVoteBySig}.\\n     */\\n    function castVoteBySig(\\n        uint256 proposalId,\\n        uint8 support,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual override returns (uint256) {\\n        address voter = ECDSA.recover(\\n            _hashTypedDataV4(keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support))),\\n            v,\\n            r,\\n            s\\n        );\\n        return _castVote(proposalId, voter, support, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Internal vote casting mechanism: Check that the vote is pending, that it has not been cast yet, retrieve\\n     * voting weight using {IGovernor-getVotes} and call the {_countVote} internal function.\\n     *\\n     * Emits a {IGovernor-VoteCast} event.\\n     */\\n    function _castVote(\\n        uint256 proposalId,\\n        address account,\\n        uint8 support,\\n        string memory reason\\n    ) internal virtual returns (uint256) {\\n        ProposalCore storage proposal = _proposals[proposalId];\\n        require(state(proposalId) == ProposalState.Active, \\\"Governor: vote not currently active\\\");\\n\\n        uint256 weight = getVotes(account, proposal.voteStart.getDeadline());\\n        _countVote(proposalId, account, support, weight);\\n\\n        emit VoteCast(account, proposalId, support, weight, reason);\\n\\n        return weight;\\n    }\\n\\n    /**\\n     * @dev Relays a transaction or function call to an arbitrary target. In cases where the governance executor\\n     * is some contract other than the governor itself, like when using a timelock, this function can be invoked\\n     * in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake.\\n     * Note that if the executor is simply the governor itself, use of `relay` is redundant.\\n     */\\n    function relay(\\n        address target,\\n        uint256 value,\\n        bytes calldata data\\n    ) external virtual onlyGovernance {\\n        Address.functionCallWithValue(target, data, value);\\n    }\\n\\n    /**\\n     * @dev Address through which the governor executes action. Will be overloaded by module that execute actions\\n     * through another contract such as a timelock.\\n     */\\n    function _executor() internal view virtual returns (address) {\\n        return address(this);\\n    }\\n}\\n\",\"keccak256\":\"0xfaf7663a441cf4161aeceda4907949d537d409b4348e6b242b2a74b4a2d56ce2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/IGovernor.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Interface of the {Governor} core.\\n *\\n * _Available since v4.3._\\n */\\nabstract contract IGovernor is IERC165 {\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n\\n    /**\\n     * @dev Emitted when a proposal is created.\\n     */\\n    event ProposalCreated(\\n        uint256 proposalId,\\n        address proposer,\\n        address[] targets,\\n        uint256[] values,\\n        string[] signatures,\\n        bytes[] calldatas,\\n        uint256 startBlock,\\n        uint256 endBlock,\\n        string description\\n    );\\n\\n    /**\\n     * @dev Emitted when a proposal is canceled.\\n     */\\n    event ProposalCanceled(uint256 proposalId);\\n\\n    /**\\n     * @dev Emitted when a proposal is executed.\\n     */\\n    event ProposalExecuted(uint256 proposalId);\\n\\n    /**\\n     * @dev Emitted when a vote is cast.\\n     *\\n     * Note: `support` values should be seen as buckets. There interpretation depends on the voting module used.\\n     */\\n    event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason);\\n\\n    /**\\n     * @notice module:core\\n     * @dev Name of the governor instance (used in building the ERC712 domain separator).\\n     */\\n    function name() public view virtual returns (string memory);\\n\\n    /**\\n     * @notice module:core\\n     * @dev Version of the governor instance (used in building the ERC712 domain separator). Default: \\\"1\\\"\\n     */\\n    function version() public view virtual returns (string memory);\\n\\n    /**\\n     * @notice module:voting\\n     * @dev A description of the possible `support` values for {castVote} and the way these votes are counted, meant to\\n     * be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of\\n     * key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`.\\n     *\\n     * There are 2 standard keys: `support` and `quorum`.\\n     *\\n     * - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`.\\n     * - `quorum=bravo` means that only For votes are counted towards quorum.\\n     * - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum.\\n     *\\n     * NOTE: The string can be decoded by the standard\\n     * https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`]\\n     * JavaScript class.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function COUNTING_MODE() public pure virtual returns (string memory);\\n\\n    /**\\n     * @notice module:core\\n     * @dev Hashing function used to (re)build the proposal id from the proposal details..\\n     */\\n    function hashProposal(\\n        address[] calldata targets,\\n        uint256[] calldata values,\\n        bytes[] calldata calldatas,\\n        bytes32 descriptionHash\\n    ) public pure virtual returns (uint256);\\n\\n    /**\\n     * @notice module:core\\n     * @dev Current state of a proposal, following Compound's convention\\n     */\\n    function state(uint256 proposalId) public view virtual returns (ProposalState);\\n\\n    /**\\n     * @notice module:core\\n     * @dev Block number used to retrieve user's votes and quorum. As per Compound's Comp and OpenZeppelin's\\n     * ERC20Votes, the snapshot is performed at the end of this block. Hence, voting for this proposal starts at the\\n     * beginning of the following block.\\n     */\\n    function proposalSnapshot(uint256 proposalId) public view virtual returns (uint256);\\n\\n    /**\\n     * @notice module:core\\n     * @dev Block number at which votes close. Votes close at the end of this block, so it is possible to cast a vote\\n     * during this block.\\n     */\\n    function proposalDeadline(uint256 proposalId) public view virtual returns (uint256);\\n\\n    /**\\n     * @notice module:user-config\\n     * @dev Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to\\n     * leave time for users to buy voting power, of delegate it, before the voting of a proposal starts.\\n     */\\n    function votingDelay() public view virtual returns (uint256);\\n\\n    /**\\n     * @notice module:user-config\\n     * @dev Delay, in number of blocks, between the vote start and vote ends.\\n     *\\n     * NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting\\n     * duration compared to the voting delay.\\n     */\\n    function votingPeriod() public view virtual returns (uint256);\\n\\n    /**\\n     * @notice module:user-config\\n     * @dev Minimum number of cast voted required for a proposal to be successful.\\n     *\\n     * Note: The `blockNumber` parameter corresponds to the snaphot used for counting vote. This allows to scale the\\n     * quroum depending on values such as the totalSupply of a token at this block (see {ERC20Votes}).\\n     */\\n    function quorum(uint256 blockNumber) public view virtual returns (uint256);\\n\\n    /**\\n     * @notice module:reputation\\n     * @dev Voting power of an `account` at a specific `blockNumber`.\\n     *\\n     * Note: this can be implemented in a number of ways, for example by reading the delegated balance from one (or\\n     * multiple), {ERC20Votes} tokens.\\n     */\\n    function getVotes(address account, uint256 blockNumber) public view virtual returns (uint256);\\n\\n    /**\\n     * @notice module:voting\\n     * @dev Returns weither `account` has cast a vote on `proposalId`.\\n     */\\n    function hasVoted(uint256 proposalId, address account) public view virtual returns (bool);\\n\\n    /**\\n     * @dev Create a new proposal. Vote start {IGovernor-votingDelay} blocks after the proposal is created and ends\\n     * {IGovernor-votingPeriod} blocks after the voting starts.\\n     *\\n     * Emits a {ProposalCreated} event.\\n     */\\n    function propose(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) public virtual returns (uint256 proposalId);\\n\\n    /**\\n     * @dev Execute a successful proposal. This requires the quorum to be reached, the vote to be successful, and the\\n     * deadline to be reached.\\n     *\\n     * Emits a {ProposalExecuted} event.\\n     *\\n     * Note: some module can modify the requirements for execution, for example by adding an additional timelock.\\n     */\\n    function execute(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        bytes32 descriptionHash\\n    ) public payable virtual returns (uint256 proposalId);\\n\\n    /**\\n     * @dev Cast a vote\\n     *\\n     * Emits a {VoteCast} event.\\n     */\\n    function castVote(uint256 proposalId, uint8 support) public virtual returns (uint256 balance);\\n\\n    /**\\n     * @dev Cast a vote with a reason\\n     *\\n     * Emits a {VoteCast} event.\\n     */\\n    function castVoteWithReason(\\n        uint256 proposalId,\\n        uint8 support,\\n        string calldata reason\\n    ) public virtual returns (uint256 balance);\\n\\n    /**\\n     * @dev Cast a vote using the user cryptographic signature.\\n     *\\n     * Emits a {VoteCast} event.\\n     */\\n    function castVoteBySig(\\n        uint256 proposalId,\\n        uint8 support,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual returns (uint256 balance);\\n}\\n\",\"keccak256\":\"0x4a3702e2556bc04120a353119d50cb5edbc6f5c9c5504b04e598b9195b0e5471\",\"license\":\"MIT\"},\"@openzeppelin/contracts/governance/TimelockController.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (governance/TimelockController.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../access/AccessControl.sol\\\";\\n\\n/**\\n * @dev Contract module which acts as a timelocked controller. When set as the\\n * owner of an `Ownable` smart contract, it enforces a timelock on all\\n * `onlyOwner` maintenance operations. This gives time for users of the\\n * controlled contract to exit before a potentially dangerous maintenance\\n * operation is applied.\\n *\\n * By default, this contract is self administered, meaning administration tasks\\n * have to go through the timelock process. The proposer (resp executor) role\\n * is in charge of proposing (resp executing) operations. A common use case is\\n * to position this {TimelockController} as the owner of a smart contract, with\\n * a multisig or a DAO as the sole proposer.\\n *\\n * _Available since v3.3._\\n */\\ncontract TimelockController is AccessControl {\\n    bytes32 public constant TIMELOCK_ADMIN_ROLE = keccak256(\\\"TIMELOCK_ADMIN_ROLE\\\");\\n    bytes32 public constant PROPOSER_ROLE = keccak256(\\\"PROPOSER_ROLE\\\");\\n    bytes32 public constant EXECUTOR_ROLE = keccak256(\\\"EXECUTOR_ROLE\\\");\\n    uint256 internal constant _DONE_TIMESTAMP = uint256(1);\\n\\n    mapping(bytes32 => uint256) private _timestamps;\\n    uint256 private _minDelay;\\n\\n    /**\\n     * @dev Emitted when a call is scheduled as part of operation `id`.\\n     */\\n    event CallScheduled(\\n        bytes32 indexed id,\\n        uint256 indexed index,\\n        address target,\\n        uint256 value,\\n        bytes data,\\n        bytes32 predecessor,\\n        uint256 delay\\n    );\\n\\n    /**\\n     * @dev Emitted when a call is performed as part of operation `id`.\\n     */\\n    event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data);\\n\\n    /**\\n     * @dev Emitted when operation `id` is cancelled.\\n     */\\n    event Cancelled(bytes32 indexed id);\\n\\n    /**\\n     * @dev Emitted when the minimum delay for future operations is modified.\\n     */\\n    event MinDelayChange(uint256 oldDuration, uint256 newDuration);\\n\\n    /**\\n     * @dev Initializes the contract with a given `minDelay`.\\n     */\\n    constructor(\\n        uint256 minDelay,\\n        address[] memory proposers,\\n        address[] memory executors\\n    ) {\\n        _setRoleAdmin(TIMELOCK_ADMIN_ROLE, TIMELOCK_ADMIN_ROLE);\\n        _setRoleAdmin(PROPOSER_ROLE, TIMELOCK_ADMIN_ROLE);\\n        _setRoleAdmin(EXECUTOR_ROLE, TIMELOCK_ADMIN_ROLE);\\n\\n        // deployer + self administration\\n        _setupRole(TIMELOCK_ADMIN_ROLE, _msgSender());\\n        _setupRole(TIMELOCK_ADMIN_ROLE, address(this));\\n\\n        // register proposers\\n        for (uint256 i = 0; i < proposers.length; ++i) {\\n            _setupRole(PROPOSER_ROLE, proposers[i]);\\n        }\\n\\n        // register executors\\n        for (uint256 i = 0; i < executors.length; ++i) {\\n            _setupRole(EXECUTOR_ROLE, executors[i]);\\n        }\\n\\n        _minDelay = minDelay;\\n        emit MinDelayChange(0, minDelay);\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only by a certain role. In\\n     * addition to checking the sender's role, `address(0)` 's role is also\\n     * considered. Granting a role to `address(0)` is equivalent to enabling\\n     * this role for everyone.\\n     */\\n    modifier onlyRoleOrOpenRole(bytes32 role) {\\n        if (!hasRole(role, address(0))) {\\n            _checkRole(role, _msgSender());\\n        }\\n        _;\\n    }\\n\\n    /**\\n     * @dev Contract might receive/hold ETH as part of the maintenance process.\\n     */\\n    receive() external payable {}\\n\\n    /**\\n     * @dev Returns whether an id correspond to a registered operation. This\\n     * includes both Pending, Ready and Done operations.\\n     */\\n    function isOperation(bytes32 id) public view virtual returns (bool pending) {\\n        return getTimestamp(id) > 0;\\n    }\\n\\n    /**\\n     * @dev Returns whether an operation is pending or not.\\n     */\\n    function isOperationPending(bytes32 id) public view virtual returns (bool pending) {\\n        return getTimestamp(id) > _DONE_TIMESTAMP;\\n    }\\n\\n    /**\\n     * @dev Returns whether an operation is ready or not.\\n     */\\n    function isOperationReady(bytes32 id) public view virtual returns (bool ready) {\\n        uint256 timestamp = getTimestamp(id);\\n        return timestamp > _DONE_TIMESTAMP && timestamp <= block.timestamp;\\n    }\\n\\n    /**\\n     * @dev Returns whether an operation is done or not.\\n     */\\n    function isOperationDone(bytes32 id) public view virtual returns (bool done) {\\n        return getTimestamp(id) == _DONE_TIMESTAMP;\\n    }\\n\\n    /**\\n     * @dev Returns the timestamp at with an operation becomes ready (0 for\\n     * unset operations, 1 for done operations).\\n     */\\n    function getTimestamp(bytes32 id) public view virtual returns (uint256 timestamp) {\\n        return _timestamps[id];\\n    }\\n\\n    /**\\n     * @dev Returns the minimum delay for an operation to become valid.\\n     *\\n     * This value can be changed by executing an operation that calls `updateDelay`.\\n     */\\n    function getMinDelay() public view virtual returns (uint256 duration) {\\n        return _minDelay;\\n    }\\n\\n    /**\\n     * @dev Returns the identifier of an operation containing a single\\n     * transaction.\\n     */\\n    function hashOperation(\\n        address target,\\n        uint256 value,\\n        bytes calldata data,\\n        bytes32 predecessor,\\n        bytes32 salt\\n    ) public pure virtual returns (bytes32 hash) {\\n        return keccak256(abi.encode(target, value, data, predecessor, salt));\\n    }\\n\\n    /**\\n     * @dev Returns the identifier of an operation containing a batch of\\n     * transactions.\\n     */\\n    function hashOperationBatch(\\n        address[] calldata targets,\\n        uint256[] calldata values,\\n        bytes[] calldata datas,\\n        bytes32 predecessor,\\n        bytes32 salt\\n    ) public pure virtual returns (bytes32 hash) {\\n        return keccak256(abi.encode(targets, values, datas, predecessor, salt));\\n    }\\n\\n    /**\\n     * @dev Schedule an operation containing a single transaction.\\n     *\\n     * Emits a {CallScheduled} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have the 'proposer' role.\\n     */\\n    function schedule(\\n        address target,\\n        uint256 value,\\n        bytes calldata data,\\n        bytes32 predecessor,\\n        bytes32 salt,\\n        uint256 delay\\n    ) public virtual onlyRole(PROPOSER_ROLE) {\\n        bytes32 id = hashOperation(target, value, data, predecessor, salt);\\n        _schedule(id, delay);\\n        emit CallScheduled(id, 0, target, value, data, predecessor, delay);\\n    }\\n\\n    /**\\n     * @dev Schedule an operation containing a batch of transactions.\\n     *\\n     * Emits one {CallScheduled} event per transaction in the batch.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have the 'proposer' role.\\n     */\\n    function scheduleBatch(\\n        address[] calldata targets,\\n        uint256[] calldata values,\\n        bytes[] calldata datas,\\n        bytes32 predecessor,\\n        bytes32 salt,\\n        uint256 delay\\n    ) public virtual onlyRole(PROPOSER_ROLE) {\\n        require(targets.length == values.length, \\\"TimelockController: length mismatch\\\");\\n        require(targets.length == datas.length, \\\"TimelockController: length mismatch\\\");\\n\\n        bytes32 id = hashOperationBatch(targets, values, datas, predecessor, salt);\\n        _schedule(id, delay);\\n        for (uint256 i = 0; i < targets.length; ++i) {\\n            emit CallScheduled(id, i, targets[i], values[i], datas[i], predecessor, delay);\\n        }\\n    }\\n\\n    /**\\n     * @dev Schedule an operation that is to becomes valid after a given delay.\\n     */\\n    function _schedule(bytes32 id, uint256 delay) private {\\n        require(!isOperation(id), \\\"TimelockController: operation already scheduled\\\");\\n        require(delay >= getMinDelay(), \\\"TimelockController: insufficient delay\\\");\\n        _timestamps[id] = block.timestamp + delay;\\n    }\\n\\n    /**\\n     * @dev Cancel an operation.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have the 'proposer' role.\\n     */\\n    function cancel(bytes32 id) public virtual onlyRole(PROPOSER_ROLE) {\\n        require(isOperationPending(id), \\\"TimelockController: operation cannot be cancelled\\\");\\n        delete _timestamps[id];\\n\\n        emit Cancelled(id);\\n    }\\n\\n    /**\\n     * @dev Execute an (ready) operation containing a single transaction.\\n     *\\n     * Emits a {CallExecuted} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have the 'executor' role.\\n     */\\n    function execute(\\n        address target,\\n        uint256 value,\\n        bytes calldata data,\\n        bytes32 predecessor,\\n        bytes32 salt\\n    ) public payable virtual onlyRoleOrOpenRole(EXECUTOR_ROLE) {\\n        bytes32 id = hashOperation(target, value, data, predecessor, salt);\\n        _beforeCall(id, predecessor);\\n        _call(id, 0, target, value, data);\\n        _afterCall(id);\\n    }\\n\\n    /**\\n     * @dev Execute an (ready) operation containing a batch of transactions.\\n     *\\n     * Emits one {CallExecuted} event per transaction in the batch.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have the 'executor' role.\\n     */\\n    function executeBatch(\\n        address[] calldata targets,\\n        uint256[] calldata values,\\n        bytes[] calldata datas,\\n        bytes32 predecessor,\\n        bytes32 salt\\n    ) public payable virtual onlyRoleOrOpenRole(EXECUTOR_ROLE) {\\n        require(targets.length == values.length, \\\"TimelockController: length mismatch\\\");\\n        require(targets.length == datas.length, \\\"TimelockController: length mismatch\\\");\\n\\n        bytes32 id = hashOperationBatch(targets, values, datas, predecessor, salt);\\n        _beforeCall(id, predecessor);\\n        for (uint256 i = 0; i < targets.length; ++i) {\\n            _call(id, i, targets[i], values[i], datas[i]);\\n        }\\n        _afterCall(id);\\n    }\\n\\n    /**\\n     * @dev Checks before execution of an operation's calls.\\n     */\\n    function _beforeCall(bytes32 id, bytes32 predecessor) private view {\\n        require(isOperationReady(id), \\\"TimelockController: operation is not ready\\\");\\n        require(predecessor == bytes32(0) || isOperationDone(predecessor), \\\"TimelockController: missing dependency\\\");\\n    }\\n\\n    /**\\n     * @dev Checks after execution of an operation's calls.\\n     */\\n    function _afterCall(bytes32 id) private {\\n        require(isOperationReady(id), \\\"TimelockController: operation is not ready\\\");\\n        _timestamps[id] = _DONE_TIMESTAMP;\\n    }\\n\\n    /**\\n     * @dev Execute an operation's call.\\n     *\\n     * Emits a {CallExecuted} event.\\n     */\\n    function _call(\\n        bytes32 id,\\n        uint256 index,\\n        address target,\\n        uint256 value,\\n        bytes calldata data\\n    ) private {\\n        (bool success, ) = target.call{value: value}(data);\\n        require(success, \\\"TimelockController: underlying transaction reverted\\\");\\n\\n        emit CallExecuted(id, index, target, value, data);\\n    }\\n\\n    /**\\n     * @dev Changes the minimum timelock duration for future operations.\\n     *\\n     * Emits a {MinDelayChange} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be the timelock itself. This can only be achieved by scheduling and later executing\\n     * an operation where the timelock is the target and the data is the ABI-encoded call to this function.\\n     */\\n    function updateDelay(uint256 newDelay) external virtual {\\n        require(msg.sender == address(this), \\\"TimelockController: caller must be timelock\\\");\\n        emit MinDelayChange(_minDelay, newDelay);\\n        _minDelay = newDelay;\\n    }\\n}\\n\",\"keccak256\":\"0x61357e3fe6a0a93c779bc75f730d219458b268ffd19c0c0a6f31c7eb0f435466\",\"license\":\"MIT\"},\"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (governance/extensions/GovernorCountingSimple.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Governor.sol\\\";\\n\\n/**\\n * @dev Extension of {Governor} for simple, 3 options, vote counting.\\n *\\n * _Available since v4.3._\\n */\\nabstract contract GovernorCountingSimple is Governor {\\n    /**\\n     * @dev Supported vote types. Matches Governor Bravo ordering.\\n     */\\n    enum VoteType {\\n        Against,\\n        For,\\n        Abstain\\n    }\\n\\n    struct ProposalVote {\\n        uint256 againstVotes;\\n        uint256 forVotes;\\n        uint256 abstainVotes;\\n        mapping(address => bool) hasVoted;\\n    }\\n\\n    mapping(uint256 => ProposalVote) private _proposalVotes;\\n\\n    /**\\n     * @dev See {IGovernor-COUNTING_MODE}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function COUNTING_MODE() public pure virtual override returns (string memory) {\\n        return \\\"support=bravo&quorum=for,abstain\\\";\\n    }\\n\\n    /**\\n     * @dev See {IGovernor-hasVoted}.\\n     */\\n    function hasVoted(uint256 proposalId, address account) public view virtual override returns (bool) {\\n        return _proposalVotes[proposalId].hasVoted[account];\\n    }\\n\\n    /**\\n     * @dev Accessor to the internal vote counts.\\n     */\\n    function proposalVotes(uint256 proposalId)\\n        public\\n        view\\n        virtual\\n        returns (\\n            uint256 againstVotes,\\n            uint256 forVotes,\\n            uint256 abstainVotes\\n        )\\n    {\\n        ProposalVote storage proposalvote = _proposalVotes[proposalId];\\n        return (proposalvote.againstVotes, proposalvote.forVotes, proposalvote.abstainVotes);\\n    }\\n\\n    /**\\n     * @dev See {Governor-_quorumReached}.\\n     */\\n    function _quorumReached(uint256 proposalId) internal view virtual override returns (bool) {\\n        ProposalVote storage proposalvote = _proposalVotes[proposalId];\\n\\n        return quorum(proposalSnapshot(proposalId)) <= proposalvote.forVotes + proposalvote.abstainVotes;\\n    }\\n\\n    /**\\n     * @dev See {Governor-_voteSucceeded}. In this module, the forVotes must be strictly over the againstVotes.\\n     */\\n    function _voteSucceeded(uint256 proposalId) internal view virtual override returns (bool) {\\n        ProposalVote storage proposalvote = _proposalVotes[proposalId];\\n\\n        return proposalvote.forVotes > proposalvote.againstVotes;\\n    }\\n\\n    /**\\n     * @dev See {Governor-_countVote}. In this module, the support follows the `VoteType` enum (from Governor Bravo).\\n     */\\n    function _countVote(\\n        uint256 proposalId,\\n        address account,\\n        uint8 support,\\n        uint256 weight\\n    ) internal virtual override {\\n        ProposalVote storage proposalvote = _proposalVotes[proposalId];\\n\\n        require(!proposalvote.hasVoted[account], \\\"GovernorVotingSimple: vote already cast\\\");\\n        proposalvote.hasVoted[account] = true;\\n\\n        if (support == uint8(VoteType.Against)) {\\n            proposalvote.againstVotes += weight;\\n        } else if (support == uint8(VoteType.For)) {\\n            proposalvote.forVotes += weight;\\n        } else if (support == uint8(VoteType.Abstain)) {\\n            proposalvote.abstainVotes += weight;\\n        } else {\\n            revert(\\\"GovernorVotingSimple: invalid value for enum VoteType\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x42fdf674e422c97ee262f0dd1e636de1ee6c1556e61e38b167217e49381eff1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/governance/extensions/GovernorPreventLateQuorum.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/extensions/GovernorPreventLateQuorum.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Governor.sol\\\";\\nimport \\\"../../utils/math/Math.sol\\\";\\n\\n/**\\n * @dev A module that ensures there is a minimum voting period after quorum is reached. This prevents a large voter from\\n * swaying a vote and triggering quorum at the last minute, by ensuring there is always time for other voters to react\\n * and try to oppose the decision.\\n *\\n * If a vote causes quorum to be reached, the proposal's voting period may be extended so that it does not end before at\\n * least a given number of blocks have passed (the \\\"vote extension\\\" parameter). This parameter can be set by the\\n * governance executor (e.g. through a governance proposal).\\n *\\n * _Available since v4.5._\\n */\\nabstract contract GovernorPreventLateQuorum is Governor {\\n    using SafeCast for uint256;\\n    using Timers for Timers.BlockNumber;\\n\\n    uint64 private _voteExtension;\\n    mapping(uint256 => Timers.BlockNumber) private _extendedDeadlines;\\n\\n    /// @dev Emitted when a proposal deadline is pushed back due to reaching quorum late in its voting period.\\n    event ProposalExtended(uint256 indexed proposalId, uint64 extendedDeadline);\\n\\n    /// @dev Emitted when the {lateQuorumVoteExtension} parameter is changed.\\n    event LateQuorumVoteExtensionSet(uint64 oldVoteExtension, uint64 newVoteExtension);\\n\\n    /**\\n     * @dev Initializes the vote extension parameter: the number of blocks that are required to pass since a proposal\\n     * reaches quorum until its voting period ends. If necessary the voting period will be extended beyond the one set\\n     * at proposal creation.\\n     */\\n    constructor(uint64 initialVoteExtension) {\\n        _setLateQuorumVoteExtension(initialVoteExtension);\\n    }\\n\\n    /**\\n     * @dev Returns the proposal deadline, which may have been extended beyond that set at proposal creation, if the\\n     * proposal reached quorum late in the voting period. See {Governor-proposalDeadline}.\\n     */\\n    function proposalDeadline(uint256 proposalId) public view virtual override returns (uint256) {\\n        return Math.max(super.proposalDeadline(proposalId), _extendedDeadlines[proposalId].getDeadline());\\n    }\\n\\n    /**\\n     * @dev Casts a vote and detects if it caused quorum to be reached, potentially extending the voting period. See\\n     * {Governor-_castVote}.\\n     *\\n     * May emit a {ProposalExtended} event.\\n     */\\n    function _castVote(\\n        uint256 proposalId,\\n        address account,\\n        uint8 support,\\n        string memory reason\\n    ) internal virtual override returns (uint256) {\\n        uint256 result = super._castVote(proposalId, account, support, reason);\\n\\n        Timers.BlockNumber storage extendedDeadline = _extendedDeadlines[proposalId];\\n\\n        if (extendedDeadline.isUnset() && _quorumReached(proposalId)) {\\n            uint64 extendedDeadlineValue = block.number.toUint64() + lateQuorumVoteExtension();\\n\\n            if (extendedDeadlineValue > proposalDeadline(proposalId)) {\\n                emit ProposalExtended(proposalId, extendedDeadlineValue);\\n            }\\n\\n            extendedDeadline.setDeadline(extendedDeadlineValue);\\n        }\\n\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the current value of the vote extension parameter: the number of blocks that are required to pass\\n     * from the time a proposal reaches quorum until its voting period ends.\\n     */\\n    function lateQuorumVoteExtension() public view virtual returns (uint64) {\\n        return _voteExtension;\\n    }\\n\\n    /**\\n     * @dev Changes the {lateQuorumVoteExtension}. This operation can only be performed by the governance executor,\\n     * generally through a governance proposal.\\n     *\\n     * Emits a {LateQuorumVoteExtensionSet} event.\\n     */\\n    function setLateQuorumVoteExtension(uint64 newVoteExtension) public virtual onlyGovernance {\\n        _setLateQuorumVoteExtension(newVoteExtension);\\n    }\\n\\n    /**\\n     * @dev Changes the {lateQuorumVoteExtension}. This is an internal function that can be exposed in a public function\\n     * like {setLateQuorumVoteExtension} if another access control mechanism is needed.\\n     *\\n     * Emits a {LateQuorumVoteExtensionSet} event.\\n     */\\n    function _setLateQuorumVoteExtension(uint64 newVoteExtension) internal virtual {\\n        emit LateQuorumVoteExtensionSet(_voteExtension, newVoteExtension);\\n        _voteExtension = newVoteExtension;\\n    }\\n}\\n\",\"keccak256\":\"0x47b07271823af7e7e5926d5716bc877ad2357c8842b37c4fea93131a60ca2eb4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/governance/extensions/GovernorTimelockControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/extensions/GovernorTimelockControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IGovernorTimelock.sol\\\";\\nimport \\\"../Governor.sol\\\";\\nimport \\\"../TimelockController.sol\\\";\\n\\n/**\\n * @dev Extension of {Governor} that binds the execution process to an instance of {TimelockController}. This adds a\\n * delay, enforced by the {TimelockController} to all successful proposal (in addition to the voting duration). The\\n * {Governor} needs the proposer (and ideally the executor) roles for the {Governor} to work properly.\\n *\\n * Using this model means the proposal will be operated by the {TimelockController} and not by the {Governor}. Thus,\\n * the assets and permissions must be attached to the {TimelockController}. Any asset sent to the {Governor} will be\\n * inaccessible.\\n *\\n * WARNING: Setting up the TimelockController to have additional proposers besides the governor is very risky, as it\\n * grants them powers that they must be trusted or known not to use: 1) {onlyGovernance} functions like {relay} are\\n * available to them through the timelock, and 2) approved governance proposals can be blocked by them, effectively\\n * executing a Denial of Service attack. This risk will be mitigated in a future release.\\n *\\n * _Available since v4.3._\\n */\\nabstract contract GovernorTimelockControl is IGovernorTimelock, Governor {\\n    TimelockController private _timelock;\\n    mapping(uint256 => bytes32) private _timelockIds;\\n\\n    /**\\n     * @dev Emitted when the timelock controller used for proposal execution is modified.\\n     */\\n    event TimelockChange(address oldTimelock, address newTimelock);\\n\\n    /**\\n     * @dev Set the timelock.\\n     */\\n    constructor(TimelockController timelockAddress) {\\n        _updateTimelock(timelockAddress);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, Governor) returns (bool) {\\n        return interfaceId == type(IGovernorTimelock).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Overriden version of the {Governor-state} function with added support for the `Queued` status.\\n     */\\n    function state(uint256 proposalId) public view virtual override(IGovernor, Governor) returns (ProposalState) {\\n        ProposalState status = super.state(proposalId);\\n\\n        if (status != ProposalState.Succeeded) {\\n            return status;\\n        }\\n\\n        // core tracks execution, so we just have to check if successful proposal have been queued.\\n        bytes32 queueid = _timelockIds[proposalId];\\n        if (queueid == bytes32(0)) {\\n            return status;\\n        } else if (_timelock.isOperationDone(queueid)) {\\n            return ProposalState.Executed;\\n        } else if (_timelock.isOperationPending(queueid)) {\\n            return ProposalState.Queued;\\n        } else {\\n            return ProposalState.Canceled;\\n        }\\n    }\\n\\n    /**\\n     * @dev Public accessor to check the address of the timelock\\n     */\\n    function timelock() public view virtual override returns (address) {\\n        return address(_timelock);\\n    }\\n\\n    /**\\n     * @dev Public accessor to check the eta of a queued proposal\\n     */\\n    function proposalEta(uint256 proposalId) public view virtual override returns (uint256) {\\n        uint256 eta = _timelock.getTimestamp(_timelockIds[proposalId]);\\n        return eta == 1 ? 0 : eta; // _DONE_TIMESTAMP (1) should be replaced with a 0 value\\n    }\\n\\n    /**\\n     * @dev Function to queue a proposal to the timelock.\\n     */\\n    function queue(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        bytes32 descriptionHash\\n    ) public virtual override returns (uint256) {\\n        uint256 proposalId = hashProposal(targets, values, calldatas, descriptionHash);\\n\\n        require(state(proposalId) == ProposalState.Succeeded, \\\"Governor: proposal not successful\\\");\\n\\n        uint256 delay = _timelock.getMinDelay();\\n        _timelockIds[proposalId] = _timelock.hashOperationBatch(targets, values, calldatas, 0, descriptionHash);\\n        _timelock.scheduleBatch(targets, values, calldatas, 0, descriptionHash, delay);\\n\\n        emit ProposalQueued(proposalId, block.timestamp + delay);\\n\\n        return proposalId;\\n    }\\n\\n    /**\\n     * @dev Overriden execute function that run the already queued proposal through the timelock.\\n     */\\n    function _execute(\\n        uint256, /* proposalId */\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        bytes32 descriptionHash\\n    ) internal virtual override {\\n        _timelock.executeBatch{value: msg.value}(targets, values, calldatas, 0, descriptionHash);\\n    }\\n\\n    /**\\n     * @dev Overriden version of the {Governor-_cancel} function to cancel the timelocked proposal if it as already\\n     * been queued.\\n     */\\n    function _cancel(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        bytes32 descriptionHash\\n    ) internal virtual override returns (uint256) {\\n        uint256 proposalId = super._cancel(targets, values, calldatas, descriptionHash);\\n\\n        if (_timelockIds[proposalId] != 0) {\\n            _timelock.cancel(_timelockIds[proposalId]);\\n            delete _timelockIds[proposalId];\\n        }\\n\\n        return proposalId;\\n    }\\n\\n    /**\\n     * @dev Address through which the governor executes action. In this case, the timelock.\\n     */\\n    function _executor() internal view virtual override returns (address) {\\n        return address(_timelock);\\n    }\\n\\n    /**\\n     * @dev Public endpoint to update the underlying timelock instance. Restricted to the timelock itself, so updates\\n     * must be proposed, scheduled, and executed through governance proposals.\\n     *\\n     * CAUTION: It is not recommended to change the timelock while there are other queued governance proposals.\\n     */\\n    function updateTimelock(TimelockController newTimelock) external virtual onlyGovernance {\\n        _updateTimelock(newTimelock);\\n    }\\n\\n    function _updateTimelock(TimelockController newTimelock) private {\\n        emit TimelockChange(address(_timelock), address(newTimelock));\\n        _timelock = newTimelock;\\n    }\\n}\\n\",\"keccak256\":\"0x027e928dff85e88a4c24d5530f61fd6db43052e1430f3f3c7469b6d54ed87f87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/extensions/GovernorVotes.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Governor.sol\\\";\\nimport \\\"../utils/IVotes.sol\\\";\\n\\n/**\\n * @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token.\\n *\\n * _Available since v4.3._\\n */\\nabstract contract GovernorVotes is Governor {\\n    IVotes public immutable token;\\n\\n    constructor(IVotes tokenAddress) {\\n        token = tokenAddress;\\n    }\\n\\n    /**\\n     * Read the voting weight from the token's built in snapshot mechanism (see {IGovernor-getVotes}).\\n     */\\n    function getVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {\\n        return token.getPastVotes(account, blockNumber);\\n    }\\n}\\n\",\"keccak256\":\"0x8f181616d38bc85021c06f1b3acce5ee05339864416b2d328948fb46a378c77f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/governance/extensions/IGovernorTimelock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (governance/extensions/IGovernorTimelock.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IGovernor.sol\\\";\\n\\n/**\\n * @dev Extension of the {IGovernor} for timelock supporting modules.\\n *\\n * _Available since v4.3._\\n */\\nabstract contract IGovernorTimelock is IGovernor {\\n    event ProposalQueued(uint256 proposalId, uint256 eta);\\n\\n    function timelock() public view virtual returns (address);\\n\\n    function proposalEta(uint256 proposalId) public view virtual returns (uint256);\\n\\n    function queue(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        bytes32 descriptionHash\\n    ) public virtual returns (uint256 proposalId);\\n}\\n\",\"keccak256\":\"0xe6234ac4ba0508a3371a46543cdf4bf3a1a404d2d3c3470006741a0da294f974\",\"license\":\"MIT\"},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/utils/IVotes.sol)\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\\n *\\n * _Available since v4.5._\\n */\\ninterface IVotes {\\n    /**\\n     * @dev Emitted when an account changes their delegate.\\n     */\\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\\n\\n    /**\\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\\n     */\\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\\n\\n    /**\\n     * @dev Returns the current amount of votes that `account` has.\\n     */\\n    function getVotes(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\\n     */\\n    function getPastVotes(address account, uint256 blockNumber) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\\n     *\\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\\n     * vote.\\n     */\\n    function getPastTotalSupply(uint256 blockNumber) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the delegate that `account` has chosen.\\n     */\\n    function delegates(address account) external view returns (address);\\n\\n    /**\\n     * @dev Delegates votes from the sender to `delegatee`.\\n     */\\n    function delegate(address delegatee) external;\\n\\n    /**\\n     * @dev Delegates votes from signer to `delegatee`.\\n     */\\n    function delegateBySig(\\n        address delegatee,\\n        uint256 nonce,\\n        uint256 expiry,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Timers.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Timers.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Tooling for timepoints, timers and delays\\n */\\nlibrary Timers {\\n    struct Timestamp {\\n        uint64 _deadline;\\n    }\\n\\n    function getDeadline(Timestamp memory timer) internal pure returns (uint64) {\\n        return timer._deadline;\\n    }\\n\\n    function setDeadline(Timestamp storage timer, uint64 timestamp) internal {\\n        timer._deadline = timestamp;\\n    }\\n\\n    function reset(Timestamp storage timer) internal {\\n        timer._deadline = 0;\\n    }\\n\\n    function isUnset(Timestamp memory timer) internal pure returns (bool) {\\n        return timer._deadline == 0;\\n    }\\n\\n    function isStarted(Timestamp memory timer) internal pure returns (bool) {\\n        return timer._deadline > 0;\\n    }\\n\\n    function isPending(Timestamp memory timer) internal view returns (bool) {\\n        return timer._deadline > block.timestamp;\\n    }\\n\\n    function isExpired(Timestamp memory timer) internal view returns (bool) {\\n        return isStarted(timer) && timer._deadline <= block.timestamp;\\n    }\\n\\n    struct BlockNumber {\\n        uint64 _deadline;\\n    }\\n\\n    function getDeadline(BlockNumber memory timer) internal pure returns (uint64) {\\n        return timer._deadline;\\n    }\\n\\n    function setDeadline(BlockNumber storage timer, uint64 timestamp) internal {\\n        timer._deadline = timestamp;\\n    }\\n\\n    function reset(BlockNumber storage timer) internal {\\n        timer._deadline = 0;\\n    }\\n\\n    function isUnset(BlockNumber memory timer) internal pure returns (bool) {\\n        return timer._deadline == 0;\\n    }\\n\\n    function isStarted(BlockNumber memory timer) internal pure returns (bool) {\\n        return timer._deadline > 0;\\n    }\\n\\n    function isPending(BlockNumber memory timer) internal view returns (bool) {\\n        return timer._deadline > block.number;\\n    }\\n\\n    function isExpired(BlockNumber memory timer) internal view returns (bool) {\\n        return isStarted(timer) && timer._deadline <= block.number;\\n    }\\n}\\n\",\"keccak256\":\"0x29791a62950a7983e02a673639c1a781d1e448691800456c2ce4b99715391b14\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS,\\n        InvalidSignatureV\\n    }\\n\\n    function _throwError(RecoverError error) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert(\\\"ECDSA: invalid signature\\\");\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        } else if (error == RecoverError.InvalidSignatureV) {\\n            revert(\\\"ECDSA: invalid signature 'v' value\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature` or error string. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\\n        // Check the signature length\\n        // - case 65: r,s,v signature (standard)\\n        // - case 64: r,vs signature (cf https://eips.ethereum.org/EIPS/eip-2098) _Available since v4.1._\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else if (signature.length == 64) {\\n            bytes32 r;\\n            bytes32 vs;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                vs := mload(add(signature, 0x40))\\n            }\\n            return tryRecover(hash, r, vs);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address, RecoverError) {\\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\\n        return tryRecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address, RecoverError) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS);\\n        }\\n        if (v != 27 && v != 28) {\\n            return (address(0), RecoverError.InvalidSignatureV);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature);\\n        }\\n\\n        return (signer, RecoverError.NoError);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", Strings.toString(s.length), s));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n    }\\n}\\n\",\"keccak256\":\"0x3c07f43e60e099b3b157243b3152722e73b80eeb7985c2cd73712828d7f7da29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/cryptography/draft-EIP712.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ECDSA.sol\\\";\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\\n *\\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\\n *\\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\\n * ({_hashTypedDataV4}).\\n *\\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\\n * the chain id to protect against replay attacks on an eventual fork of the chain.\\n *\\n * NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method\\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\\n *\\n * _Available since v3.4._\\n */\\nabstract contract EIP712 {\\n    /* solhint-disable var-name-mixedcase */\\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\\n    // invalidate the cached domain separator if the chain id changes.\\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\\n    uint256 private immutable _CACHED_CHAIN_ID;\\n    address private immutable _CACHED_THIS;\\n\\n    bytes32 private immutable _HASHED_NAME;\\n    bytes32 private immutable _HASHED_VERSION;\\n    bytes32 private immutable _TYPE_HASH;\\n\\n    /* solhint-enable var-name-mixedcase */\\n\\n    /**\\n     * @dev Initializes the domain separator and parameter caches.\\n     *\\n     * The meaning of `name` and `version` is specified in\\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\\n     *\\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\\n     * - `version`: the current major version of the signing domain.\\n     *\\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\\n     * contract upgrade].\\n     */\\n    constructor(string memory name, string memory version) {\\n        bytes32 hashedName = keccak256(bytes(name));\\n        bytes32 hashedVersion = keccak256(bytes(version));\\n        bytes32 typeHash = keccak256(\\n            \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n        );\\n        _HASHED_NAME = hashedName;\\n        _HASHED_VERSION = hashedVersion;\\n        _CACHED_CHAIN_ID = block.chainid;\\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion);\\n        _CACHED_THIS = address(this);\\n        _TYPE_HASH = typeHash;\\n    }\\n\\n    /**\\n     * @dev Returns the domain separator for the current chain.\\n     */\\n    function _domainSeparatorV4() internal view returns (bytes32) {\\n        if (address(this) == _CACHED_THIS && block.chainid == _CACHED_CHAIN_ID) {\\n            return _CACHED_DOMAIN_SEPARATOR;\\n        } else {\\n            return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\\n        }\\n    }\\n\\n    function _buildDomainSeparator(\\n        bytes32 typeHash,\\n        bytes32 nameHash,\\n        bytes32 versionHash\\n    ) private view returns (bytes32) {\\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)));\\n    }\\n\\n    /**\\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\\n     * function returns the hash of the fully encoded EIP712 message for this domain.\\n     *\\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\\n     *\\n     * ```solidity\\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\\n     *     keccak256(\\\"Mail(address to,string contents)\\\"),\\n     *     mailTo,\\n     *     keccak256(bytes(mailContents))\\n     * )));\\n     * address signer = ECDSA.recover(digest, signature);\\n     * ```\\n     */\\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\\n    }\\n}\\n\",\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a / b + (a % b == 0 ? 0 : 1);\\n    }\\n}\\n\",\"keccak256\":\"0xc995bddbca1ae19788db9f8b61e63385edd3fddf89693b612d5abd1a275974d2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeCast.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\\n * checks.\\n *\\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\\n * easily result in undesired exploitation or bugs, since developers usually\\n * assume that overflows raise errors. `SafeCast` restores this intuition by\\n * reverting the transaction when such an operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n *\\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\\n * all math on `uint256` and `int256` and then downcasting.\\n */\\nlibrary SafeCast {\\n    /**\\n     * @dev Returns the downcasted uint224 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint224).\\n     *\\n     * Counterpart to Solidity's `uint224` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 224 bits\\n     */\\n    function toUint224(uint256 value) internal pure returns (uint224) {\\n        require(value <= type(uint224).max, \\\"SafeCast: value doesn't fit in 224 bits\\\");\\n        return uint224(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint128 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint128).\\n     *\\n     * Counterpart to Solidity's `uint128` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 128 bits\\n     */\\n    function toUint128(uint256 value) internal pure returns (uint128) {\\n        require(value <= type(uint128).max, \\\"SafeCast: value doesn't fit in 128 bits\\\");\\n        return uint128(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint96 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint96).\\n     *\\n     * Counterpart to Solidity's `uint96` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 96 bits\\n     */\\n    function toUint96(uint256 value) internal pure returns (uint96) {\\n        require(value <= type(uint96).max, \\\"SafeCast: value doesn't fit in 96 bits\\\");\\n        return uint96(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint64 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint64).\\n     *\\n     * Counterpart to Solidity's `uint64` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 64 bits\\n     */\\n    function toUint64(uint256 value) internal pure returns (uint64) {\\n        require(value <= type(uint64).max, \\\"SafeCast: value doesn't fit in 64 bits\\\");\\n        return uint64(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint32 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint32).\\n     *\\n     * Counterpart to Solidity's `uint32` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 32 bits\\n     */\\n    function toUint32(uint256 value) internal pure returns (uint32) {\\n        require(value <= type(uint32).max, \\\"SafeCast: value doesn't fit in 32 bits\\\");\\n        return uint32(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint16 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint16).\\n     *\\n     * Counterpart to Solidity's `uint16` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 16 bits\\n     */\\n    function toUint16(uint256 value) internal pure returns (uint16) {\\n        require(value <= type(uint16).max, \\\"SafeCast: value doesn't fit in 16 bits\\\");\\n        return uint16(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint8 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint8).\\n     *\\n     * Counterpart to Solidity's `uint8` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 8 bits.\\n     */\\n    function toUint8(uint256 value) internal pure returns (uint8) {\\n        require(value <= type(uint8).max, \\\"SafeCast: value doesn't fit in 8 bits\\\");\\n        return uint8(value);\\n    }\\n\\n    /**\\n     * @dev Converts a signed int256 into an unsigned uint256.\\n     *\\n     * Requirements:\\n     *\\n     * - input must be greater than or equal to 0.\\n     */\\n    function toUint256(int256 value) internal pure returns (uint256) {\\n        require(value >= 0, \\\"SafeCast: value must be positive\\\");\\n        return uint256(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int128 from int256, reverting on\\n     * overflow (when the input is less than smallest int128 or\\n     * greater than largest int128).\\n     *\\n     * Counterpart to Solidity's `int128` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 128 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt128(int256 value) internal pure returns (int128) {\\n        require(value >= type(int128).min && value <= type(int128).max, \\\"SafeCast: value doesn't fit in 128 bits\\\");\\n        return int128(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int64 from int256, reverting on\\n     * overflow (when the input is less than smallest int64 or\\n     * greater than largest int64).\\n     *\\n     * Counterpart to Solidity's `int64` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 64 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt64(int256 value) internal pure returns (int64) {\\n        require(value >= type(int64).min && value <= type(int64).max, \\\"SafeCast: value doesn't fit in 64 bits\\\");\\n        return int64(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int32 from int256, reverting on\\n     * overflow (when the input is less than smallest int32 or\\n     * greater than largest int32).\\n     *\\n     * Counterpart to Solidity's `int32` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 32 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt32(int256 value) internal pure returns (int32) {\\n        require(value >= type(int32).min && value <= type(int32).max, \\\"SafeCast: value doesn't fit in 32 bits\\\");\\n        return int32(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int16 from int256, reverting on\\n     * overflow (when the input is less than smallest int16 or\\n     * greater than largest int16).\\n     *\\n     * Counterpart to Solidity's `int16` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 16 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt16(int256 value) internal pure returns (int16) {\\n        require(value >= type(int16).min && value <= type(int16).max, \\\"SafeCast: value doesn't fit in 16 bits\\\");\\n        return int16(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int8 from int256, reverting on\\n     * overflow (when the input is less than smallest int8 or\\n     * greater than largest int8).\\n     *\\n     * Counterpart to Solidity's `int8` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 8 bits.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt8(int256 value) internal pure returns (int8) {\\n        require(value >= type(int8).min && value <= type(int8).max, \\\"SafeCast: value doesn't fit in 8 bits\\\");\\n        return int8(value);\\n    }\\n\\n    /**\\n     * @dev Converts an unsigned uint256 into a signed int256.\\n     *\\n     * Requirements:\\n     *\\n     * - input must be less than or equal to maxInt256.\\n     */\\n    function toInt256(uint256 value) internal pure returns (int256) {\\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\\n        require(value <= uint256(type(int256).max), \\\"SafeCast: value doesn't fit in an int256\\\");\\n        return int256(value);\\n    }\\n}\\n\",\"keccak256\":\"0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7\",\"license\":\"MIT\"},\"@thesis/solidity-contracts/contracts/token/ERC20WithPermit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./IERC20WithPermit.sol\\\";\\nimport \\\"./IReceiveApproval.sol\\\";\\n\\n/// @title  ERC20WithPermit\\n/// @notice Burnable ERC20 token with EIP2612 permit functionality. User can\\n///         authorize a transfer of their token with a signature conforming\\n///         EIP712 standard instead of an on-chain transaction from their\\n///         address. Anyone can submit this signature on the user's behalf by\\n///         calling the permit function, as specified in EIP2612 standard,\\n///         paying gas fees, and possibly performing other actions in the same\\n///         transaction.\\ncontract ERC20WithPermit is IERC20WithPermit, Ownable {\\n    /// @notice The amount of tokens owned by the given account.\\n    mapping(address => uint256) public override balanceOf;\\n\\n    /// @notice The remaining number of tokens that spender will be\\n    ///         allowed to spend on behalf of owner through `transferFrom` and\\n    ///         `burnFrom`. This is zero by default.\\n    mapping(address => mapping(address => uint256)) public override allowance;\\n\\n    /// @notice Returns the current nonce for EIP2612 permission for the\\n    ///         provided token owner for a replay protection. Used to construct\\n    ///         EIP2612 signature provided to `permit` function.\\n    mapping(address => uint256) public override nonce;\\n\\n    uint256 public immutable cachedChainId;\\n    bytes32 public immutable cachedDomainSeparator;\\n\\n    /// @notice Returns EIP2612 Permit message hash. Used to construct EIP2612\\n    ///         signature provided to `permit` function.\\n    bytes32 public constant override PERMIT_TYPEHASH =\\n        keccak256(\\n            \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n        );\\n\\n    /// @notice The amount of tokens in existence.\\n    uint256 public override totalSupply;\\n\\n    /// @notice The name of the token.\\n    string public override name;\\n\\n    /// @notice The symbol of the token.\\n    string public override symbol;\\n\\n    /// @notice The decimals places of the token.\\n    uint8 public constant override decimals = 18;\\n\\n    constructor(string memory _name, string memory _symbol) {\\n        name = _name;\\n        symbol = _symbol;\\n\\n        cachedChainId = block.chainid;\\n        cachedDomainSeparator = buildDomainSeparator();\\n    }\\n\\n    /// @notice Moves `amount` tokens from the caller's account to `recipient`.\\n    /// @return True if the operation succeeded, reverts otherwise.\\n    /// @dev Requirements:\\n    ///       - `recipient` cannot be the zero address,\\n    ///       - the caller must have a balance of at least `amount`.\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        override\\n        returns (bool)\\n    {\\n        _transfer(msg.sender, recipient, amount);\\n        return true;\\n    }\\n\\n    /// @notice Moves `amount` tokens from `spender` to `recipient` using the\\n    ///         allowance mechanism. `amount` is then deducted from the caller's\\n    ///         allowance unless the allowance was made for `type(uint256).max`.\\n    /// @return True if the operation succeeded, reverts otherwise.\\n    /// @dev Requirements:\\n    ///      - `spender` and `recipient` cannot be the zero address,\\n    ///      - `spender` must have a balance of at least `amount`,\\n    ///      - the caller must have allowance for `spender`'s tokens of at least\\n    ///        `amount`.\\n    function transferFrom(\\n        address spender,\\n        address recipient,\\n        uint256 amount\\n    ) external override returns (bool) {\\n        uint256 currentAllowance = allowance[spender][msg.sender];\\n        if (currentAllowance != type(uint256).max) {\\n            require(\\n                currentAllowance >= amount,\\n                \\\"Transfer amount exceeds allowance\\\"\\n            );\\n            _approve(spender, msg.sender, currentAllowance - amount);\\n        }\\n        _transfer(spender, recipient, amount);\\n        return true;\\n    }\\n\\n    /// @notice EIP2612 approval made with secp256k1 signature.\\n    ///         Users can authorize a transfer of their tokens with a signature\\n    ///         conforming EIP712 standard, rather than an on-chain transaction\\n    ///         from their address. Anyone can submit this signature on the\\n    ///         user's behalf by calling the permit function, paying gas fees,\\n    ///         and possibly performing other actions in the same transaction.\\n    /// @dev    The deadline argument can be set to `type(uint256).max to create\\n    ///         permits that effectively never expire.  If the `amount` is set\\n    ///         to `type(uint256).max` then `transferFrom` and `burnFrom` will\\n    ///         not reduce an allowance.\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override {\\n        /* solhint-disable-next-line not-rely-on-time */\\n        require(deadline >= block.timestamp, \\\"Permission expired\\\");\\n\\n        // Validate `s` and `v` values for a malleability concern described in EIP2.\\n        // Only signatures with `s` value in the lower half of the secp256k1\\n        // curve's order and `v` value of 27 or 28 are considered valid.\\n        require(\\n            uint256(s) <=\\n                0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\\n            \\\"Invalid signature 's' value\\\"\\n        );\\n        require(v == 27 || v == 28, \\\"Invalid signature 'v' value\\\");\\n\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR(),\\n                keccak256(\\n                    abi.encode(\\n                        PERMIT_TYPEHASH,\\n                        owner,\\n                        spender,\\n                        amount,\\n                        nonce[owner]++,\\n                        deadline\\n                    )\\n                )\\n            )\\n        );\\n        address recoveredAddress = ecrecover(digest, v, r, s);\\n        require(\\n            recoveredAddress != address(0) && recoveredAddress == owner,\\n            \\\"Invalid signature\\\"\\n        );\\n        _approve(owner, spender, amount);\\n    }\\n\\n    /// @notice Creates `amount` tokens and assigns them to `account`,\\n    ///         increasing the total supply.\\n    /// @dev Requirements:\\n    ///      - `recipient` cannot be the zero address.\\n    function mint(address recipient, uint256 amount) external onlyOwner {\\n        require(recipient != address(0), \\\"Mint to the zero address\\\");\\n\\n        beforeTokenTransfer(address(0), recipient, amount);\\n\\n        totalSupply += amount;\\n        balanceOf[recipient] += amount;\\n        emit Transfer(address(0), recipient, amount);\\n    }\\n\\n    /// @notice Destroys `amount` tokens from the caller.\\n    /// @dev Requirements:\\n    ///       - the caller must have a balance of at least `amount`.\\n    function burn(uint256 amount) external override {\\n        _burn(msg.sender, amount);\\n    }\\n\\n    /// @notice Destroys `amount` of tokens from `account` using the allowance\\n    ///         mechanism. `amount` is then deducted from the caller's allowance\\n    ///         unless the allowance was made for `type(uint256).max`.\\n    /// @dev Requirements:\\n    ///      - `account` must have a balance of at least `amount`,\\n    ///      - the caller must have allowance for `account`'s tokens of at least\\n    ///        `amount`.\\n    function burnFrom(address account, uint256 amount) external override {\\n        uint256 currentAllowance = allowance[account][msg.sender];\\n        if (currentAllowance != type(uint256).max) {\\n            require(\\n                currentAllowance >= amount,\\n                \\\"Burn amount exceeds allowance\\\"\\n            );\\n            _approve(account, msg.sender, currentAllowance - amount);\\n        }\\n        _burn(account, amount);\\n    }\\n\\n    /// @notice Calls `receiveApproval` function on spender previously approving\\n    ///         the spender to withdraw from the caller multiple times, up to\\n    ///         the `amount` amount. If this function is called again, it\\n    ///         overwrites the current allowance with `amount`. Reverts if the\\n    ///         approval reverted or if `receiveApproval` call on the spender\\n    ///         reverted.\\n    /// @return True if both approval and `receiveApproval` calls succeeded.\\n    /// @dev If the `amount` is set to `type(uint256).max` then\\n    ///      `transferFrom` and `burnFrom` will not reduce an allowance.\\n    function approveAndCall(\\n        address spender,\\n        uint256 amount,\\n        bytes memory extraData\\n    ) external override returns (bool) {\\n        if (approve(spender, amount)) {\\n            IReceiveApproval(spender).receiveApproval(\\n                msg.sender,\\n                amount,\\n                address(this),\\n                extraData\\n            );\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    /// @notice Sets `amount` as the allowance of `spender` over the caller's\\n    ///         tokens.\\n    /// @return True if the operation succeeded.\\n    /// @dev If the `amount` is set to `type(uint256).max` then\\n    ///      `transferFrom` and `burnFrom` will not reduce an allowance.\\n    ///      Beware that changing an allowance with this method brings the risk\\n    ///      that someone may use both the old and the new allowance by\\n    ///      unfortunate transaction ordering. One possible solution to mitigate\\n    ///      this race condition is to first reduce the spender's allowance to 0\\n    ///      and set the desired value afterwards:\\n    ///      https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n    function approve(address spender, uint256 amount)\\n        public\\n        override\\n        returns (bool)\\n    {\\n        _approve(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /// @notice Returns hash of EIP712 Domain struct with the token name as\\n    ///         a signing domain and token contract as a verifying contract.\\n    ///         Used to construct EIP2612 signature provided to `permit`\\n    ///         function.\\n    /* solhint-disable-next-line func-name-mixedcase */\\n    function DOMAIN_SEPARATOR() public view override returns (bytes32) {\\n        // As explained in EIP-2612, if the DOMAIN_SEPARATOR contains the\\n        // chainId and is defined at contract deployment instead of\\n        // reconstructed for every signature, there is a risk of possible replay\\n        // attacks between chains in the event of a future chain split.\\n        // To address this issue, we check the cached chain ID against the\\n        // current one and in case they are different, we build domain separator\\n        // from scratch.\\n        if (block.chainid == cachedChainId) {\\n            return cachedDomainSeparator;\\n        } else {\\n            return buildDomainSeparator();\\n        }\\n    }\\n\\n    /// @dev Hook that is called before any transfer of tokens. This includes\\n    ///      minting and burning.\\n    ///\\n    /// Calling conditions:\\n    /// - when `from` and `to` are both non-zero, `amount` of `from`'s tokens\\n    ///   will be to transferred to `to`.\\n    /// - when `from` is zero, `amount` tokens will be minted for `to`.\\n    /// - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n    /// - `from` and `to` are never both zero.\\n    // slither-disable-next-line dead-code\\n    function beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    function _burn(address account, uint256 amount) internal {\\n        uint256 currentBalance = balanceOf[account];\\n        require(currentBalance >= amount, \\\"Burn amount exceeds balance\\\");\\n\\n        beforeTokenTransfer(account, address(0), amount);\\n\\n        balanceOf[account] = currentBalance - amount;\\n        totalSupply -= amount;\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    function _transfer(\\n        address spender,\\n        address recipient,\\n        uint256 amount\\n    ) private {\\n        require(spender != address(0), \\\"Transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"Transfer to the zero address\\\");\\n        require(recipient != address(this), \\\"Transfer to the token address\\\");\\n\\n        beforeTokenTransfer(spender, recipient, amount);\\n\\n        uint256 spenderBalance = balanceOf[spender];\\n        require(spenderBalance >= amount, \\\"Transfer amount exceeds balance\\\");\\n        balanceOf[spender] = spenderBalance - amount;\\n        balanceOf[recipient] += amount;\\n        emit Transfer(spender, recipient, amount);\\n    }\\n\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) private {\\n        require(owner != address(0), \\\"Approve from the zero address\\\");\\n        require(spender != address(0), \\\"Approve to the zero address\\\");\\n        allowance[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function buildDomainSeparator() private view returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\n                        \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n                    ),\\n                    keccak256(bytes(name)),\\n                    keccak256(bytes(\\\"1\\\")),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0x1e1bf4ec5c9d6fe70f6f834316482aeff3f122ff4ffaa7178099e7ae71a0b16d\",\"license\":\"MIT\"},\"@thesis/solidity-contracts/contracts/token/IApproveAndCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\n/// @notice An interface that should be implemented by tokens supporting\\n///         `approveAndCall`/`receiveApproval` pattern.\\ninterface IApproveAndCall {\\n    /// @notice Executes `receiveApproval` function on spender as specified in\\n    ///         `IReceiveApproval` interface. Approves spender to withdraw from\\n    ///         the caller multiple times, up to the `amount`. If this\\n    ///         function is called again, it overwrites the current allowance\\n    ///         with `amount`. Reverts if the approval reverted or if\\n    ///         `receiveApproval` call on the spender reverted.\\n    function approveAndCall(\\n        address spender,\\n        uint256 amount,\\n        bytes memory extraData\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x393d18ef81a57dcc96fff4c340cc2945deaebb37b9796c322cf2bc96872c3df8\",\"license\":\"MIT\"},\"@thesis/solidity-contracts/contracts/token/IERC20WithPermit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\nimport \\\"./IApproveAndCall.sol\\\";\\n\\n/// @title  IERC20WithPermit\\n/// @notice Burnable ERC20 token with EIP2612 permit functionality. User can\\n///         authorize a transfer of their token with a signature conforming\\n///         EIP712 standard instead of an on-chain transaction from their\\n///         address. Anyone can submit this signature on the user's behalf by\\n///         calling the permit function, as specified in EIP2612 standard,\\n///         paying gas fees, and possibly performing other actions in the same\\n///         transaction.\\ninterface IERC20WithPermit is IERC20, IERC20Metadata, IApproveAndCall {\\n    /// @notice EIP2612 approval made with secp256k1 signature.\\n    ///         Users can authorize a transfer of their tokens with a signature\\n    ///         conforming EIP712 standard, rather than an on-chain transaction\\n    ///         from their address. Anyone can submit this signature on the\\n    ///         user's behalf by calling the permit function, paying gas fees,\\n    ///         and possibly performing other actions in the same transaction.\\n    /// @dev    The deadline argument can be set to `type(uint256).max to create\\n    ///         permits that effectively never expire.\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /// @notice Destroys `amount` tokens from the caller.\\n    function burn(uint256 amount) external;\\n\\n    /// @notice Destroys `amount` of tokens from `account`, deducting the amount\\n    ///         from caller's allowance.\\n    function burnFrom(address account, uint256 amount) external;\\n\\n    /// @notice Returns hash of EIP712 Domain struct with the token name as\\n    ///         a signing domain and token contract as a verifying contract.\\n    ///         Used to construct EIP2612 signature provided to `permit`\\n    ///         function.\\n    /* solhint-disable-next-line func-name-mixedcase */\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    /// @notice Returns the current nonce for EIP2612 permission for the\\n    ///         provided token owner for a replay protection. Used to construct\\n    ///         EIP2612 signature provided to `permit` function.\\n    function nonce(address owner) external view returns (uint256);\\n\\n    /// @notice Returns EIP2612 Permit message hash. Used to construct EIP2612\\n    ///         signature provided to `permit` function.\\n    /* solhint-disable-next-line func-name-mixedcase */\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n}\\n\",\"keccak256\":\"0xdac9a5086c19a7128b505a7be1ab0ac1aa314f6989cb88d2417e9d7383f89fa9\",\"license\":\"MIT\"},\"@thesis/solidity-contracts/contracts/token/IReceiveApproval.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\n/// @notice An interface that should be implemented by contracts supporting\\n///         `approveAndCall`/`receiveApproval` pattern.\\ninterface IReceiveApproval {\\n    /// @notice Receives approval to spend tokens. Called as a result of\\n    ///         `approveAndCall` call on the token.\\n    function receiveApproval(\\n        address from,\\n        uint256 amount,\\n        address token,\\n        bytes calldata extraData\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6a30d83ad230548b1e7839737affc8489a035314209de14b89dbef7fb0f66395\",\"license\":\"MIT\"},\"@thesis/solidity-contracts/contracts/token/MisfundRecovery.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\n/// @title  MisfundRecovery\\n/// @notice Allows the owner of the token contract extending MisfundRecovery\\n///         to recover any ERC20 and ERC721 sent mistakenly to the token\\n///         contract address.\\ncontract MisfundRecovery is Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    function recoverERC20(\\n        IERC20 token,\\n        address recipient,\\n        uint256 amount\\n    ) external onlyOwner {\\n        token.safeTransfer(recipient, amount);\\n    }\\n\\n    function recoverERC721(\\n        IERC721 token,\\n        address recipient,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external onlyOwner {\\n        token.safeTransferFrom(address(this), recipient, tokenId, data);\\n    }\\n}\\n\",\"keccak256\":\"0xbbfea02bf20e2a6df5a497bbc05c7540a3b7c7dfb8b1feeaffef7f6b8ba65d65\",\"license\":\"MIT\"},\"contracts/governance/BaseTokenholderGovernor.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"./TokenholderGovernorVotes.sol\\\";\\nimport \\\"../token/T.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport \\\"@openzeppelin/contracts/governance/Governor.sol\\\";\\nimport \\\"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\\\";\\nimport \\\"@openzeppelin/contracts/governance/extensions/GovernorPreventLateQuorum.sol\\\";\\nimport \\\"@openzeppelin/contracts/governance/extensions/GovernorTimelockControl.sol\\\";\\n\\ncontract BaseTokenholderGovernor is\\n    AccessControl,\\n    GovernorCountingSimple,\\n    TokenholderGovernorVotes,\\n    GovernorPreventLateQuorum,\\n    GovernorTimelockControl\\n{\\n    bytes32 public constant VETO_POWER =\\n        keccak256(\\\"Power to veto proposals in Threshold's Tokenholder DAO\\\");\\n\\n    constructor(\\n        T _token,\\n        IVotesHistory _staking,\\n        TimelockController _timelock,\\n        address _vetoer,\\n        uint256 _quorumNumerator,\\n        uint256 _proposalThresholdNumerator,\\n        uint256 votingDelay,\\n        uint256 votingPeriod,\\n        uint64 votingExtension\\n    )\\n        Governor(\\\"TokenholderGovernor\\\")\\n        GovernorParameters(\\n            _quorumNumerator,\\n            _proposalThresholdNumerator,\\n            votingDelay,\\n            votingPeriod\\n        )\\n        GovernorPreventLateQuorum(votingExtension)\\n        TokenholderGovernorVotes(_token, _staking)\\n        GovernorTimelockControl(_timelock)\\n    {\\n        _setupRole(VETO_POWER, _vetoer);\\n        _setupRole(DEFAULT_ADMIN_ROLE, address(_timelock));\\n    }\\n\\n    function cancel(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        bytes32 descriptionHash\\n    ) external onlyRole(VETO_POWER) returns (uint256) {\\n        return _cancel(targets, values, calldatas, descriptionHash);\\n    }\\n\\n    function propose(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) public override(Governor, IGovernor) returns (uint256) {\\n        return super.propose(targets, values, calldatas, description);\\n    }\\n\\n    function quorum(uint256 blockNumber)\\n        public\\n        view\\n        override(IGovernor, GovernorParameters)\\n        returns (uint256)\\n    {\\n        return super.quorum(blockNumber);\\n    }\\n\\n    function proposalThreshold()\\n        public\\n        view\\n        override(Governor, GovernorParameters)\\n        returns (uint256)\\n    {\\n        return super.proposalThreshold();\\n    }\\n\\n    function getVotes(address account, uint256 blockNumber)\\n        public\\n        view\\n        override(IGovernor, TokenholderGovernorVotes)\\n        returns (uint256)\\n    {\\n        return super.getVotes(account, blockNumber);\\n    }\\n\\n    function state(uint256 proposalId)\\n        public\\n        view\\n        override(Governor, GovernorTimelockControl)\\n        returns (ProposalState)\\n    {\\n        return super.state(proposalId);\\n    }\\n\\n    function supportsInterface(bytes4 interfaceId)\\n        public\\n        view\\n        override(Governor, GovernorTimelockControl, AccessControl)\\n        returns (bool)\\n    {\\n        return super.supportsInterface(interfaceId);\\n    }\\n\\n    function _execute(\\n        uint256 proposalId,\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        bytes32 descriptionHash\\n    ) internal override(Governor, GovernorTimelockControl) {\\n        super._execute(proposalId, targets, values, calldatas, descriptionHash);\\n    }\\n\\n    function _cancel(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        bytes32 descriptionHash\\n    ) internal override(Governor, GovernorTimelockControl) returns (uint256) {\\n        return super._cancel(targets, values, calldatas, descriptionHash);\\n    }\\n\\n    function _executor()\\n        internal\\n        view\\n        override(Governor, GovernorTimelockControl)\\n        returns (address)\\n    {\\n        return super._executor();\\n    }\\n\\n    function proposalDeadline(uint256 proposalId)\\n        public\\n        view\\n        virtual\\n        override(IGovernor, Governor, GovernorPreventLateQuorum)\\n        returns (uint256)\\n    {\\n        return super.proposalDeadline(proposalId);\\n    }\\n\\n    function _castVote(\\n        uint256 proposalId,\\n        address account,\\n        uint8 support,\\n        string memory reason\\n    )\\n        internal\\n        virtual\\n        override(Governor, GovernorPreventLateQuorum)\\n        returns (uint256)\\n    {\\n        return super._castVote(proposalId, account, support, reason);\\n    }\\n}\\n\",\"keccak256\":\"0x1b956b2d7c58245e3d7d6ab55b116804dbf097a211ad8b8b75fb4bafcd2b3cea\",\"license\":\"GPL-3.0-or-later\"},\"contracts/governance/Checkpoints.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"./IVotesHistory.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\\\";\\n\\n/// @title Checkpoints\\n/// @dev Abstract contract to support checkpoints for Compound-like voting and\\n///      delegation. This implementation supports token supply up to 2^96 - 1.\\n///      This contract keeps a history (checkpoints) of each account's vote\\n///      power. Vote power can be delegated either by calling the {delegate}\\n///      function directly, or by providing a signature to be used with\\n///      {delegateBySig}. Voting power can be publicly queried through\\n///      {getVotes} and {getPastVotes}.\\n///      NOTE: Extracted from OpenZeppelin ERCVotes.sol.\\n/// @dev This contract is upgrade-safe.\\nabstract contract Checkpoints is IVotesHistory {\\n    struct Checkpoint {\\n        uint32 fromBlock;\\n        uint96 votes;\\n    }\\n\\n    // slither-disable-next-line uninitialized-state\\n    mapping(address => address) internal _delegates;\\n    mapping(address => uint128[]) internal _checkpoints;\\n    uint128[] internal _totalSupplyCheckpoints;\\n\\n    // Reserved storage space in case we need to add more variables,\\n    // since there are upgradeable contracts that inherit from this one.\\n    // See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n    // slither-disable-next-line unused-state\\n    uint256[47] private __gap;\\n\\n    /// @notice Emitted when an account changes their delegate.\\n    event DelegateChanged(\\n        address indexed delegator,\\n        address indexed fromDelegate,\\n        address indexed toDelegate\\n    );\\n\\n    /// @notice Emitted when a balance or delegate change results in changes\\n    ///         to an account's voting power.\\n    event DelegateVotesChanged(\\n        address indexed delegate,\\n        uint256 previousBalance,\\n        uint256 newBalance\\n    );\\n\\n    function checkpoints(address account, uint32 pos)\\n        public\\n        view\\n        virtual\\n        returns (Checkpoint memory checkpoint)\\n    {\\n        (uint32 fromBlock, uint96 votes) = decodeCheckpoint(\\n            _checkpoints[account][pos]\\n        );\\n        checkpoint = Checkpoint(fromBlock, votes);\\n    }\\n\\n    /// @notice Get number of checkpoints for `account`.\\n    function numCheckpoints(address account)\\n        public\\n        view\\n        virtual\\n        returns (uint32)\\n    {\\n        return SafeCastUpgradeable.toUint32(_checkpoints[account].length);\\n    }\\n\\n    /// @notice Get the address `account` is currently delegating to.\\n    function delegates(address account) public view virtual returns (address) {\\n        return _delegates[account];\\n    }\\n\\n    /// @notice Gets the current votes balance for `account`.\\n    /// @param account The address to get votes balance\\n    /// @return The number of current votes for `account`\\n    function getVotes(address account) public view returns (uint96) {\\n        uint256 pos = _checkpoints[account].length;\\n        return pos == 0 ? 0 : decodeValue(_checkpoints[account][pos - 1]);\\n    }\\n\\n    /// @notice Determine the prior number of votes for an account as of\\n    ///         a block number.\\n    /// @dev Block number must be a finalized block or else this function will\\n    ///      revert to prevent misinformation.\\n    /// @param account The address of the account to check\\n    /// @param blockNumber The block number to get the vote balance at\\n    /// @return The number of votes the account had as of the given block\\n    function getPastVotes(address account, uint256 blockNumber)\\n        public\\n        view\\n        returns (uint96)\\n    {\\n        return lookupCheckpoint(_checkpoints[account], blockNumber);\\n    }\\n\\n    /// @notice Retrieve the `totalSupply` at the end of `blockNumber`.\\n    ///         Note, this value is the sum of all balances, but it is NOT the\\n    ///         sum of all the delegated votes!\\n    /// @param blockNumber The block number to get the total supply at\\n    /// @dev `blockNumber` must have been already mined\\n    function getPastTotalSupply(uint256 blockNumber)\\n        public\\n        view\\n        returns (uint96)\\n    {\\n        return lookupCheckpoint(_totalSupplyCheckpoints, blockNumber);\\n    }\\n\\n    /// @notice Change delegation for `delegator` to `delegatee`.\\n    // slither-disable-next-line dead-code\\n    function delegate(address delegator, address delegatee) internal virtual;\\n\\n    /// @notice Moves voting power from one delegate to another\\n    /// @param src Address of old delegate\\n    /// @param dst Address of new delegate\\n    /// @param amount Voting power amount to transfer between delegates\\n    function moveVotingPower(\\n        address src,\\n        address dst,\\n        uint256 amount\\n    ) internal {\\n        if (src != dst && amount > 0) {\\n            if (src != address(0)) {\\n                // https://github.com/crytic/slither/issues/960\\n                // slither-disable-next-line variable-scope\\n                (uint256 oldWeight, uint256 newWeight) = writeCheckpoint(\\n                    _checkpoints[src],\\n                    subtract,\\n                    amount\\n                );\\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\\n            }\\n\\n            if (dst != address(0)) {\\n                // https://github.com/crytic/slither/issues/959\\n                // slither-disable-next-line uninitialized-local\\n                (uint256 oldWeight, uint256 newWeight) = writeCheckpoint(\\n                    _checkpoints[dst],\\n                    add,\\n                    amount\\n                );\\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\\n            }\\n        }\\n    }\\n\\n    /// @notice Writes a new checkpoint based on operating last stored value\\n    ///         with a `delta`. Usually, said operation is the `add` or\\n    ///         `subtract` functions from this contract, but more complex\\n    ///         functions can be passed as parameters.\\n    /// @param ckpts The checkpoints array to use\\n    /// @param op The function to apply over the last value and the `delta`\\n    /// @param delta Variation with respect to last stored value to be used\\n    ///              for new checkpoint\\n    function writeCheckpoint(\\n        uint128[] storage ckpts,\\n        function(uint256, uint256) view returns (uint256) op,\\n        uint256 delta\\n    ) internal returns (uint256 oldWeight, uint256 newWeight) {\\n        uint256 pos = ckpts.length;\\n        oldWeight = pos == 0 ? 0 : decodeValue(ckpts[pos - 1]);\\n        newWeight = op(oldWeight, delta);\\n\\n        if (pos > 0) {\\n            uint32 fromBlock = decodeBlockNumber(ckpts[pos - 1]);\\n            // slither-disable-next-line incorrect-equality\\n            if (fromBlock == block.number) {\\n                ckpts[pos - 1] = encodeCheckpoint(\\n                    fromBlock,\\n                    SafeCastUpgradeable.toUint96(newWeight)\\n                );\\n                return (oldWeight, newWeight);\\n            }\\n        }\\n\\n        ckpts.push(\\n            encodeCheckpoint(\\n                SafeCastUpgradeable.toUint32(block.number),\\n                SafeCastUpgradeable.toUint96(newWeight)\\n            )\\n        );\\n    }\\n\\n    /// @notice Lookup a value in a list of (sorted) checkpoints.\\n    /// @param ckpts The checkpoints array to use\\n    /// @param blockNumber Block number when we want to get the checkpoint at\\n    function lookupCheckpoint(uint128[] storage ckpts, uint256 blockNumber)\\n        internal\\n        view\\n        returns (uint96)\\n    {\\n        // We run a binary search to look for the earliest checkpoint taken\\n        // after `blockNumber`. During the loop, the index of the wanted\\n        // checkpoint remains in the range [low-1, high). With each iteration,\\n        // either `low` or `high` is moved towards the middle of the range to\\n        // maintain the invariant.\\n        // - If the middle checkpoint is after `blockNumber`,\\n        //   we look in [low, mid)\\n        // - If the middle checkpoint is before or equal to `blockNumber`,\\n        //   we look in [mid+1, high)\\n        // Once we reach a single value (when low == high), we've found the\\n        // right checkpoint at the index high-1, if not out of bounds (in that\\n        // case we're looking too far in the past and the result is 0).\\n        // Note that if the latest checkpoint available is exactly for\\n        // `blockNumber`, we end up with an index that is past the end of the\\n        // array, so we technically don't find a checkpoint after\\n        // `blockNumber`, but it works out the same.\\n        require(blockNumber < block.number, \\\"Block not yet determined\\\");\\n\\n        uint256 high = ckpts.length;\\n        uint256 low = 0;\\n        while (low < high) {\\n            uint256 mid = MathUpgradeable.average(low, high);\\n            uint32 midBlock = decodeBlockNumber(ckpts[mid]);\\n            if (midBlock > blockNumber) {\\n                high = mid;\\n            } else {\\n                low = mid + 1;\\n            }\\n        }\\n\\n        return high == 0 ? 0 : decodeValue(ckpts[high - 1]);\\n    }\\n\\n    /// @notice Maximum token supply. Defaults to `type(uint96).max` (2^96 - 1)\\n    // slither-disable-next-line dead-code\\n    function maxSupply() internal view virtual returns (uint96) {\\n        return type(uint96).max;\\n    }\\n\\n    /// @notice Encodes a `blockNumber` and `value` into a single `uint128`\\n    ///         checkpoint.\\n    /// @dev `blockNumber` is stored in the first 32 bits, while `value` in the\\n    ///      remaining 96 bits.\\n    function encodeCheckpoint(uint32 blockNumber, uint96 value)\\n        internal\\n        pure\\n        returns (uint128)\\n    {\\n        return (uint128(blockNumber) << 96) | uint128(value);\\n    }\\n\\n    /// @notice Decodes a block number from a `uint128` `checkpoint`.\\n    function decodeBlockNumber(uint128 checkpoint)\\n        internal\\n        pure\\n        returns (uint32)\\n    {\\n        return uint32(bytes4(bytes16(checkpoint)));\\n    }\\n\\n    /// @notice Decodes a voting value from a `uint128` `checkpoint`.\\n    function decodeValue(uint128 checkpoint) internal pure returns (uint96) {\\n        return uint96(checkpoint);\\n    }\\n\\n    /// @notice Decodes a block number and voting value from a `uint128`\\n    ///         `checkpoint`.\\n    function decodeCheckpoint(uint128 checkpoint)\\n        internal\\n        pure\\n        returns (uint32 blockNumber, uint96 value)\\n    {\\n        blockNumber = decodeBlockNumber(checkpoint);\\n        value = decodeValue(checkpoint);\\n    }\\n\\n    // slither-disable-next-line dead-code\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    // slither-disable-next-line dead-code\\n    function subtract(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n}\\n\",\"keccak256\":\"0x67b28349e88afe7440c43df93ba5de56873d850a25147161e4469731750efb16\",\"license\":\"GPL-3.0-or-later\"},\"contracts/governance/GovernorParameters.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/governance/Governor.sol\\\";\\n\\n/// @title GovernorParameters\\n/// @notice Abstract contract to handle governance parameters\\n/// @dev Based on `GovernorVotesQuorumFraction`, but without being opinionated\\n///      on what's the source of voting power, and extended to handle proposal\\n///      thresholds too. See OpenZeppelin's GovernorVotesQuorumFraction,\\n///      GovernorVotes and GovernorSettings for reference.\\nabstract contract GovernorParameters is Governor {\\n    uint256 public constant FRACTION_DENOMINATOR = 10000;\\n    uint64 internal constant AVERAGE_BLOCK_TIME_IN_SECONDS = 13;\\n\\n    uint256 public quorumNumerator;\\n    uint256 public proposalThresholdNumerator;\\n\\n    uint256 private _votingDelay;\\n    uint256 private _votingPeriod;\\n\\n    event QuorumNumeratorUpdated(\\n        uint256 oldQuorumNumerator,\\n        uint256 newQuorumNumerator\\n    );\\n\\n    event ProposalThresholdNumeratorUpdated(\\n        uint256 oldThresholdNumerator,\\n        uint256 newThresholdNumerator\\n    );\\n\\n    event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay);\\n    event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod);\\n\\n    constructor(\\n        uint256 quorumNumeratorValue,\\n        uint256 proposalNumeratorValue,\\n        uint256 initialVotingDelay,\\n        uint256 initialVotingPeriod\\n    ) {\\n        _updateQuorumNumerator(quorumNumeratorValue);\\n        _updateProposalThresholdNumerator(proposalNumeratorValue);\\n        _setVotingDelay(initialVotingDelay);\\n        _setVotingPeriod(initialVotingPeriod);\\n    }\\n\\n    function updateQuorumNumerator(uint256 newQuorumNumerator)\\n        external\\n        virtual\\n        onlyGovernance\\n    {\\n        _updateQuorumNumerator(newQuorumNumerator);\\n    }\\n\\n    function updateProposalThresholdNumerator(uint256 newNumerator)\\n        external\\n        virtual\\n        onlyGovernance\\n    {\\n        _updateProposalThresholdNumerator(newNumerator);\\n    }\\n\\n    /// @notice Update the voting delay. This operation can only be performed\\n    ///         through a governance proposal. Emits a `VotingDelaySet` event.\\n    function setVotingDelay(uint256 newVotingDelay)\\n        external\\n        virtual\\n        onlyGovernance\\n    {\\n        _setVotingDelay(newVotingDelay);\\n    }\\n\\n    /// @notice Update the voting period. This operation can only be performed\\n    ///         through a governance proposal. Emits a `VotingPeriodSet` event.\\n    function setVotingPeriod(uint256 newVotingPeriod)\\n        external\\n        virtual\\n        onlyGovernance\\n    {\\n        _setVotingPeriod(newVotingPeriod);\\n    }\\n\\n    /// @notice Compute the required amount of voting power to reach quorum\\n    /// @param blockNumber The block number to get the quorum at\\n    function quorum(uint256 blockNumber)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256)\\n    {\\n        return\\n            (_getPastTotalSupply(blockNumber) * quorumNumerator) /\\n            FRACTION_DENOMINATOR;\\n    }\\n\\n    /// @notice Compute the required amount of voting power to create a proposal\\n    ///         at the last block height\\n    /// @dev This function is implemented to comply with Governor API but we\\n    ///      we will actually use `proposalThreshold(uint256 blockNumber)`,\\n    ///      as in our DAOs the threshold amount changes according to supply.\\n    function proposalThreshold()\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256)\\n    {\\n        return proposalThreshold(block.number - 1);\\n    }\\n\\n    /// @notice Compute the required amount of voting power to create a proposal\\n    /// @param blockNumber The block number to get the proposal threshold at\\n    function proposalThreshold(uint256 blockNumber)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return\\n            (_getPastTotalSupply(blockNumber) * proposalThresholdNumerator) /\\n            FRACTION_DENOMINATOR;\\n    }\\n\\n    function votingDelay() public view virtual override returns (uint256) {\\n        return _votingDelay;\\n    }\\n\\n    function votingPeriod() public view virtual override returns (uint256) {\\n        return _votingPeriod;\\n    }\\n\\n    function _updateQuorumNumerator(uint256 newQuorumNumerator)\\n        internal\\n        virtual\\n    {\\n        require(\\n            newQuorumNumerator <= FRACTION_DENOMINATOR,\\n            \\\"quorumNumerator > Denominator\\\"\\n        );\\n\\n        uint256 oldQuorumNumerator = quorumNumerator;\\n        quorumNumerator = newQuorumNumerator;\\n\\n        emit QuorumNumeratorUpdated(oldQuorumNumerator, newQuorumNumerator);\\n    }\\n\\n    function _updateProposalThresholdNumerator(uint256 proposalNumerator)\\n        internal\\n        virtual\\n    {\\n        require(\\n            proposalNumerator <= FRACTION_DENOMINATOR,\\n            \\\"proposalNumerator > Denominator\\\"\\n        );\\n\\n        uint256 oldNumerator = proposalThresholdNumerator;\\n        proposalThresholdNumerator = proposalNumerator;\\n\\n        emit ProposalThresholdNumeratorUpdated(oldNumerator, proposalNumerator);\\n    }\\n\\n    function _setVotingDelay(uint256 newVotingDelay) internal virtual {\\n        emit VotingDelaySet(_votingDelay, newVotingDelay);\\n        _votingDelay = newVotingDelay;\\n    }\\n\\n    function _setVotingPeriod(uint256 newVotingPeriod) internal virtual {\\n        // voting period must be at least one block long\\n        require(newVotingPeriod > 0, \\\"Voting period too low\\\");\\n        emit VotingPeriodSet(_votingPeriod, newVotingPeriod);\\n        _votingPeriod = newVotingPeriod;\\n    }\\n\\n    /// @notice Compute the past total voting power at a particular block\\n    /// @param blockNumber The block number to get the vote power at\\n    // slither-disable-next-line dead-code\\n    function _getPastTotalSupply(uint256 blockNumber)\\n        internal\\n        view\\n        virtual\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x5e8cfcd6db07fe4fbb3ae1af3c5232415243e86c779c254dde55b1163fa5955b\",\"license\":\"GPL-3.0-or-later\"},\"contracts/governance/IVotesHistory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n\\npragma solidity 0.8.9;\\n\\ninterface IVotesHistory {\\n    function getPastVotes(address account, uint256 blockNumber)\\n        external\\n        view\\n        returns (uint96);\\n\\n    function getPastTotalSupply(uint256 blockNumber)\\n        external\\n        view\\n        returns (uint96);\\n}\\n\",\"keccak256\":\"0x535e87cf4c2e9a9439d99cf0918f013965fa6c4ddfbab07ff6ca4b195c8edc9f\",\"license\":\"GPL-3.0-or-later\"},\"contracts/governance/StakerGovernor.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"./StakerGovernorVotes.sol\\\";\\nimport \\\"./TokenholderGovernor.sol\\\";\\nimport \\\"../token/T.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport \\\"@openzeppelin/contracts/governance/Governor.sol\\\";\\nimport \\\"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\\\";\\nimport \\\"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\\\";\\nimport \\\"@openzeppelin/contracts/governance/extensions/GovernorTimelockControl.sol\\\";\\n\\ncontract StakerGovernor is\\n    AccessControl,\\n    GovernorCountingSimple,\\n    StakerGovernorVotes,\\n    GovernorTimelockControl\\n{\\n    uint256 private constant INITIAL_QUORUM_NUMERATOR = 150; // Defined in basis points, i.e., 1.5%\\n    uint256 private constant INITIAL_PROPOSAL_THRESHOLD_NUMERATOR = 25; // Defined in basis points, i.e., 0.25%\\n    uint256 private constant INITIAL_VOTING_DELAY =\\n        2 days / AVERAGE_BLOCK_TIME_IN_SECONDS;\\n    uint256 private constant INITIAL_VOTING_PERIOD =\\n        10 days / AVERAGE_BLOCK_TIME_IN_SECONDS;\\n\\n    bytes32 public constant VETO_POWER =\\n        keccak256(\\\"Power to veto proposals in Threshold's Staker DAO\\\");\\n\\n    address internal immutable manager;\\n\\n    constructor(\\n        IVotesHistory _staking,\\n        TimelockController _timelock,\\n        TokenholderGovernor tokenholderGovernor,\\n        address vetoer\\n    )\\n        Governor(\\\"StakerGovernor\\\")\\n        GovernorParameters(\\n            INITIAL_QUORUM_NUMERATOR,\\n            INITIAL_PROPOSAL_THRESHOLD_NUMERATOR,\\n            INITIAL_VOTING_DELAY,\\n            INITIAL_VOTING_PERIOD\\n        )\\n        StakerGovernorVotes(_staking)\\n        GovernorTimelockControl(_timelock)\\n    {\\n        require(\\n            keccak256(bytes(tokenholderGovernor.name())) ==\\n                keccak256(bytes(\\\"TokenholderGovernor\\\")),\\n            \\\"Incorrect TokenholderGovernor\\\"\\n        );\\n        manager = tokenholderGovernor.timelock();\\n        require(manager != address(0), \\\"No timelock founds\\\");\\n        _setupRole(VETO_POWER, vetoer);\\n        _setupRole(DEFAULT_ADMIN_ROLE, manager);\\n    }\\n\\n    function cancel(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        bytes32 descriptionHash\\n    ) external onlyRole(VETO_POWER) returns (uint256) {\\n        return _cancel(targets, values, calldatas, descriptionHash);\\n    }\\n\\n    function propose(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) public override(Governor, IGovernor) returns (uint256) {\\n        uint256 atLastBlock = block.number - 1;\\n        require(\\n            getVotes(msg.sender, atLastBlock) >= proposalThreshold(atLastBlock),\\n            \\\"Proposal below threshold\\\"\\n        );\\n        return super.propose(targets, values, calldatas, description);\\n    }\\n\\n    function quorum(uint256 blockNumber)\\n        public\\n        view\\n        override(IGovernor, GovernorParameters)\\n        returns (uint256)\\n    {\\n        return super.quorum(blockNumber);\\n    }\\n\\n    function proposalThreshold()\\n        public\\n        view\\n        override(Governor, GovernorParameters)\\n        returns (uint256)\\n    {\\n        return super.proposalThreshold();\\n    }\\n\\n    function getVotes(address account, uint256 blockNumber)\\n        public\\n        view\\n        override(IGovernor, StakerGovernorVotes)\\n        returns (uint256)\\n    {\\n        return super.getVotes(account, blockNumber);\\n    }\\n\\n    function state(uint256 proposalId)\\n        public\\n        view\\n        override(Governor, GovernorTimelockControl)\\n        returns (ProposalState)\\n    {\\n        return super.state(proposalId);\\n    }\\n\\n    function supportsInterface(bytes4 interfaceId)\\n        public\\n        view\\n        override(Governor, GovernorTimelockControl, AccessControl)\\n        returns (bool)\\n    {\\n        return super.supportsInterface(interfaceId);\\n    }\\n\\n    function _execute(\\n        uint256 proposalId,\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        bytes32 descriptionHash\\n    ) internal override(Governor, GovernorTimelockControl) {\\n        super._execute(proposalId, targets, values, calldatas, descriptionHash);\\n    }\\n\\n    function _cancel(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        bytes[] memory calldatas,\\n        bytes32 descriptionHash\\n    ) internal override(Governor, GovernorTimelockControl) returns (uint256) {\\n        return super._cancel(targets, values, calldatas, descriptionHash);\\n    }\\n\\n    /// @notice Returns the address of the entity that acts as governance for\\n    ///         this contract.\\n    /// @dev By default, Governor assumes this is either the Governor contract\\n    ///      itself, or a timelock if there's one configured. We override this\\n    ///      here for the StakerGovernor contract so it's the Tokenholder DAO's\\n    ///      Timelock, which we obtain at constructor time.\\n    function _executor()\\n        internal\\n        view\\n        override(Governor, GovernorTimelockControl)\\n        returns (address)\\n    {\\n        return manager;\\n    }\\n}\\n\",\"keccak256\":\"0x490fa0d479123d08ae95edb6db79efab5e7a681bbd712b0432c4cd7eb7ecfd92\",\"license\":\"GPL-3.0-or-later\"},\"contracts/governance/StakerGovernorVotes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"./GovernorParameters.sol\\\";\\nimport \\\"./IVotesHistory.sol\\\";\\n\\n/// @title StakerGovernorVotes\\n/// @notice Staker DAO voting power extraction from staked T positions,\\n//          including legacy stakes (NU/KEEP).\\nabstract contract StakerGovernorVotes is GovernorParameters {\\n    IVotesHistory public immutable staking;\\n\\n    constructor(IVotesHistory tStakingAddress) {\\n        staking = tStakingAddress;\\n    }\\n\\n    /// @notice Read the voting weight from the snapshot mechanism in the T\\n    ///         staking contracts. Note that this also tracks legacy stakes\\n    ///         (NU/KEEP).\\n    /// @param account Delegate account with T staking voting power\\n    /// @param blockNumber The block number to get the vote balance at\\n    /// @dev See {IGovernor-getVotes}\\n    function getVotes(address account, uint256 blockNumber)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256)\\n    {\\n        return staking.getPastVotes(account, blockNumber);\\n    }\\n\\n    /// @notice Compute the total voting power for the Staker DAO.\\n    /// @param blockNumber The block number to get the voting power at\\n    function _getPastTotalSupply(uint256 blockNumber)\\n        internal\\n        view\\n        virtual\\n        override\\n        returns (uint256)\\n    {\\n        return staking.getPastTotalSupply(blockNumber);\\n    }\\n}\\n\",\"keccak256\":\"0x91c0bfb41f0928b7f0269ce24e7f2e866a0d721983d1f018e23de6d022335f00\",\"license\":\"GPL-3.0-or-later\"},\"contracts/governance/TokenholderGovernor.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"./BaseTokenholderGovernor.sol\\\";\\n\\ncontract TokenholderGovernor is BaseTokenholderGovernor {\\n    uint256 private constant INITIAL_QUORUM_NUMERATOR = 150; // Defined in basis points, i.e., 1.5%\\n    uint256 private constant INITIAL_PROPOSAL_THRESHOLD_NUMERATOR = 25; // Defined in basis points, i.e., 0.25%\\n    uint256 private constant INITIAL_VOTING_DELAY =\\n        2 days / AVERAGE_BLOCK_TIME_IN_SECONDS;\\n    uint256 private constant INITIAL_VOTING_PERIOD =\\n        10 days / AVERAGE_BLOCK_TIME_IN_SECONDS;\\n    uint64 private constant INITIAL_VOTING_EXTENSION =\\n        uint64(2 days) / AVERAGE_BLOCK_TIME_IN_SECONDS;\\n\\n    constructor(\\n        T _token,\\n        IVotesHistory _staking,\\n        TimelockController _timelock,\\n        address vetoer\\n    )\\n        BaseTokenholderGovernor(\\n            _token,\\n            _staking,\\n            _timelock,\\n            vetoer,\\n            INITIAL_QUORUM_NUMERATOR,\\n            INITIAL_PROPOSAL_THRESHOLD_NUMERATOR,\\n            INITIAL_VOTING_DELAY,\\n            INITIAL_VOTING_PERIOD,\\n            INITIAL_VOTING_EXTENSION\\n        )\\n    {}\\n}\\n\",\"keccak256\":\"0xaf347718aee945569adc2ed500866e9f3073699b7bc027f9bdd371888acf06ee\",\"license\":\"GPL-3.0-or-later\"},\"contracts/governance/TokenholderGovernorVotes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"./GovernorParameters.sol\\\";\\nimport \\\"./IVotesHistory.sol\\\";\\n\\n/// @title TokenholderGovernorVotes\\n/// @notice Tokenholder DAO voting power extraction from both liquid and staked\\n///         T token positions, including legacy stakes (NU/KEEP).\\nabstract contract TokenholderGovernorVotes is GovernorParameters {\\n    IVotesHistory public immutable token;\\n    IVotesHistory public immutable staking;\\n\\n    constructor(IVotesHistory tokenAddress, IVotesHistory tStakingAddress) {\\n        token = tokenAddress;\\n        staking = tStakingAddress;\\n    }\\n\\n    /// @notice Read the voting weight from the snapshot mechanism in the token\\n    ///         and staking contracts. For Tokenholder DAO, there are currently\\n    ///         two voting power sources:\\n    ///          - Liquid T, tracked by the T token contract\\n    ///          - Stakes in the T network, tracked  by the T staking contract.\\n    ///            Note that this also tracks legacy stakes (NU/KEEP); legacy\\n    ///            stakes count for tokenholders' voting power, but not for the\\n    ///            total voting power of the Tokenholder DAO\\n    ///            (see {_getPastTotalSupply}).\\n    /// @param account Tokenholder account in the T network\\n    /// @param blockNumber The block number to get the vote balance at\\n    /// @dev See {IGovernor-getVotes}\\n    function getVotes(address account, uint256 blockNumber)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256)\\n    {\\n        uint256 liquidVotes = token.getPastVotes(account, blockNumber);\\n        uint256 stakedVotes = staking.getPastVotes(account, blockNumber);\\n        return liquidVotes + stakedVotes;\\n    }\\n\\n    /// @notice Compute the total voting power for Tokenholder DAO. Note how it\\n    ///         only uses the token total supply as source, as native T tokens\\n    ///         that are staked continue existing, but as deposits in the\\n    ///         staking contract. However, legacy stakes can't contribute to the\\n    ///         total voting power as they're already implicitly counted as part\\n    ///         of Vending Machines' liquid balance; hence, we only need to read\\n    ///         total voting power from the token.\\n    /// @param blockNumber The block number to get the vote power at\\n    function _getPastTotalSupply(uint256 blockNumber)\\n        internal\\n        view\\n        virtual\\n        override\\n        returns (uint256)\\n    {\\n        return token.getPastTotalSupply(blockNumber);\\n    }\\n}\\n\",\"keccak256\":\"0x1548a3bf0c6d9a42379a824f4204fa3ed35c54e42b6aa827d98f6b1b433ebbb4\",\"license\":\"GPL-3.0-or-later\"},\"contracts/token/T.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../governance/Checkpoints.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/SafeCast.sol\\\";\\nimport \\\"@thesis/solidity-contracts/contracts/token/ERC20WithPermit.sol\\\";\\nimport \\\"@thesis/solidity-contracts/contracts/token/MisfundRecovery.sol\\\";\\n\\n/// @title T token\\n/// @notice Threshold Network T token\\n/// @dev By default, token balance does not account for voting power.\\n///      This makes transfers cheaper. The downside is that it requires users\\n///      to delegate to themselves to activate checkpoints and have their\\n///      voting power tracked.\\ncontract T is ERC20WithPermit, MisfundRecovery, Checkpoints {\\n    /// @notice The EIP-712 typehash for the delegation struct used by\\n    ///         `delegateBySig`.\\n    bytes32 public constant DELEGATION_TYPEHASH =\\n        keccak256(\\n            \\\"Delegation(address delegatee,uint256 nonce,uint256 deadline)\\\"\\n        );\\n\\n    constructor() ERC20WithPermit(\\\"Threshold Network Token\\\", \\\"T\\\") {}\\n\\n    /// @notice Delegates votes from signatory to `delegatee`\\n    /// @param delegatee The address to delegate votes to\\n    /// @param deadline The time at which to expire the signature\\n    /// @param v The recovery byte of the signature\\n    /// @param r Half of the ECDSA signature pair\\n    /// @param s Half of the ECDSA signature pair\\n    function delegateBySig(\\n        address signatory,\\n        address delegatee,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        /* solhint-disable-next-line not-rely-on-time */\\n        require(deadline >= block.timestamp, \\\"Delegation expired\\\");\\n\\n        // Validate `s` and `v` values for a malleability concern described in EIP2.\\n        // Only signatures with `s` value in the lower half of the secp256k1\\n        // curve's order and `v` value of 27 or 28 are considered valid.\\n        require(\\n            uint256(s) <=\\n                0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\\n            \\\"Invalid signature 's' value\\\"\\n        );\\n        require(v == 27 || v == 28, \\\"Invalid signature 'v' value\\\");\\n\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR(),\\n                keccak256(\\n                    abi.encode(\\n                        DELEGATION_TYPEHASH,\\n                        delegatee,\\n                        nonce[signatory]++,\\n                        deadline\\n                    )\\n                )\\n            )\\n        );\\n\\n        address recoveredAddress = ecrecover(digest, v, r, s);\\n        require(\\n            recoveredAddress != address(0) && recoveredAddress == signatory,\\n            \\\"Invalid signature\\\"\\n        );\\n\\n        return delegate(signatory, delegatee);\\n    }\\n\\n    /// @notice Delegate votes from `msg.sender` to `delegatee`.\\n    /// @param delegatee The address to delegate votes to\\n    function delegate(address delegatee) public virtual {\\n        return delegate(msg.sender, delegatee);\\n    }\\n\\n    // slither-disable-next-line dead-code\\n    function beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal override {\\n        uint96 safeAmount = SafeCast.toUint96(amount);\\n\\n        // When minting:\\n        if (from == address(0)) {\\n            // Does not allow to mint more than uint96 can fit. Otherwise, the\\n            // Checkpoint might not fit the balance.\\n            require(\\n                totalSupply + amount <= maxSupply(),\\n                \\\"Maximum total supply exceeded\\\"\\n            );\\n            writeCheckpoint(_totalSupplyCheckpoints, add, safeAmount);\\n        }\\n\\n        // When burning:\\n        if (to == address(0)) {\\n            writeCheckpoint(_totalSupplyCheckpoints, subtract, safeAmount);\\n        }\\n\\n        moveVotingPower(delegates(from), delegates(to), safeAmount);\\n    }\\n\\n    function delegate(address delegator, address delegatee)\\n        internal\\n        virtual\\n        override\\n    {\\n        address currentDelegate = delegates(delegator);\\n        uint96 delegatorBalance = SafeCast.toUint96(balanceOf[delegator]);\\n        _delegates[delegator] = delegatee;\\n\\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\\n\\n        moveVotingPower(currentDelegate, delegatee, delegatorBalance);\\n    }\\n}\\n\",\"keccak256\":\"0x6265416225fd15b1108fce13d570b53a862a5d256ba2e6329bccf658eccac430\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 1124,
        "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)1119_storage)"
      },
      {
        "astId": 1630,
        "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
        "label": "_name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 1635,
        "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
        "label": "_proposals",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(ProposalCore)1628_storage)"
      },
      {
        "astId": 3482,
        "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
        "label": "_proposalVotes",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(ProposalVote)3477_storage)"
      },
      {
        "astId": 10696,
        "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
        "label": "quorumNumerator",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 10698,
        "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
        "label": "proposalThresholdNumerator",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 10700,
        "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
        "label": "_votingDelay",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 10702,
        "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
        "label": "_votingPeriod",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 3875,
        "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
        "label": "_timelock",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(TimelockController)3456"
      },
      {
        "astId": 3879,
        "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
        "label": "_timelockIds",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_bytes32)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(TimelockController)3456": {
        "encoding": "inplace",
        "label": "contract TimelockController",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)1119_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)1119_storage"
      },
      "t_mapping(t_uint256,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_uint256,t_struct(ProposalCore)1628_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Governor.ProposalCore)",
        "numberOfBytes": "32",
        "value": "t_struct(ProposalCore)1628_storage"
      },
      "t_mapping(t_uint256,t_struct(ProposalVote)3477_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GovernorCountingSimple.ProposalVote)",
        "numberOfBytes": "32",
        "value": "t_struct(ProposalVote)3477_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(BlockNumber)7779_storage": {
        "encoding": "inplace",
        "label": "struct Timers.BlockNumber",
        "members": [
          {
            "astId": 7778,
            "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
            "label": "_deadline",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(ProposalCore)1628_storage": {
        "encoding": "inplace",
        "label": "struct Governor.ProposalCore",
        "members": [
          {
            "astId": 1620,
            "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
            "label": "voteStart",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(BlockNumber)7779_storage"
          },
          {
            "astId": 1623,
            "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
            "label": "voteEnd",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(BlockNumber)7779_storage"
          },
          {
            "astId": 1625,
            "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
            "label": "executed",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 1627,
            "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
            "label": "canceled",
            "offset": 1,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(ProposalVote)3477_storage": {
        "encoding": "inplace",
        "label": "struct GovernorCountingSimple.ProposalVote",
        "members": [
          {
            "astId": 3468,
            "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
            "label": "againstVotes",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3470,
            "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
            "label": "forVotes",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3472,
            "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
            "label": "abstainVotes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3476,
            "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
            "label": "hasVoted",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(RoleData)1119_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 1116,
            "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 1118,
            "contract": "contracts/governance/StakerGovernor.sol:StakerGovernor",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "proposalThreshold(uint256)": {
        "notice": "Compute the required amount of voting power to create a proposal"
      },
      "setVotingDelay(uint256)": {
        "notice": "Update the voting delay. This operation can only be performed         through a governance proposal. Emits a `VotingDelaySet` event."
      },
      "setVotingPeriod(uint256)": {
        "notice": "Update the voting period. This operation can only be performed         through a governance proposal. Emits a `VotingPeriodSet` event."
      },
      "votingDelay()": {
        "notice": "module:user-config"
      },
      "votingPeriod()": {
        "notice": "module:user-config"
      }
    },
    "version": 1
  }
}