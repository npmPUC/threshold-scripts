{
  "contractName": "T",
  "sourceName": "contracts/token/T.sol",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DELEGATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cachedChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cachedDomainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pos",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct Checkpoints.Checkpoint",
          "name": "checkpoint",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signatory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "recoverERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60c06040523480156200001157600080fd5b506040518060400160405280601781526020017f5468726573686f6c64204e6574776f726b20546f6b656e000000000000000000815250604051806040016040528060018152602001601560fa1b8152506200007c62000076620000c260201b60201c565b620000c6565b815162000091906005906020850190620001c7565b508051620000a7906006906020840190620001c7565b5046608052620000b662000116565b60a052506200034e9050565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60056040516200014a9190620002aa565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b828054620001d5906200026d565b90600052602060002090601f016020900481019282620001f9576000855562000244565b82601f106200021457805160ff191683800117855562000244565b8280016001018555821562000244579182015b828111156200024457825182559160200191906001019062000227565b506200025292915062000256565b5090565b5b8082111562000252576000815560010162000257565b600181811c908216806200028257607f821691505b60208210811415620002a457634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620002c757607f831692505b6020808410821415620002e857634e487b7160e01b86526022600452602486fd5b818015620002ff5760018114620003115762000340565b60ff1986168952848901965062000340565b60008a81526020902060005b86811015620003385781548b8201529085019083016200031d565b505084890196505b509498975050505050505050565b60805160a0516125f562000382600039600081816103e101526106a101526000818161034b015261067801526125f56000f3fe608060405234801561001057600080fd5b506004361061018b5760003560e01c806306fdde0314610190578063095ea7b3146101ae5780631171bda9146101d157806318160ddd146101e657806323b872dd146101fd57806330adf81f14610210578063313ce567146102255780633644e5151461023f5780633a46b1a81461024757806340c10f191461027257806342966c6814610285578063587cde1e146102985780635c19a95c146102c35780636fcfff45146102d657806370a08231146102fe57806370ae92d21461031e578063715018a61461033e578063771da5c51461034657806379cc67901461036d5780638da5cb5b146103805780638e539e8c1461038857806395d89b411461039b5780639ab24eb0146103a3578063a9059cbb146103b6578063b20d7fa9146103c9578063b4f94b2e146103dc578063cae9ca5114610403578063d505accf14610416578063dd62ed3e14610429578063e7a324dc14610454578063f1127ed814610469578063f2fde38b146104a6578063fc4e51f6146104b9575b600080fd5b6101986104cc565b6040516101a59190611e5c565b60405180910390f35b6101c16101bc366004611e84565b61055a565b60405190151581526020016101a5565b6101e46101df366004611eb0565b610570565b005b6101ef60045481565b6040519081526020016101a5565b6101c161020b366004611eb0565b6105c1565b6101ef60008051602061258083398151915281565b61022d601281565b60405160ff90911681526020016101a5565b6101ef610674565b61025a610255366004611e84565b6106d0565b6040516001600160601b0390911681526020016101a5565b6101e4610280366004611e84565b6106f2565b6101e4610293366004611ef1565b6107f5565b6102ab6102a6366004611f0a565b610802565b6040516001600160a01b0390911681526020016101a5565b6101e46102d1366004611f0a565b610820565b6102e96102e4366004611f0a565b61082a565b60405163ffffffff90911681526020016101a5565b6101ef61030c366004611f0a565b60016020526000908152604090205481565b6101ef61032c366004611f0a565b60036020526000908152604090205481565b6101e4610852565b6101ef7f000000000000000000000000000000000000000000000000000000000000000081565b6101e461037b366004611e84565b61088d565b6102ab610923565b61025a610396366004611ef1565b610932565b61019861093f565b61025a6103b1366004611f0a565b61094c565b6101c16103c4366004611e84565b6109dc565b6101e46103d7366004611f3d565b6109e9565b6101ef7f000000000000000000000000000000000000000000000000000000000000000081565b6101c1610411366004611fb6565b610bf8565b6101e4610424366004612082565b610c80565b6101ef6104373660046120f0565b600260209081526000928352604080842090915290825290205481565b6101ef60008051602061254083398151915281565b61047c610477366004612129565b610e9c565b60408051825163ffffffff1681526020928301516001600160601b031692810192909252016101a5565b6101e46104b4366004611f0a565b610f48565b6101e46104c7366004612160565b610fe5565b600580546104d9906121fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610505906121fe565b80156105525780601f1061052757610100808354040283529160200191610552565b820191906000526020600020905b81548152906001019060200180831161053557829003601f168201915b505050505081565b6000610567338484611076565b50600192915050565b33610579610923565b6001600160a01b0316146105a85760405162461bcd60e51b815260040161059f90612239565b60405180910390fd5b6105bc6001600160a01b0384168383611182565b505050565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019811461065c57828110156106485760405162461bcd60e51b815260206004820152602160248201527f5472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636044820152606560f81b606482015260840161059f565b61065c85336106578685612284565b611076565b6106678585856111d4565b60019150505b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614156106c357507f000000000000000000000000000000000000000000000000000000000000000090565b6106cb6113d4565b905090565b6001600160a01b038216600090815260086020526040812061066d9083611483565b336106fb610923565b6001600160a01b0316146107215760405162461bcd60e51b815260040161059f90612239565b6001600160a01b0382166107725760405162461bcd60e51b81526020600482015260186024820152774d696e7420746f20746865207a65726f206164647265737360401b604482015260640161059f565b61077e6000838361157e565b8060046000828254610790919061229b565b90915550506001600160a01b038216600090815260016020526040812080548392906107bd90849061229b565b90915550506040518181526001600160a01b038316906000906000805160206125608339815191529060200160405180910390a35050565b6107ff338261166a565b50565b6001600160a01b039081166000908152600760205260409020541690565b6107ff3382611746565b6001600160a01b03811660009081526008602052604081205461084c906117e8565b92915050565b3361085b610923565b6001600160a01b0316146108815760405162461bcd60e51b815260040161059f90612239565b61088b6000611851565b565b6001600160a01b03821660009081526002602090815260408083203384529091529020546000198114610919578181101561090a5760405162461bcd60e51b815260206004820152601d60248201527f4275726e20616d6f756e74206578636565647320616c6c6f77616e6365000000604482015260640161059f565b61091983336106578585612284565b6105bc838361166a565b6000546001600160a01b031690565b600061084c600983611483565b600680546104d9906121fe565b6001600160a01b03811660009081526008602052604081205480156109d3576001600160a01b03831660009081526008602052604090206109ce90610992600184612284565b815481106109a2576109a26122b3565b90600052602060002090600291828204019190066010029054906101000a90046001600160801b031690565b61066d565b60009392505050565b60006105673384846111d4565b42841015610a2e5760405162461bcd60e51b815260206004820152601260248201527111195b1959d85d1a5bdb88195e1c1a5c995960721b604482015260640161059f565b6fa2a8918ca85bafe22016d0b997e4df60600160ff1b03811115610a645760405162461bcd60e51b815260040161059f906122c9565b8260ff16601b1480610a7957508260ff16601c145b610a955760405162461bcd60e51b815260040161059f906122fe565b6000610a9f610674565b6001600160a01b03881660009081526003602052604081208054600080516020612540833981519152928a9290610ad583612333565b9190505588604051602001610b0c94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405160208183030381529060405280519060200120604051602001610b3392919061234e565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051610b709493929190612369565b6020604051602081039080840390855afa158015610b92573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610bc85750876001600160a01b0316816001600160a01b0316145b610be45760405162461bcd60e51b815260040161059f90612387565b610bee8888611746565b5050505050505050565b6000610c04848461055a565b15610c7657604051638f4ffcb160e01b81526001600160a01b03851690638f4ffcb190610c3b9033908790309088906004016123b2565b600060405180830381600087803b158015610c5557600080fd5b505af1158015610c69573d6000803e3d6000fd5b505050506001905061066d565b5060009392505050565b42841015610cc55760405162461bcd60e51b815260206004820152601260248201527114195c9b5a5cdcda5bdb88195e1c1a5c995960721b604482015260640161059f565b6fa2a8918ca85bafe22016d0b997e4df60600160ff1b03811115610cfb5760405162461bcd60e51b815260040161059f906122c9565b8260ff16601b1480610d1057508260ff16601c145b610d2c5760405162461bcd60e51b815260040161059f906122fe565b6000610d36610674565b6001600160a01b03891660009081526003602052604081208054600080516020612580833981519152928c928c928c92909190610d7283612333565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001610dd592919061234e565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051610e129493929190612369565b6020604051602081039080840390855afa158015610e34573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610e6a5750886001600160a01b0316816001600160a01b0316145b610e865760405162461bcd60e51b815260040161059f90612387565b610e91898989611076565b505050505050505050565b60408051808201909152600080825260208201526001600160a01b038316600090815260086020526040812080548291610f1d9163ffffffff8716908110610ee657610ee66122b3565b90600052602060002090600291828204019190066010029054906101000a90046001600160801b031663ffffffff606082901c1691565b6040805180820190915263ffffffff90921682526001600160601b0316602082015295945050505050565b33610f51610923565b6001600160a01b031614610f775760405162461bcd60e51b815260040161059f90612239565b6001600160a01b038116610fdc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161059f565b6107ff81611851565b33610fee610923565b6001600160a01b0316146110145760405162461bcd60e51b815260040161059f90612239565b604051635c46a7ef60e11b81526001600160a01b0386169063b88d4fde9061104890309088908890889088906004016123ef565b600060405180830381600087803b15801561106257600080fd5b505af1158015610e91573d6000803e3d6000fd5b6001600160a01b0383166110cc5760405162461bcd60e51b815260206004820152601d60248201527f417070726f76652066726f6d20746865207a65726f2061646472657373000000604482015260640161059f565b6001600160a01b0382166111205760405162461bcd60e51b815260206004820152601b60248201527a417070726f766520746f20746865207a65726f206164647265737360281b604482015260640161059f565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526105bc9084906118a1565b6001600160a01b03831661122a5760405162461bcd60e51b815260206004820152601e60248201527f5472616e736665722066726f6d20746865207a65726f20616464726573730000604482015260640161059f565b6001600160a01b03821661127f5760405162461bcd60e51b815260206004820152601c60248201527b5472616e7366657220746f20746865207a65726f206164647265737360201b604482015260640161059f565b6001600160a01b0382163014156112d85760405162461bcd60e51b815260206004820152601d60248201527f5472616e7366657220746f2074686520746f6b656e2061646472657373000000604482015260640161059f565b6112e383838361157e565b6001600160a01b0383166000908152600160205260409020548181101561134c5760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657220616d6f756e7420657863656564732062616c616e636500604482015260640161059f565b6113568282612284565b6001600160a01b03808616600090815260016020526040808220939093559085168152908120805484929061138c90849061229b565b92505081905550826001600160a01b0316846001600160a01b0316600080516020612560833981519152846040516113c691815260200190565b60405180910390a350505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60056040516114069190612443565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60004382106114cf5760405162461bcd60e51b8152602060048201526018602482015277109b1bd8dac81b9bdd081e595d0819195d195c9b5a5b995960421b604482015260640161059f565b825460005b818110156115585760006114e88284611973565b9050600061152b878381548110611501576115016122b3565b6000918252602090912060028204015463ffffffff60019092166010026101000a900460601c1690565b9050858163ffffffff16111561154357819350611551565b61154e82600161229b565b92505b50506114d4565b81156115725761156d85610992600185612284565b611575565b60005b95945050505050565b60006115898261198e565b90506001600160a01b038416611618576004546001600160601b03906115b090849061229b565b11156115fe5760405162461bcd60e51b815260206004820152601d60248201527f4d6178696d756d20746f74616c20737570706c79206578636565646564000000604482015260640161059f565b61161560096119f6836001600160601b0316611a02565b50505b6001600160a01b0383166116405761163d6009611b5e836001600160601b0316611a02565b50505b61166461164c85610802565b61165585610802565b836001600160601b0316611b6a565b50505050565b6001600160a01b038216600090815260016020526040902054818110156116d15760405162461bcd60e51b815260206004820152601b60248201527a4275726e20616d6f756e7420657863656564732062616c616e636560281b604482015260640161059f565b6116dd8360008461157e565b6116e78282612284565b6001600160a01b03841660009081526001602052604081209190915560048054849290611715908490612284565b90915550506040518281526000906001600160a01b0385169060008051602061256083398151915290602001611175565b600061175183610802565b6001600160a01b038416600090815260016020526040812054919250906117779061198e565b6001600160a01b0385811660008181526007602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46116648284836001600160601b0316611b6a565b600063ffffffff82111561184d5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161059f565b5090565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006118f6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c839092919063ffffffff16565b8051909150156105bc578080602001905181019061191491906124df565b6105bc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161059f565b60006119826002848418612501565b61066d9084841661229b565b60006001600160601b0382111561184d5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b606482015260840161059f565b600061066d828461229b565b825460009081908015611a2357611a1e86610992600184612284565b611a26565b60005b6001600160601b03169250611a3f83858763ffffffff16565b91508015611aff576000611a6887611a58600185612284565b81548110611501576115016122b3565b9050438163ffffffff161415611afd57611aa181611a858561198e565b6001600160601b031660609190911b63ffffffff60601b161790565b87611aad600185612284565b81548110611abd57611abd6122b3565b90600052602060002090600291828204019190066010026101000a8154816001600160801b0302191690836001600160801b031602179055505050611b56565b505b85611b15611b0c436117e8565b611a858561198e565b81546001818101845560009384526020909320600282040180546001600160801b03938416601093909516929092026101000a938402929093021916179055505b935093915050565b600061066d8284612284565b816001600160a01b0316836001600160a01b031614158015611b8c5750600081115b156105bc576001600160a01b03831615611c08576001600160a01b03831660009081526008602052604081208190611bc790611b5e85611a02565b91509150846001600160a01b03166000805160206125a08339815191528383604051611bfd929190918252602082015260400190565b60405180910390a250505b6001600160a01b038216156105bc576001600160a01b03821660009081526008602052604081208190611c3e906119f685611a02565b91509150836001600160a01b03166000805160206125a08339815191528383604051611c74929190918252602082015260400190565b60405180910390a25050505050565b6060611c928484600085611c9a565b949350505050565b606082471015611cfb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161059f565b6001600160a01b0385163b611d525760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161059f565b600080866001600160a01b03168587604051611d6e9190612523565b60006040518083038185875af1925050503d8060008114611dab576040519150601f19603f3d011682016040523d82523d6000602084013e611db0565b606091505b5091509150611dc0828286611dcb565b979650505050505050565b60608315611dda57508161066d565b825115611dea5782518084602001fd5b8160405162461bcd60e51b815260040161059f9190611e5c565b60005b83811015611e1f578181015183820152602001611e07565b838111156116645750506000910152565b60008151808452611e48816020860160208601611e04565b601f01601f19169290920160200192915050565b60208152600061066d6020830184611e30565b6001600160a01b03811681146107ff57600080fd5b60008060408385031215611e9757600080fd5b8235611ea281611e6f565b946020939093013593505050565b600080600060608486031215611ec557600080fd5b8335611ed081611e6f565b92506020840135611ee081611e6f565b929592945050506040919091013590565b600060208284031215611f0357600080fd5b5035919050565b600060208284031215611f1c57600080fd5b813561066d81611e6f565b803560ff81168114611f3857600080fd5b919050565b60008060008060008060c08789031215611f5657600080fd5b8635611f6181611e6f565b95506020870135611f7181611e6f565b945060408701359350611f8660608801611f27565b92506080870135915060a087013590509295509295509295565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215611fcb57600080fd5b8335611fd681611e6f565b92506020840135915060408401356001600160401b0380821115611ff957600080fd5b818601915086601f83011261200d57600080fd5b81358181111561201f5761201f611fa0565b604051601f8201601f19908116603f0116810190838211818310171561204757612047611fa0565b8160405282815289602084870101111561206057600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600080600080600080600060e0888a03121561209d57600080fd5b87356120a881611e6f565b965060208801356120b881611e6f565b955060408801359450606088013593506120d460808901611f27565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561210357600080fd5b823561210e81611e6f565b9150602083013561211e81611e6f565b809150509250929050565b6000806040838503121561213c57600080fd5b823561214781611e6f565b9150602083013563ffffffff8116811461211e57600080fd5b60008060008060006080868803121561217857600080fd5b853561218381611e6f565b9450602086013561219381611e6f565b93506040860135925060608601356001600160401b03808211156121b657600080fd5b818801915088601f8301126121ca57600080fd5b8135818111156121d957600080fd5b8960208285010111156121eb57600080fd5b9699959850939650602001949392505050565b600181811c9082168061221257607f821691505b6020821081141561223357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156122965761229661226e565b500390565b600082198211156122ae576122ae61226e565b500190565b634e487b7160e01b600052603260045260246000fd5b6020808252601b908201527a496e76616c6964207369676e6174757265202773272076616c756560281b604082015260600190565b6020808252601b908201527a496e76616c6964207369676e6174757265202776272076616c756560281b604082015260600190565b60006000198214156123475761234761226e565b5060010190565b61190160f01b81526002810192909252602282015260420190565b93845260ff9290921660208401526040830152606082015260800190565b602080825260119082015270496e76616c6964207369676e617475726560781b604082015260600190565b6001600160a01b03858116825260208201859052831660408201526080606082018190526000906123e590830184611e30565b9695505050505050565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600080835481600182811c91508083168061245f57607f831692505b602080841082141561247f57634e487b7160e01b86526022600452602486fd5b81801561249357600181146124a4576124d1565b60ff198616895284890196506124d1565b60008a81526020902060005b868110156124c95781548b8201529085019083016124b0565b505084890196505b509498975050505050505050565b6000602082840312156124f157600080fd5b8151801515811461066d57600080fd5b60008261251e57634e487b7160e01b600052601260045260246000fd5b500490565b60008251612535818460208701611e04565b919091019291505056fe76995fe87be88484696cfd6792aeb71e0b61f81dfa3b641e5adffa38a0d3b8e2ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724a2646970667358221220b9da4b6d7c73293002710a8ae12ed5d0b0fbe505299a37fbbdb2e29cab6a8e1864736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018b5760003560e01c806306fdde0314610190578063095ea7b3146101ae5780631171bda9146101d157806318160ddd146101e657806323b872dd146101fd57806330adf81f14610210578063313ce567146102255780633644e5151461023f5780633a46b1a81461024757806340c10f191461027257806342966c6814610285578063587cde1e146102985780635c19a95c146102c35780636fcfff45146102d657806370a08231146102fe57806370ae92d21461031e578063715018a61461033e578063771da5c51461034657806379cc67901461036d5780638da5cb5b146103805780638e539e8c1461038857806395d89b411461039b5780639ab24eb0146103a3578063a9059cbb146103b6578063b20d7fa9146103c9578063b4f94b2e146103dc578063cae9ca5114610403578063d505accf14610416578063dd62ed3e14610429578063e7a324dc14610454578063f1127ed814610469578063f2fde38b146104a6578063fc4e51f6146104b9575b600080fd5b6101986104cc565b6040516101a59190611e5c565b60405180910390f35b6101c16101bc366004611e84565b61055a565b60405190151581526020016101a5565b6101e46101df366004611eb0565b610570565b005b6101ef60045481565b6040519081526020016101a5565b6101c161020b366004611eb0565b6105c1565b6101ef60008051602061258083398151915281565b61022d601281565b60405160ff90911681526020016101a5565b6101ef610674565b61025a610255366004611e84565b6106d0565b6040516001600160601b0390911681526020016101a5565b6101e4610280366004611e84565b6106f2565b6101e4610293366004611ef1565b6107f5565b6102ab6102a6366004611f0a565b610802565b6040516001600160a01b0390911681526020016101a5565b6101e46102d1366004611f0a565b610820565b6102e96102e4366004611f0a565b61082a565b60405163ffffffff90911681526020016101a5565b6101ef61030c366004611f0a565b60016020526000908152604090205481565b6101ef61032c366004611f0a565b60036020526000908152604090205481565b6101e4610852565b6101ef7f000000000000000000000000000000000000000000000000000000000000000081565b6101e461037b366004611e84565b61088d565b6102ab610923565b61025a610396366004611ef1565b610932565b61019861093f565b61025a6103b1366004611f0a565b61094c565b6101c16103c4366004611e84565b6109dc565b6101e46103d7366004611f3d565b6109e9565b6101ef7f000000000000000000000000000000000000000000000000000000000000000081565b6101c1610411366004611fb6565b610bf8565b6101e4610424366004612082565b610c80565b6101ef6104373660046120f0565b600260209081526000928352604080842090915290825290205481565b6101ef60008051602061254083398151915281565b61047c610477366004612129565b610e9c565b60408051825163ffffffff1681526020928301516001600160601b031692810192909252016101a5565b6101e46104b4366004611f0a565b610f48565b6101e46104c7366004612160565b610fe5565b600580546104d9906121fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610505906121fe565b80156105525780601f1061052757610100808354040283529160200191610552565b820191906000526020600020905b81548152906001019060200180831161053557829003601f168201915b505050505081565b6000610567338484611076565b50600192915050565b33610579610923565b6001600160a01b0316146105a85760405162461bcd60e51b815260040161059f90612239565b60405180910390fd5b6105bc6001600160a01b0384168383611182565b505050565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019811461065c57828110156106485760405162461bcd60e51b815260206004820152602160248201527f5472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636044820152606560f81b606482015260840161059f565b61065c85336106578685612284565b611076565b6106678585856111d4565b60019150505b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614156106c357507f000000000000000000000000000000000000000000000000000000000000000090565b6106cb6113d4565b905090565b6001600160a01b038216600090815260086020526040812061066d9083611483565b336106fb610923565b6001600160a01b0316146107215760405162461bcd60e51b815260040161059f90612239565b6001600160a01b0382166107725760405162461bcd60e51b81526020600482015260186024820152774d696e7420746f20746865207a65726f206164647265737360401b604482015260640161059f565b61077e6000838361157e565b8060046000828254610790919061229b565b90915550506001600160a01b038216600090815260016020526040812080548392906107bd90849061229b565b90915550506040518181526001600160a01b038316906000906000805160206125608339815191529060200160405180910390a35050565b6107ff338261166a565b50565b6001600160a01b039081166000908152600760205260409020541690565b6107ff3382611746565b6001600160a01b03811660009081526008602052604081205461084c906117e8565b92915050565b3361085b610923565b6001600160a01b0316146108815760405162461bcd60e51b815260040161059f90612239565b61088b6000611851565b565b6001600160a01b03821660009081526002602090815260408083203384529091529020546000198114610919578181101561090a5760405162461bcd60e51b815260206004820152601d60248201527f4275726e20616d6f756e74206578636565647320616c6c6f77616e6365000000604482015260640161059f565b61091983336106578585612284565b6105bc838361166a565b6000546001600160a01b031690565b600061084c600983611483565b600680546104d9906121fe565b6001600160a01b03811660009081526008602052604081205480156109d3576001600160a01b03831660009081526008602052604090206109ce90610992600184612284565b815481106109a2576109a26122b3565b90600052602060002090600291828204019190066010029054906101000a90046001600160801b031690565b61066d565b60009392505050565b60006105673384846111d4565b42841015610a2e5760405162461bcd60e51b815260206004820152601260248201527111195b1959d85d1a5bdb88195e1c1a5c995960721b604482015260640161059f565b6fa2a8918ca85bafe22016d0b997e4df60600160ff1b03811115610a645760405162461bcd60e51b815260040161059f906122c9565b8260ff16601b1480610a7957508260ff16601c145b610a955760405162461bcd60e51b815260040161059f906122fe565b6000610a9f610674565b6001600160a01b03881660009081526003602052604081208054600080516020612540833981519152928a9290610ad583612333565b9190505588604051602001610b0c94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405160208183030381529060405280519060200120604051602001610b3392919061234e565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051610b709493929190612369565b6020604051602081039080840390855afa158015610b92573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610bc85750876001600160a01b0316816001600160a01b0316145b610be45760405162461bcd60e51b815260040161059f90612387565b610bee8888611746565b5050505050505050565b6000610c04848461055a565b15610c7657604051638f4ffcb160e01b81526001600160a01b03851690638f4ffcb190610c3b9033908790309088906004016123b2565b600060405180830381600087803b158015610c5557600080fd5b505af1158015610c69573d6000803e3d6000fd5b505050506001905061066d565b5060009392505050565b42841015610cc55760405162461bcd60e51b815260206004820152601260248201527114195c9b5a5cdcda5bdb88195e1c1a5c995960721b604482015260640161059f565b6fa2a8918ca85bafe22016d0b997e4df60600160ff1b03811115610cfb5760405162461bcd60e51b815260040161059f906122c9565b8260ff16601b1480610d1057508260ff16601c145b610d2c5760405162461bcd60e51b815260040161059f906122fe565b6000610d36610674565b6001600160a01b03891660009081526003602052604081208054600080516020612580833981519152928c928c928c92909190610d7283612333565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001610dd592919061234e565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051610e129493929190612369565b6020604051602081039080840390855afa158015610e34573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610e6a5750886001600160a01b0316816001600160a01b0316145b610e865760405162461bcd60e51b815260040161059f90612387565b610e91898989611076565b505050505050505050565b60408051808201909152600080825260208201526001600160a01b038316600090815260086020526040812080548291610f1d9163ffffffff8716908110610ee657610ee66122b3565b90600052602060002090600291828204019190066010029054906101000a90046001600160801b031663ffffffff606082901c1691565b6040805180820190915263ffffffff90921682526001600160601b0316602082015295945050505050565b33610f51610923565b6001600160a01b031614610f775760405162461bcd60e51b815260040161059f90612239565b6001600160a01b038116610fdc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161059f565b6107ff81611851565b33610fee610923565b6001600160a01b0316146110145760405162461bcd60e51b815260040161059f90612239565b604051635c46a7ef60e11b81526001600160a01b0386169063b88d4fde9061104890309088908890889088906004016123ef565b600060405180830381600087803b15801561106257600080fd5b505af1158015610e91573d6000803e3d6000fd5b6001600160a01b0383166110cc5760405162461bcd60e51b815260206004820152601d60248201527f417070726f76652066726f6d20746865207a65726f2061646472657373000000604482015260640161059f565b6001600160a01b0382166111205760405162461bcd60e51b815260206004820152601b60248201527a417070726f766520746f20746865207a65726f206164647265737360281b604482015260640161059f565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526105bc9084906118a1565b6001600160a01b03831661122a5760405162461bcd60e51b815260206004820152601e60248201527f5472616e736665722066726f6d20746865207a65726f20616464726573730000604482015260640161059f565b6001600160a01b03821661127f5760405162461bcd60e51b815260206004820152601c60248201527b5472616e7366657220746f20746865207a65726f206164647265737360201b604482015260640161059f565b6001600160a01b0382163014156112d85760405162461bcd60e51b815260206004820152601d60248201527f5472616e7366657220746f2074686520746f6b656e2061646472657373000000604482015260640161059f565b6112e383838361157e565b6001600160a01b0383166000908152600160205260409020548181101561134c5760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657220616d6f756e7420657863656564732062616c616e636500604482015260640161059f565b6113568282612284565b6001600160a01b03808616600090815260016020526040808220939093559085168152908120805484929061138c90849061229b565b92505081905550826001600160a01b0316846001600160a01b0316600080516020612560833981519152846040516113c691815260200190565b60405180910390a350505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60056040516114069190612443565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60004382106114cf5760405162461bcd60e51b8152602060048201526018602482015277109b1bd8dac81b9bdd081e595d0819195d195c9b5a5b995960421b604482015260640161059f565b825460005b818110156115585760006114e88284611973565b9050600061152b878381548110611501576115016122b3565b6000918252602090912060028204015463ffffffff60019092166010026101000a900460601c1690565b9050858163ffffffff16111561154357819350611551565b61154e82600161229b565b92505b50506114d4565b81156115725761156d85610992600185612284565b611575565b60005b95945050505050565b60006115898261198e565b90506001600160a01b038416611618576004546001600160601b03906115b090849061229b565b11156115fe5760405162461bcd60e51b815260206004820152601d60248201527f4d6178696d756d20746f74616c20737570706c79206578636565646564000000604482015260640161059f565b61161560096119f6836001600160601b0316611a02565b50505b6001600160a01b0383166116405761163d6009611b5e836001600160601b0316611a02565b50505b61166461164c85610802565b61165585610802565b836001600160601b0316611b6a565b50505050565b6001600160a01b038216600090815260016020526040902054818110156116d15760405162461bcd60e51b815260206004820152601b60248201527a4275726e20616d6f756e7420657863656564732062616c616e636560281b604482015260640161059f565b6116dd8360008461157e565b6116e78282612284565b6001600160a01b03841660009081526001602052604081209190915560048054849290611715908490612284565b90915550506040518281526000906001600160a01b0385169060008051602061256083398151915290602001611175565b600061175183610802565b6001600160a01b038416600090815260016020526040812054919250906117779061198e565b6001600160a01b0385811660008181526007602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46116648284836001600160601b0316611b6a565b600063ffffffff82111561184d5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161059f565b5090565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006118f6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c839092919063ffffffff16565b8051909150156105bc578080602001905181019061191491906124df565b6105bc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161059f565b60006119826002848418612501565b61066d9084841661229b565b60006001600160601b0382111561184d5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b606482015260840161059f565b600061066d828461229b565b825460009081908015611a2357611a1e86610992600184612284565b611a26565b60005b6001600160601b03169250611a3f83858763ffffffff16565b91508015611aff576000611a6887611a58600185612284565b81548110611501576115016122b3565b9050438163ffffffff161415611afd57611aa181611a858561198e565b6001600160601b031660609190911b63ffffffff60601b161790565b87611aad600185612284565b81548110611abd57611abd6122b3565b90600052602060002090600291828204019190066010026101000a8154816001600160801b0302191690836001600160801b031602179055505050611b56565b505b85611b15611b0c436117e8565b611a858561198e565b81546001818101845560009384526020909320600282040180546001600160801b03938416601093909516929092026101000a938402929093021916179055505b935093915050565b600061066d8284612284565b816001600160a01b0316836001600160a01b031614158015611b8c5750600081115b156105bc576001600160a01b03831615611c08576001600160a01b03831660009081526008602052604081208190611bc790611b5e85611a02565b91509150846001600160a01b03166000805160206125a08339815191528383604051611bfd929190918252602082015260400190565b60405180910390a250505b6001600160a01b038216156105bc576001600160a01b03821660009081526008602052604081208190611c3e906119f685611a02565b91509150836001600160a01b03166000805160206125a08339815191528383604051611c74929190918252602082015260400190565b60405180910390a25050505050565b6060611c928484600085611c9a565b949350505050565b606082471015611cfb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161059f565b6001600160a01b0385163b611d525760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161059f565b600080866001600160a01b03168587604051611d6e9190612523565b60006040518083038185875af1925050503d8060008114611dab576040519150601f19603f3d011682016040523d82523d6000602084013e611db0565b606091505b5091509150611dc0828286611dcb565b979650505050505050565b60608315611dda57508161066d565b825115611dea5782518084602001fd5b8160405162461bcd60e51b815260040161059f9190611e5c565b60005b83811015611e1f578181015183820152602001611e07565b838111156116645750506000910152565b60008151808452611e48816020860160208601611e04565b601f01601f19169290920160200192915050565b60208152600061066d6020830184611e30565b6001600160a01b03811681146107ff57600080fd5b60008060408385031215611e9757600080fd5b8235611ea281611e6f565b946020939093013593505050565b600080600060608486031215611ec557600080fd5b8335611ed081611e6f565b92506020840135611ee081611e6f565b929592945050506040919091013590565b600060208284031215611f0357600080fd5b5035919050565b600060208284031215611f1c57600080fd5b813561066d81611e6f565b803560ff81168114611f3857600080fd5b919050565b60008060008060008060c08789031215611f5657600080fd5b8635611f6181611e6f565b95506020870135611f7181611e6f565b945060408701359350611f8660608801611f27565b92506080870135915060a087013590509295509295509295565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215611fcb57600080fd5b8335611fd681611e6f565b92506020840135915060408401356001600160401b0380821115611ff957600080fd5b818601915086601f83011261200d57600080fd5b81358181111561201f5761201f611fa0565b604051601f8201601f19908116603f0116810190838211818310171561204757612047611fa0565b8160405282815289602084870101111561206057600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600080600080600080600060e0888a03121561209d57600080fd5b87356120a881611e6f565b965060208801356120b881611e6f565b955060408801359450606088013593506120d460808901611f27565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561210357600080fd5b823561210e81611e6f565b9150602083013561211e81611e6f565b809150509250929050565b6000806040838503121561213c57600080fd5b823561214781611e6f565b9150602083013563ffffffff8116811461211e57600080fd5b60008060008060006080868803121561217857600080fd5b853561218381611e6f565b9450602086013561219381611e6f565b93506040860135925060608601356001600160401b03808211156121b657600080fd5b818801915088601f8301126121ca57600080fd5b8135818111156121d957600080fd5b8960208285010111156121eb57600080fd5b9699959850939650602001949392505050565b600181811c9082168061221257607f821691505b6020821081141561223357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156122965761229661226e565b500390565b600082198211156122ae576122ae61226e565b500190565b634e487b7160e01b600052603260045260246000fd5b6020808252601b908201527a496e76616c6964207369676e6174757265202773272076616c756560281b604082015260600190565b6020808252601b908201527a496e76616c6964207369676e6174757265202776272076616c756560281b604082015260600190565b60006000198214156123475761234761226e565b5060010190565b61190160f01b81526002810192909252602282015260420190565b93845260ff9290921660208401526040830152606082015260800190565b602080825260119082015270496e76616c6964207369676e617475726560781b604082015260600190565b6001600160a01b03858116825260208201859052831660408201526080606082018190526000906123e590830184611e30565b9695505050505050565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600080835481600182811c91508083168061245f57607f831692505b602080841082141561247f57634e487b7160e01b86526022600452602486fd5b81801561249357600181146124a4576124d1565b60ff198616895284890196506124d1565b60008a81526020902060005b868110156124c95781548b8201529085019083016124b0565b505084890196505b509498975050505050505050565b6000602082840312156124f157600080fd5b8151801515811461066d57600080fd5b60008261251e57634e487b7160e01b600052601260045260246000fd5b500490565b60008251612535818460208701611e04565b919091019291505056fe76995fe87be88484696cfd6792aeb71e0b61f81dfa3b641e5adffa38a0d3b8e2ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724a2646970667358221220b9da4b6d7c73293002710a8ae12ed5d0b0fbe505299a37fbbdb2e29cab6a8e1864736f6c63430008090033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "details": "By default, token balance does not account for voting power.      This makes transfers cheaper. The downside is that it requires users      to delegate to themselves to activate checkpoints and have their      voting power tracked.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "If the `amount` is set to `type(uint256).max` then      `transferFrom` and `burnFrom` will not reduce an allowance.      Beware that changing an allowance with this method brings the risk      that someone may use both the old and the new allowance by      unfortunate transaction ordering. One possible solution to mitigate      this race condition is to first reduce the spender's allowance to 0      and set the desired value afterwards:      https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "returns": {
          "_0": "True if the operation succeeded."
        }
      },
      "approveAndCall(address,uint256,bytes)": {
        "details": "If the `amount` is set to `type(uint256).max` then      `transferFrom` and `burnFrom` will not reduce an allowance.",
        "returns": {
          "_0": "True if both approval and `receiveApproval` calls succeeded."
        }
      },
      "burn(uint256)": {
        "details": "Requirements:       - the caller must have a balance of at least `amount`."
      },
      "burnFrom(address,uint256)": {
        "details": "Requirements:      - `account` must have a balance of at least `amount`,      - the caller must have allowance for `account`'s tokens of at least        `amount`."
      },
      "delegate(address)": {
        "params": {
          "delegatee": "The address to delegate votes to"
        }
      },
      "delegateBySig(address,address,uint256,uint8,bytes32,bytes32)": {
        "params": {
          "deadline": "The time at which to expire the signature",
          "delegatee": "The address to delegate votes to",
          "r": "Half of the ECDSA signature pair",
          "s": "Half of the ECDSA signature pair",
          "v": "The recovery byte of the signature"
        }
      },
      "getPastTotalSupply(uint256)": {
        "details": "`blockNumber` must have been already mined",
        "params": {
          "blockNumber": "The block number to get the total supply at"
        }
      },
      "getPastVotes(address,uint256)": {
        "details": "Block number must be a finalized block or else this function will      revert to prevent misinformation.",
        "params": {
          "account": "The address of the account to check",
          "blockNumber": "The block number to get the vote balance at"
        },
        "returns": {
          "_0": "The number of votes the account had as of the given block"
        }
      },
      "getVotes(address)": {
        "params": {
          "account": "The address to get votes balance"
        },
        "returns": {
          "_0": "The number of current votes for `account`"
        }
      },
      "mint(address,uint256)": {
        "details": "Requirements:      - `recipient` cannot be the zero address."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "The deadline argument can be set to `type(uint256).max to create         permits that effectively never expire.  If the `amount` is set         to `type(uint256).max` then `transferFrom` and `burnFrom` will         not reduce an allowance."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transfer(address,uint256)": {
        "details": "Requirements:       - `recipient` cannot be the zero address,       - the caller must have a balance of at least `amount`.",
        "returns": {
          "_0": "True if the operation succeeded, reverts otherwise."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Requirements:      - `spender` and `recipient` cannot be the zero address,      - `spender` must have a balance of at least `amount`,      - the caller must have allowance for `spender`'s tokens of at least        `amount`.",
        "returns": {
          "_0": "True if the operation succeeded, reverts otherwise."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "T token",
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_1505": {
          "entryPoint": null,
          "id": 1505,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_18234": {
          "entryPoint": null,
          "id": 18234,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_9044": {
          "entryPoint": null,
          "id": 9044,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_msgSender_7321": {
          "entryPoint": 194,
          "id": 7321,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_transferOwnership_1585": {
          "entryPoint": 198,
          "id": 1585,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@buildDomainSeparator_9633": {
          "entryPoint": 278,
          "id": 9633,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 682,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 6,
          "returnSlots": 1
        },
        "array_dataslot_bytes_storage_ptr": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "extract_byte_array_length": {
          "entryPoint": 621,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:2128:80",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:80",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "69:325:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "79:22:80",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "93:1:80",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "96:4:80"
                          }
                        ],
                        "functionName": {
                          "name": "shr",
                          "nodeType": "YulIdentifier",
                          "src": "89:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "89:12:80"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "79:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "110:38:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "140:4:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "146:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "136:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "136:12:80"
                      },
                      "variables": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulTypedName",
                          "src": "114:18:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "187:31:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "189:27:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "203:6:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "211:4:80",
                                  "type": "",
                                  "value": "0x7f"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "199:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "199:17:80"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "189:6:80"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "167:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "160:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "160:26:80"
                      },
                      "nodeType": "YulIf",
                      "src": "157:61:80"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "277:111:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "298:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "305:3:80",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "310:10:80",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "301:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "301:20:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "291:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "291:31:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "291:31:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "342:1:80",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "345:4:80",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "335:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "335:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "335:15:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "370:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "373:4:80",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "363:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "363:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "363:15:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "233:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "256:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "264:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "253:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "253:14:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "230:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "230:38:80"
                      },
                      "nodeType": "YulIf",
                      "src": "227:161:80"
                    }
                  ]
                },
                "name": "extract_byte_array_length",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "49:4:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "58:6:80",
                    "type": ""
                  }
                ],
                "src": "14:380:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "458:65:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "475:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "name": "ptr",
                            "nodeType": "YulIdentifier",
                            "src": "478:3:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "468:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "468:14:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "468:14:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "491:26:80",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "509:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "512:4:80",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "keccak256",
                          "nodeType": "YulIdentifier",
                          "src": "499:9:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "499:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "data",
                          "nodeType": "YulIdentifier",
                          "src": "491:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "array_dataslot_bytes_storage_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "ptr",
                    "nodeType": "YulTypedName",
                    "src": "441:3:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "449:4:80",
                    "type": ""
                  }
                ],
                "src": "399:124:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "666:966:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "676:12:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "687:1:80",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "ret",
                          "nodeType": "YulTypedName",
                          "src": "680:3:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "697:30:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "720:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "714:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "714:13:80"
                      },
                      "variables": [
                        {
                          "name": "slotValue",
                          "nodeType": "YulTypedName",
                          "src": "701:9:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "736:17:80",
                      "value": {
                        "name": "ret",
                        "nodeType": "YulIdentifier",
                        "src": "750:3:80"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "740:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "762:11:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "772:1:80",
                        "type": "",
                        "value": "1"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "766:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "782:28:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "796:2:80"
                          },
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "800:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "shr",
                          "nodeType": "YulIdentifier",
                          "src": "792:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "792:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "782:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "819:44:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "849:9:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "860:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "845:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "845:18:80"
                      },
                      "variables": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulTypedName",
                          "src": "823:18:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "902:31:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "904:27:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "918:6:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "926:4:80",
                                  "type": "",
                                  "value": "0x7f"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "914:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "914:17:80"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "904:6:80"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "882:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "875:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "875:26:80"
                      },
                      "nodeType": "YulIf",
                      "src": "872:61:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "942:12:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "952:2:80",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "946:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1013:115:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "1034:3:80"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1043:3:80",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1048:10:80",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "1039:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1039:20:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1027:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1027:33:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1027:33:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1080:1:80",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1083:4:80",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1073:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1073:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1073:15:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "1108:3:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1113:4:80",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1101:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1101:17:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1101:17:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "969:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "992:6:80"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1000:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "989:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "989:14:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "966:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "966:38:80"
                      },
                      "nodeType": "YulIf",
                      "src": "963:165:80"
                    },
                    {
                      "cases": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1178:97:80",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "1199:3:80"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "slotValue",
                                          "nodeType": "YulIdentifier",
                                          "src": "1208:9:80"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1223:3:80",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "not",
                                            "nodeType": "YulIdentifier",
                                            "src": "1219:3:80"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1219:8:80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "1204:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1204:24:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "1192:6:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1192:37:80"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1192:37:80"
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "1242:23:80",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "1253:3:80"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "1258:6:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1249:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1249:16:80"
                                },
                                "variableNames": [
                                  {
                                    "name": "ret",
                                    "nodeType": "YulIdentifier",
                                    "src": "1242:3:80"
                                  }
                                ]
                              }
                            ]
                          },
                          "nodeType": "YulCase",
                          "src": "1171:104:80",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1176:1:80",
                            "type": "",
                            "value": "0"
                          }
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1291:316:80",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "1305:55:80",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1353:6:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "array_dataslot_bytes_storage_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1320:32:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1320:40:80"
                                },
                                "variables": [
                                  {
                                    "name": "dataPos",
                                    "nodeType": "YulTypedName",
                                    "src": "1309:7:80",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "1373:10:80",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1382:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulTypedName",
                                    "src": "1377:1:80",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "1450:111:80",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "pos",
                                                "nodeType": "YulIdentifier",
                                                "src": "1479:3:80"
                                              },
                                              {
                                                "name": "i",
                                                "nodeType": "YulIdentifier",
                                                "src": "1484:1:80"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "1475:3:80"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1475:11:80"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "dataPos",
                                                "nodeType": "YulIdentifier",
                                                "src": "1494:7:80"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sload",
                                              "nodeType": "YulIdentifier",
                                              "src": "1488:5:80"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1488:14:80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mstore",
                                          "nodeType": "YulIdentifier",
                                          "src": "1468:6:80"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1468:35:80"
                                      },
                                      "nodeType": "YulExpressionStatement",
                                      "src": "1468:35:80"
                                    },
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "1520:27:80",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulIdentifier",
                                            "src": "1535:7:80"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "1544:2:80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1531:3:80"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1531:16:80"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "dataPos",
                                          "nodeType": "YulIdentifier",
                                          "src": "1520:7:80"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1407:1:80"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "1410:6:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nodeType": "YulIdentifier",
                                    "src": "1404:2:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1404:13:80"
                                },
                                "nodeType": "YulForLoop",
                                "post": {
                                  "nodeType": "YulBlock",
                                  "src": "1418:19:80",
                                  "statements": [
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "1420:15:80",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "1429:1:80"
                                          },
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "1432:2:80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1425:3:80"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1425:10:80"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1420:1:80"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "pre": {
                                  "nodeType": "YulBlock",
                                  "src": "1400:3:80",
                                  "statements": []
                                },
                                "src": "1396:165:80"
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "1574:23:80",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "1585:3:80"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "1590:6:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1581:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1581:16:80"
                                },
                                "variableNames": [
                                  {
                                    "name": "ret",
                                    "nodeType": "YulIdentifier",
                                    "src": "1574:3:80"
                                  }
                                ]
                              }
                            ]
                          },
                          "nodeType": "YulCase",
                          "src": "1284:323:80",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1289:1:80",
                            "type": "",
                            "value": "1"
                          }
                        }
                      ],
                      "expression": {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1144:18:80"
                      },
                      "nodeType": "YulSwitch",
                      "src": "1137:470:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1616:10:80",
                      "value": {
                        "name": "ret",
                        "nodeType": "YulIdentifier",
                        "src": "1623:3:80"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "1616:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "642:3:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "647:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "658:3:80",
                    "type": ""
                  }
                ],
                "src": "528:1104:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1850:276:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1860:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1872:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1883:3:80",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1868:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1868:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1860:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1903:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1914:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1896:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1896:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1896:25:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1941:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1952:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1937:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1937:18:80"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1957:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1930:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1930:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1930:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1984:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1995:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1980:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1980:18:80"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "2000:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1973:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1973:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1973:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2027:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2038:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2023:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2023:18:80"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "2043:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2016:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2016:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2016:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2070:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2081:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2066:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2066:19:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value4",
                                "nodeType": "YulIdentifier",
                                "src": "2091:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2107:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2112:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2103:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2103:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2116:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2099:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2099:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2087:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2087:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2059:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2059:61:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2059:61:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1787:9:80",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "1798:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "1806:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1814:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1822:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1830:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1841:4:80",
                    "type": ""
                  }
                ],
                "src": "1637:489:80"
              }
            ]
          },
          "contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_bytes_storage_ptr(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := ret\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            let dataPos := array_dataslot_bytes_storage_ptr(value0)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n}",
          "id": 80,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5468726573686F6C64204E6574776F726B20546F6B656E000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x15 PUSH1 0xFA SHL DUP2 MSTORE POP PUSH3 0x7C PUSH3 0x76 PUSH3 0xC2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xC6 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x91 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1C7 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xA7 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1C7 JUMP JUMPDEST POP CHAINID PUSH1 0x80 MSTORE PUSH3 0xB6 PUSH3 0x116 JUMP JUMPDEST PUSH1 0xA0 MSTORE POP PUSH3 0x34E SWAP1 POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x5 PUSH1 0x40 MLOAD PUSH3 0x14A SWAP2 SWAP1 PUSH3 0x2AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1D5 SWAP1 PUSH3 0x26D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1F9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x244 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x214 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x244 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x244 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x244 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x227 JUMP JUMPDEST POP PUSH3 0x252 SWAP3 SWAP2 POP PUSH3 0x256 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x252 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x257 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x282 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2A4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH3 0x2C7 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH3 0x2E8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH3 0x2FF JUMPI PUSH1 0x1 DUP2 EQ PUSH3 0x311 JUMPI PUSH3 0x340 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH3 0x340 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH3 0x338 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH3 0x31D JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x25F5 PUSH3 0x382 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x3E1 ADD MSTORE PUSH2 0x6A1 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x34B ADD MSTORE PUSH2 0x678 ADD MSTORE PUSH2 0x25F5 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x1171BDA9 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x70AE92D2 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x771DA5C5 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xB20D7FA9 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xB4F94B2E EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xFC4E51F6 EQ PUSH2 0x4B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EF PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x1EF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2580 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x22D PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x674 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF1 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0A JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0A JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST PUSH2 0x2E9 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0A JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x852 JUMP JUMPDEST PUSH2 0x1EF PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x88D JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x923 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF1 JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x25A PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0A JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F3D JUMP JUMPDEST PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0x1EF PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x411 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FB6 JUMP JUMPDEST PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2540 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x47C PUSH2 0x477 CALLDATASIZE PUSH1 0x4 PUSH2 0x2129 JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x4B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0A JUMP JUMPDEST PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x4C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2160 JUMP JUMPDEST PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x4D9 SWAP1 PUSH2 0x21FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x505 SWAP1 PUSH2 0x21FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x552 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x527 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x552 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x535 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x567 CALLER DUP5 DUP5 PUSH2 0x1076 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0x579 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x1182 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x65C JUMPI DUP3 DUP2 LT ISZERO PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206578636565647320616C6C6F77616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x65C DUP6 CALLER PUSH2 0x657 DUP7 DUP6 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x667 DUP6 DUP6 DUP6 PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ ISZERO PUSH2 0x6C3 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x6CB PUSH2 0x13D4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x66D SWAP1 DUP4 PUSH2 0x1483 JUMP JUMPDEST CALLER PUSH2 0x6FB PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x4D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x77E PUSH1 0x0 DUP4 DUP4 PUSH2 0x157E JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x790 SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7BD SWAP1 DUP5 SWAP1 PUSH2 0x229B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2560 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x7FF CALLER DUP3 PUSH2 0x166A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x7FF CALLER DUP3 PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x84C SWAP1 PUSH2 0x17E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0x85B PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x2239 JUMP JUMPDEST PUSH2 0x88B PUSH1 0x0 PUSH2 0x1851 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x919 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E20616D6F756E74206578636565647320616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x919 DUP4 CALLER PUSH2 0x657 DUP6 DUP6 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x5BC DUP4 DUP4 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84C PUSH1 0x9 DUP4 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x4D9 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x9D3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x9CE SWAP1 PUSH2 0x992 PUSH1 0x1 DUP5 PUSH2 0x2284 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x9A2 JUMPI PUSH2 0x9A2 PUSH2 0x22B3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x10 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x567 CALLER DUP5 DUP5 PUSH2 0x11D4 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11195B1959D85D1A5BDB88195E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 GT ISZERO PUSH2 0xA64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x22C9 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0xA79 JUMPI POP DUP3 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0xA95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9F PUSH2 0x674 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2540 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP11 SWAP3 SWAP1 PUSH2 0xAD5 DUP4 PUSH2 0x2333 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB0C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB33 SWAP3 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xB70 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2369 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xBC8 JUMPI POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xBE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x2387 JUMP JUMPDEST PUSH2 0xBEE DUP9 DUP9 PUSH2 0x1746 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC04 DUP5 DUP5 PUSH2 0x55A JUMP JUMPDEST ISZERO PUSH2 0xC76 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8F4FFCB1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x8F4FFCB1 SWAP1 PUSH2 0xC3B SWAP1 CALLER SWAP1 DUP8 SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x23B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 POP PUSH2 0x66D JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xCC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14195C9B5A5CDCDA5BDB88195E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 GT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x22C9 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0xD10 JUMPI POP DUP3 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0xD2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD36 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2580 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP13 SWAP3 DUP13 SWAP3 DUP13 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xD72 DUP4 PUSH2 0x2333 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDD5 SWAP3 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xE12 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2369 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE6A JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x2387 JUMP JUMPDEST PUSH2 0xE91 DUP10 DUP10 DUP10 PUSH2 0x1076 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 PUSH2 0xF1D SWAP2 PUSH4 0xFFFFFFFF DUP8 AND SWAP1 DUP2 LT PUSH2 0xEE6 JUMPI PUSH2 0xEE6 PUSH2 0x22B3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x10 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH4 0xFFFFFFFF PUSH1 0x60 DUP3 SWAP1 SHR AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0xF51 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x7FF DUP2 PUSH2 0x1851 JUMP JUMPDEST CALLER PUSH2 0xFEE PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1014 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5C46A7EF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xB88D4FDE SWAP1 PUSH2 0x1048 SWAP1 ADDRESS SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x23EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1062 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417070726F76652066726F6D20746865207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1120 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x417070726F766520746F20746865207A65726F2061646472657373 PUSH1 0x28 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x5BC SWAP1 DUP5 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x122A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E736665722066726F6D20746865207A65726F20616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x127F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x5472616E7366657220746F20746865207A65726F2061646472657373 PUSH1 0x20 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ ISZERO PUSH2 0x12D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220746F2074686520746F6B656E2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x12E3 DUP4 DUP4 DUP4 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E7420657863656564732062616C616E636500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x1356 DUP3 DUP3 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x138C SWAP1 DUP5 SWAP1 PUSH2 0x229B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2560 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x13C6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x5 PUSH1 0x40 MLOAD PUSH2 0x1406 SWAP2 SWAP1 PUSH2 0x2443 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x14CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x109B1BD8DAC81B9BDD081E595D0819195D195C9B5A5B9959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1558 JUMPI PUSH1 0x0 PUSH2 0x14E8 DUP3 DUP5 PUSH2 0x1973 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x152B DUP8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1501 JUMPI PUSH2 0x1501 PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP3 DIV ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 SWAP1 SWAP3 AND PUSH1 0x10 MUL PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x60 SHR AND SWAP1 JUMP JUMPDEST SWAP1 POP DUP6 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1543 JUMPI DUP2 SWAP4 POP PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x154E DUP3 PUSH1 0x1 PUSH2 0x229B JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP PUSH2 0x14D4 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1572 JUMPI PUSH2 0x156D DUP6 PUSH2 0x992 PUSH1 0x1 DUP6 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1589 DUP3 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1618 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 PUSH2 0x15B0 SWAP1 DUP5 SWAP1 PUSH2 0x229B JUMP JUMPDEST GT ISZERO PUSH2 0x15FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D20746F74616C20737570706C79206578636565646564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x1615 PUSH1 0x9 PUSH2 0x19F6 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x1A02 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1640 JUMPI PUSH2 0x163D PUSH1 0x9 PUSH2 0x1B5E DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x1A02 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x1664 PUSH2 0x164C DUP6 PUSH2 0x802 JUMP JUMPDEST PUSH2 0x1655 DUP6 PUSH2 0x802 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x1B6A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x16D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x4275726E20616D6F756E7420657863656564732062616C616E6365 PUSH1 0x28 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x16DD DUP4 PUSH1 0x0 DUP5 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x16E7 DUP3 DUP3 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1715 SWAP1 DUP5 SWAP1 PUSH2 0x2284 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2560 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x1175 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1751 DUP4 PUSH2 0x802 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x1777 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP10 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP5 SWAP6 POP SWAP4 SWAP3 DUP7 AND SWAP3 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x1664 DUP3 DUP5 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x184D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x322062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F6 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C83 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x5BC JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1914 SWAP2 SWAP1 PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1982 PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x2501 JUMP JUMPDEST PUSH2 0x66D SWAP1 DUP5 DUP5 AND PUSH2 0x229B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 GT ISZERO PUSH2 0x184D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2039 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x362062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66D DUP3 DUP5 PUSH2 0x229B JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 ISZERO PUSH2 0x1A23 JUMPI PUSH2 0x1A1E DUP7 PUSH2 0x992 PUSH1 0x1 DUP5 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 POP PUSH2 0x1A3F DUP4 DUP6 DUP8 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 ISZERO PUSH2 0x1AFF JUMPI PUSH1 0x0 PUSH2 0x1A68 DUP8 PUSH2 0x1A58 PUSH1 0x1 DUP6 PUSH2 0x2284 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1501 JUMPI PUSH2 0x1501 PUSH2 0x22B3 JUMP JUMPDEST SWAP1 POP NUMBER DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1AFD JUMPI PUSH2 0x1AA1 DUP2 PUSH2 0x1A85 DUP6 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH4 0xFFFFFFFF PUSH1 0x60 SHL AND OR SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x1AAD PUSH1 0x1 DUP6 PUSH2 0x2284 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1ABD JUMPI PUSH2 0x1ABD PUSH2 0x22B3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x10 MUL PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x1B56 JUMP JUMPDEST POP JUMPDEST DUP6 PUSH2 0x1B15 PUSH2 0x1B0C NUMBER PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0x1A85 DUP6 PUSH2 0x198E JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 KECCAK256 PUSH1 0x2 DUP3 DIV ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 DUP5 AND PUSH1 0x10 SWAP4 SWAP1 SWAP6 AND SWAP3 SWAP1 SWAP3 MUL PUSH2 0x100 EXP SWAP4 DUP5 MUL SWAP3 SWAP1 SWAP4 MUL NOT AND OR SWAP1 SSTORE POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66D DUP3 DUP5 PUSH2 0x2284 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B8C JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x5BC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1C08 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1BC7 SWAP1 PUSH2 0x1B5E DUP6 PUSH2 0x1A02 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BFD SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1C3E SWAP1 PUSH2 0x19F6 DUP6 PUSH2 0x1A02 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C74 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C92 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1C9A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1CFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1D52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1D6E SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DAB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1DC0 DUP3 DUP3 DUP7 PUSH2 0x1DCB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1DDA JUMPI POP DUP2 PUSH2 0x66D JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1DEA JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E1F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E07 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1664 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1E48 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x66D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1EA2 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1ED0 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1EE0 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x66D DUP2 PUSH2 0x1E6F JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1F38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1F56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1F61 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1F71 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1F86 PUSH1 0x60 DUP9 ADD PUSH2 0x1F27 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1FD6 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1FF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x200D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x201F JUMPI PUSH2 0x201F PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2047 JUMPI PUSH2 0x2047 PUSH2 0x1FA0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x209D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x20A8 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x20B8 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x20D4 PUSH1 0x80 DUP10 ADD PUSH2 0x1F27 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x210E DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x211E DUP2 PUSH2 0x1E6F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x213C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2147 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x211E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2183 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2193 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x21B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x21D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x21EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2212 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2233 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2296 JUMPI PUSH2 0x2296 PUSH2 0x226E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x22AE JUMPI PUSH2 0x22AE PUSH2 0x226E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH27 0x496E76616C6964207369676E6174757265202773272076616C7565 PUSH1 0x28 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH27 0x496E76616C6964207369676E6174757265202776272076616C7565 PUSH1 0x28 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2347 JUMPI PUSH2 0x2347 PUSH2 0x226E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x23E5 SWAP1 DUP4 ADD DUP5 PUSH2 0x1E30 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x245F JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x247F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x2493 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x24A4 JUMPI PUSH2 0x24D1 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x24D1 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x24C9 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x24B0 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x251E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2535 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1E04 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID PUSH23 0x995FE87BE88484696CFD6792AEB71E0B61F81DFA3B641E GAS 0xDF STATICCALL CODESIZE LOG0 0xD3 0xB8 0xE2 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF PUSH15 0x71EDAE12B1B97F4D1F60370FEF1010 0x5F LOG2 STATICCALL 0xAE ADD 0x26 GT 0x4A AND SWAP13 PUSH5 0x845D6126C9 0xDE 0xC2 0xBA 0xCD 0xD2 CREATE JUMPDEST MSIZE 0xDE CALLVALUE 0xDA SWAP12 MSTORE RETURNDATASIZE SELFDESTRUCT DUP12 0xE4 0x2E 0x5E CODESIZE 0xE8 XOR 0xC8 0x2F 0xDB SIGNEXTEND 0xAE PUSH24 0x4387A724A2646970667358221220B9DA4B6D7C7329300271 EXP DUP11 0xE1 0x2E 0xD5 0xD0 0xB0 0xFB 0xE5 SDIV 0x29 SWAP11 CALLDATACOPY 0xFB 0xBD 0xB2 0xE2 SWAP13 0xAB PUSH11 0x8E1864736F6C6343000809 STOP CALLER ",
      "sourceMap": "1554:3715:76:-:0;;;1880:64;;;;;;;;;;2190:207:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2190:207:45;;;921:32:8;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;2256:12:45;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;2278:16:45;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;2321:13:45;2305:29;;2368:22;:20;:22::i;:::-;2344:46;;-1:-1:-1;1554:3715:76;;-1:-1:-1;1554:3715:76;640:96:34;719:10;;640:96::o;2270:187:8:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:8;;;-1:-1:-1;;;;;;2378:17:8;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;13008:488:45:-;13062:7;13159:141;13338:4;13322:22;;;;;;:::i;:::-;;;;;;;;;;13376:10;;;;;;;;-1:-1:-1;;;13376:10:45;;;;;13127:348;;;;;1896:25:80;;;;1937:18;;1930:34;;;;13366:21:45;1980:18:80;;;1973:34;13409:13:45;2023:18:80;;;2016:34;13452:4:45;2066:19:80;;;2059:61;1868:19;;13127:348:45;;;;;;;;;;;;13100:389;;;;;;13081:408;;13008:488;:::o;1554:3715:76:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1554:3715:76;;;-1:-1:-1;1554:3715:76;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:80;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;528:1104::-;658:3;687:1;720:6;714:13;750:3;772:1;800:9;796:2;792:18;782:28;;860:2;849:9;845:18;882;872:61;;926:4;918:6;914:17;904:27;;872:61;952:2;1000;992:6;989:14;969:18;966:38;963:165;;;-1:-1:-1;;;1027:33:80;;1083:4;1080:1;1073:15;1113:4;1034:3;1101:17;963:165;1144:18;1171:104;;;;1289:1;1284:323;;;;1137:470;;1171:104;-1:-1:-1;;1204:24:80;;1192:37;;1249:16;;;;-1:-1:-1;1171:104:80;;1284:323;475:1;468:14;;;512:4;499:18;;1382:1;1396:165;1410:6;1407:1;1404:13;1396:165;;;1488:14;;1475:11;;;1468:35;1531:16;;;;1425:10;;1396:165;;;1400:3;;1590:6;1585:3;1581:16;1574:23;;1137:470;-1:-1:-1;1623:3:80;;528:1104;-1:-1:-1;;;;;;;;528:1104:80:o;1637:489::-;1554:3715:76;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@DELEGATION_TYPEHASH_18226": {
          "entryPoint": null,
          "id": 18226,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@DOMAIN_SEPARATOR_9415": {
          "entryPoint": 1652,
          "id": 9415,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@PERMIT_TYPEHASH_9001": {
          "entryPoint": null,
          "id": 9001,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_approve_9600": {
          "entryPoint": 4214,
          "id": 9600,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "@_burn_9477": {
          "entryPoint": 5738,
          "id": 9477,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_callOptionalReturn_6897": {
          "entryPoint": 6305,
          "id": 6897,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_msgSender_7321": {
          "entryPoint": null,
          "id": 7321,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_transferOwnership_1585": {
          "entryPoint": 6225,
          "id": 1585,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_transfer_9556": {
          "entryPoint": 4564,
          "id": 9556,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "@add_10667": {
          "entryPoint": 6646,
          "id": 10667,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@allowance_8984": {
          "entryPoint": null,
          "id": 8984,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@approveAndCall_9374": {
          "entryPoint": 3064,
          "id": 9374,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@approve_9395": {
          "entryPoint": 1370,
          "id": 9395,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@average_680": {
          "entryPoint": 6515,
          "id": 680,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@balanceOf_8976": {
          "entryPoint": null,
          "id": 8976,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@beforeTokenTransfer_18410": {
          "entryPoint": 5502,
          "id": 18410,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "@buildDomainSeparator_9633": {
          "entryPoint": 5076,
          "id": 9633,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@burnFrom_9336": {
          "entryPoint": 2189,
          "id": 9336,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@burn_9287": {
          "entryPoint": 2037,
          "id": 9287,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@cachedChainId_8992": {
          "entryPoint": null,
          "id": 8992,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@cachedDomainSeparator_8994": {
          "entryPoint": null,
          "id": 8994,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@checkpoints_10201": {
          "entryPoint": 3740,
          "id": 10201,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@decimals_9018": {
          "entryPoint": null,
          "id": 9018,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@decodeBlockNumber_10616": {
          "entryPoint": null,
          "id": 10616,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@decodeCheckpoint_10653": {
          "entryPoint": null,
          "id": 10653,
          "parameterSlots": 1,
          "returnSlots": 2
        },
        "@decodeValue_10630": {
          "entryPoint": null,
          "id": 10630,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@delegateBySig_18331": {
          "entryPoint": 2537,
          "id": 18331,
          "parameterSlots": 6,
          "returnSlots": 0
        },
        "@delegate_18344": {
          "entryPoint": 2080,
          "id": 18344,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@delegate_18452": {
          "entryPoint": 5958,
          "id": 18452,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@delegates_10231": {
          "entryPoint": 2050,
          "id": 10231,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@encodeCheckpoint_10596": {
          "entryPoint": null,
          "id": 10596,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@functionCallWithValue_7173": {
          "entryPoint": 7322,
          "id": 7173,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@functionCall_7103": {
          "entryPoint": 7299,
          "id": 7103,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@getPastTotalSupply_10294": {
          "entryPoint": 2354,
          "id": 10294,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getPastVotes_10280": {
          "entryPoint": 1744,
          "id": 10280,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@getVotes_10262": {
          "entryPoint": 2380,
          "id": 10262,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@isContract_7032": {
          "entryPoint": null,
          "id": 7032,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@lookupCheckpoint_10559": {
          "entryPoint": 5251,
          "id": 10559,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@maxSupply_10572": {
          "entryPoint": null,
          "id": 10572,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@mint_9273": {
          "entryPoint": 1778,
          "id": 9273,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@moveVotingPower_10374": {
          "entryPoint": 7018,
          "id": 10374,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "@name_9009": {
          "entryPoint": 1228,
          "id": 9009,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@nonce_8990": {
          "entryPoint": null,
          "id": 8990,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@numCheckpoints_10218": {
          "entryPoint": 2090,
          "id": 10218,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@owner_1514": {
          "entryPoint": 2339,
          "id": 1514,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@permit_9224": {
          "entryPoint": 3200,
          "id": 9224,
          "parameterSlots": 7,
          "returnSlots": 0
        },
        "@recoverERC20_9764": {
          "entryPoint": 1392,
          "id": 9764,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "@recoverERC721_9791": {
          "entryPoint": 4069,
          "id": 9791,
          "parameterSlots": 5,
          "returnSlots": 0
        },
        "@renounceOwnership_1542": {
          "entryPoint": 2130,
          "id": 1542,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@safeTransfer_6705": {
          "entryPoint": 4482,
          "id": 6705,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "@subtract_10681": {
          "entryPoint": 7006,
          "id": 10681,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@symbol_9013": {
          "entryPoint": 2367,
          "id": 9013,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@toUint32_834": {
          "entryPoint": 6120,
          "id": 834,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@toUint96_784": {
          "entryPoint": null,
          "id": 784,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@toUint96_8645": {
          "entryPoint": 6542,
          "id": 8645,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@totalSupply_9005": {
          "entryPoint": null,
          "id": 9005,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@transferFrom_9121": {
          "entryPoint": 1473,
          "id": 9121,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@transferOwnership_1565": {
          "entryPoint": 3912,
          "id": 1565,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@transfer_9065": {
          "entryPoint": 2524,
          "id": 9065,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@verifyCallResult_7308": {
          "entryPoint": 7627,
          "id": 7308,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@writeCheckpoint_10480": {
          "entryPoint": 6658,
          "id": 10480,
          "parameterSlots": 3,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_address": {
          "entryPoint": 7946,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_addresst_address": {
          "entryPoint": 8432,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_addresst_addresst_uint256": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
          "entryPoint": 8322,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 7
        },
        "abi_decode_tuple_t_addresst_addresst_uint256t_uint8t_bytes32t_bytes32": {
          "entryPoint": 7997,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 6
        },
        "abi_decode_tuple_t_addresst_uint256": {
          "entryPoint": 7812,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr": {
          "entryPoint": 8118,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_decode_tuple_t_addresst_uint32": {
          "entryPoint": 8489,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_bool_fromMemory": {
          "entryPoint": 9439,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_contract$_IERC20_$5807t_addresst_uint256": {
          "entryPoint": 7856,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_decode_tuple_t_contract$_IERC721_$7014t_addresst_uint256t_bytes_calldata_ptr": {
          "entryPoint": 8544,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 5
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 7921,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_uint8": {
          "entryPoint": 7975,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_string": {
          "entryPoint": 7728,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 9507,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 9283,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 9038,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
          "entryPoint": 9199,
          "id": null,
          "parameterSlots": 6,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_uint256_t_address_t_bytes_memory_ptr__to_t_address_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed": {
          "entryPoint": 9138,
          "id": null,
          "parameterSlots": 5,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 7,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 5,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 6,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
          "entryPoint": 9065,
          "id": null,
          "parameterSlots": 5,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 7772,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_1a6e9fec9992f38aafac16fbda1f1e60c1a6ea2ee29033877fd4d4ee56ae0b98__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_39ee8e918a13a65f8035b763663940a12c57278addad36e689cdb6b64cb0b7e0__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 8958,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_4ddfa1e354bbbffc262e7631ee50acbf921856723264c01e84c45dc99b8c22de__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 9095,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_5f40ec20695f4374141f486d0b1634cea66e2bbc588f6505853f4a569fe344ed__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_827fd26495b73720fe626df539d00c1be5968dac54591ff1406e783ed48f1d84__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_83ee8eb1a9e77ac94f36a510fd8a146111d4889defed5bbb86a497f742fd412b__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_8b189f21d1893cc7b623479ef5c70d8b66a358ee6faf2498c3a0015a8b6f8d54__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9549091f8ab6d1d0d20b644d47ba65c78b1ebfbbba15f6830e552b4c06c36251__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 8761,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_cabd043e27e35c3e395c87a9e81534dfb3a0dd1c8242131ac8a1276fa1903734__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_d056cfab7e1a9ec280a7e3c58615996403225d9d9d57bc53a0e2a0d76f81c25a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_da5e941e0c0e9f5d2dd9c50d0d536bb3473df23a86b3758f7761ac079606810b__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 8905,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_dfc0ec7f03e5010fc5e60d5e839b5983d0c776856dba6d5f0635b73a9b29e587__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_f0ce1be0f42288523d6bdd45a6d07b8d2b08d1f5986a347b5e5c14064be46e9c__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_f9de4d0ce612773dd0c42774a83ce5880e91b70a52fec77e27b8f7380e8e6f76__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_struct$_Checkpoint_$10137_memory_ptr__to_t_struct$_Checkpoint_$10137_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "array_dataslot_bytes_storage_ptr": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "checked_add_t_uint256": {
          "entryPoint": 8859,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_div_t_uint256": {
          "entryPoint": 9473,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_sub_t_uint256": {
          "entryPoint": 8836,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "copy_memory_to_memory": {
          "entryPoint": 7684,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "extract_byte_array_length": {
          "entryPoint": 8702,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "increment_t_uint256": {
          "entryPoint": 9011,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "panic_error_0x11": {
          "entryPoint": 8814,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x32": {
          "entryPoint": 8883,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x41": {
          "entryPoint": 8096,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "validator_revert_address": {
          "entryPoint": 7791,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:24820:80",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:80",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "67:205:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "77:10:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "86:1:80",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "81:1:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "146:63:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "171:3:80"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "176:1:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "167:11:80"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "190:3:80"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "195:1:80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "186:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "186:11:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "180:5:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "180:18:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "160:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "160:39:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "160:39:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "107:1:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "110:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "104:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "104:13:80"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "118:19:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "120:15:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "129:1:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "132:2:80",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "125:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "125:10:80"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "120:1:80"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "100:3:80",
                        "statements": []
                      },
                      "src": "96:113:80"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "235:31:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "248:3:80"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "253:6:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "244:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "244:16:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "262:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "237:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "237:27:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "237:27:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "224:1:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "227:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "221:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "221:13:80"
                      },
                      "nodeType": "YulIf",
                      "src": "218:48:80"
                    }
                  ]
                },
                "name": "copy_memory_to_memory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "45:3:80",
                    "type": ""
                  },
                  {
                    "name": "dst",
                    "nodeType": "YulTypedName",
                    "src": "50:3:80",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "55:6:80",
                    "type": ""
                  }
                ],
                "src": "14:258:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "327:208:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "337:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "357:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "351:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "351:12:80"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "341:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "379:3:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "384:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "372:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "372:19:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "372:19:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "426:5:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "433:4:80",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "422:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "422:16:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "444:3:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "449:4:80",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "440:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "440:14:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "456:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "400:21:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "400:63:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "400:63:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "472:57:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "487:3:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "500:6:80"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "508:2:80",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "496:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "496:15:80"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "517:2:80",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "513:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "513:7:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "492:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "492:29:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "483:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "483:39:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "524:4:80",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "479:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "479:50:80"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "472:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_string",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "304:5:80",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "311:3:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "319:3:80",
                    "type": ""
                  }
                ],
                "src": "277:258:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "661:99:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "678:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "689:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "671:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "671:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "671:21:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "701:53:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "727:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "739:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "750:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "735:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "735:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_string",
                          "nodeType": "YulIdentifier",
                          "src": "709:17:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "709:45:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "701:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "630:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "641:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "652:4:80",
                    "type": ""
                  }
                ],
                "src": "540:220:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "810:86:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "874:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "883:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "886:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "876:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "876:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "876:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "833:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "844:5:80"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "859:3:80",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "864:1:80",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "855:3:80"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "855:11:80"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "868:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "851:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "851:19:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "840:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "840:31:80"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "830:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "830:42:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "823:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "823:50:80"
                      },
                      "nodeType": "YulIf",
                      "src": "820:70:80"
                    }
                  ]
                },
                "name": "validator_revert_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "799:5:80",
                    "type": ""
                  }
                ],
                "src": "765:131:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "988:228:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1034:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1043:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1046:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1036:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1036:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1036:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1009:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1018:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1005:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1005:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1030:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1001:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1001:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "998:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1059:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1085:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1072:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1072:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "1063:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1129:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "1104:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1104:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1104:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1144:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1154:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1144:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1168:42:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1195:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1206:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1191:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1191:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1178:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1178:32:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1168:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "946:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "957:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "969:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "977:6:80",
                    "type": ""
                  }
                ],
                "src": "901:315:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1316:92:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1326:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1338:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1349:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1334:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1334:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1326:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1368:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1393:6:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1386:6:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1386:14:80"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1379:6:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1379:22:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1361:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1361:41:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1361:41:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1285:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1296:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1307:4:80",
                    "type": ""
                  }
                ],
                "src": "1221:187:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1532:352:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1578:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1587:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1590:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1580:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1580:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1580:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1553:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1562:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1549:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1549:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1574:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1545:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1545:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "1542:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1603:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1629:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1616:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1616:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "1607:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1673:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "1648:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1648:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1648:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1688:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1698:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1688:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1712:47:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1744:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1755:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1740:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1740:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1727:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1727:32:80"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "1716:7:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "1793:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "1768:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1768:33:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1768:33:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1810:17:80",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1820:7:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1810:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1836:42:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1863:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1874:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1859:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1859:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1846:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1846:32:80"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1836:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_contract$_IERC20_$5807t_addresst_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1482:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1493:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1505:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1513:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1521:6:80",
                    "type": ""
                  }
                ],
                "src": "1413:471:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1990:76:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2000:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2012:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2023:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2008:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2008:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2000:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2042:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2053:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2035:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2035:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2035:25:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1959:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1970:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1981:4:80",
                    "type": ""
                  }
                ],
                "src": "1889:177:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2175:352:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2221:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2230:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2233:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2223:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2223:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2223:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2196:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2205:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2192:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2192:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2217:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2188:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2188:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "2185:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2246:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2272:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2259:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2259:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "2250:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2316:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "2291:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2291:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2291:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2331:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2341:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2331:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2355:47:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2387:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2398:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2383:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2383:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2370:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2370:32:80"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "2359:7:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "2436:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "2411:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2411:33:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2411:33:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2453:17:80",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2463:7:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2453:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2479:42:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2506:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2517:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2502:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2502:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2489:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2489:32:80"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2479:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2125:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2136:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2148:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2156:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "2164:6:80",
                    "type": ""
                  }
                ],
                "src": "2071:456:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2633:76:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2643:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2655:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2666:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2651:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2651:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2643:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2685:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2696:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2678:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2678:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2678:25:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2602:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2613:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2624:4:80",
                    "type": ""
                  }
                ],
                "src": "2532:177:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2811:87:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2821:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2833:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2844:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2829:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2829:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2821:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2863:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2878:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2886:4:80",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2874:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2874:17:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2856:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2856:36:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2856:36:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2780:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2791:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2802:4:80",
                    "type": ""
                  }
                ],
                "src": "2714:184:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3002:101:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3012:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3024:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3035:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3020:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3020:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3012:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3054:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3069:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3085:2:80",
                                        "type": "",
                                        "value": "96"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3089:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3081:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3081:10:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3093:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3077:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3077:18:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3065:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3065:31:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3047:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3047:50:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3047:50:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2971:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2982:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2993:4:80",
                    "type": ""
                  }
                ],
                "src": "2903:200:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3178:110:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3224:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3233:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3236:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3226:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3226:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3226:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3199:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3208:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3195:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3195:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3220:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3191:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3191:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "3188:52:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3249:33:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3272:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3259:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3259:23:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3249:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3144:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3155:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3167:6:80",
                    "type": ""
                  }
                ],
                "src": "3108:180:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3363:177:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3409:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3418:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3421:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3411:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3411:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3411:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3384:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3393:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3380:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3380:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3405:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3376:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3376:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "3373:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3434:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3460:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3447:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3447:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "3438:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3504:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "3479:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3479:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3479:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3519:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3529:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3519:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3329:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3340:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3352:6:80",
                    "type": ""
                  }
                ],
                "src": "3293:247:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3646:102:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3656:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3668:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3679:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3664:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3664:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3656:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3698:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3713:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3729:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3734:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3725:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3725:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3738:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3721:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3721:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3709:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3709:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3691:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3691:51:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3691:51:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3615:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3626:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3637:4:80",
                    "type": ""
                  }
                ],
                "src": "3545:203:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3852:93:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3862:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3874:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3885:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3870:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3870:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3862:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3904:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3919:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3927:10:80",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3915:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3915:23:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3897:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3897:42:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3897:42:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3821:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3832:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3843:4:80",
                    "type": ""
                  }
                ],
                "src": "3753:192:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3997:109:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4007:29:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4029:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4016:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4016:20:80"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "4007:5:80"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4084:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4093:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4096:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4086:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4086:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4086:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4058:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4069:5:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4076:4:80",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4065:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4065:16:80"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "4055:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4055:27:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4048:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4048:35:80"
                      },
                      "nodeType": "YulIf",
                      "src": "4045:55:80"
                    }
                  ]
                },
                "name": "abi_decode_uint8",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "3976:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "3987:5:80",
                    "type": ""
                  }
                ],
                "src": "3950:156:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4264:512:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4311:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4320:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4323:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4313:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4313:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4313:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "4285:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4294:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4281:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4281:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4306:3:80",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "4277:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4277:33:80"
                      },
                      "nodeType": "YulIf",
                      "src": "4274:53:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4336:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4362:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4349:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4349:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "4340:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4406:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "4381:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4381:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4381:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4421:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4431:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4421:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4445:47:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4477:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4488:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4473:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4473:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4460:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4460:32:80"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "4449:7:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "4526:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "4501:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4501:33:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4501:33:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4543:17:80",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4553:7:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4543:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4569:42:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4596:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4607:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4592:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4592:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4579:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4579:32:80"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4569:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4620:46:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4651:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4662:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4647:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4647:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "4630:16:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4630:36:80"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "4620:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4675:43:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4702:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4713:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4698:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4698:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4685:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4685:33:80"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "4675:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4727:43:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4754:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4765:3:80",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4750:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4750:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4737:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4737:33:80"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "4727:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint8t_bytes32t_bytes32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4190:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "4201:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4213:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4221:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "4229:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "4237:6:80",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "4245:6:80",
                    "type": ""
                  },
                  {
                    "name": "value5",
                    "nodeType": "YulTypedName",
                    "src": "4253:6:80",
                    "type": ""
                  }
                ],
                "src": "4111:665:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4813:95:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4830:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4837:3:80",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4842:10:80",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4833:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4833:20:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4823:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4823:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4823:31:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4870:1:80",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4873:4:80",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4863:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4863:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4863:15:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4894:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4897:4:80",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "4887:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4887:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4887:15:80"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "4781:127:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5026:1011:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5072:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5081:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5084:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5074:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5074:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5074:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "5047:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5056:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5043:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5043:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5068:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "5039:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5039:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "5036:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5097:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5123:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5110:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5110:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "5101:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5167:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "5142:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5142:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5142:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5182:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5192:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5182:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5206:42:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5233:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5244:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5229:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5229:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5216:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5216:32:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5206:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5257:46:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5288:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5299:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5284:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5284:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5271:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5271:32:80"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5261:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5312:28:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5330:2:80",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5334:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5326:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5326:10:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5338:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5322:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5322:18:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "5316:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5367:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5376:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5379:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5369:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5369:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5369:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5355:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5363:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5352:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5352:14:80"
                      },
                      "nodeType": "YulIf",
                      "src": "5349:34:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5392:32:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5406:9:80"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5417:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5402:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5402:22:80"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "5396:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5472:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5481:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5484:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5474:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5474:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5474:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5451:2:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5455:4:80",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5447:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5447:13:80"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "5462:7:80"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "5443:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5443:27:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5436:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5436:35:80"
                      },
                      "nodeType": "YulIf",
                      "src": "5433:55:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5497:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "5520:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5507:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5507:16:80"
                      },
                      "variables": [
                        {
                          "name": "_3",
                          "nodeType": "YulTypedName",
                          "src": "5501:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5546:22:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "5548:16:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5548:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5548:18:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "5538:2:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5542:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5535:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5535:10:80"
                      },
                      "nodeType": "YulIf",
                      "src": "5532:36:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5577:17:80",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5591:2:80",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5587:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5587:7:80"
                      },
                      "variables": [
                        {
                          "name": "_4",
                          "nodeType": "YulTypedName",
                          "src": "5581:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5603:23:80",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5623:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5617:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5617:9:80"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "5607:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5635:71:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5657:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "5681:2:80"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5685:4:80",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5677:3:80"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5677:13:80"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "5692:2:80"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5673:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5673:22:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5697:2:80",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5669:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5669:31:80"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "5702:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5665:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5665:40:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5653:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5653:53:80"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "5639:10:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5765:22:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "5767:16:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5767:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5767:18:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "5724:10:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "5736:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "5721:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5721:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "5744:10:80"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "5756:6:80"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "5741:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5741:22:80"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "5718:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5718:46:80"
                      },
                      "nodeType": "YulIf",
                      "src": "5715:72:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5803:2:80",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5807:10:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5796:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5796:22:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5796:22:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5834:6:80"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "5842:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5827:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5827:18:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5827:18:80"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5891:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5900:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5903:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5893:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5893:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5893:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5868:2:80"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5872:2:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5864:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5864:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5877:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5860:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5860:20:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5882:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5857:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5857:33:80"
                      },
                      "nodeType": "YulIf",
                      "src": "5854:53:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "5933:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5941:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5929:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5929:15:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "5950:2:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5954:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5946:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5946:11:80"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "5959:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "5916:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5916:46:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5916:46:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5986:6:80"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5994:2:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5982:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5982:15:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5999:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5978:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5978:24:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6004:1:80",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5971:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5971:35:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5971:35:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6015:16:80",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6025:6:80"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "6015:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4976:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "4987:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4999:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "5007:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "5015:6:80",
                    "type": ""
                  }
                ],
                "src": "4913:1124:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6212:564:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6259:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6268:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6271:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6261:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6261:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6261:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6233:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6242:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6229:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6229:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6254:3:80",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "6225:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6225:33:80"
                      },
                      "nodeType": "YulIf",
                      "src": "6222:53:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6284:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6310:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6297:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6297:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "6288:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6354:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "6329:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6329:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6329:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6369:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6379:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6369:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6393:47:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6425:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6436:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6421:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6421:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6408:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6408:32:80"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "6397:7:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "6474:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "6449:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6449:33:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6449:33:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6491:17:80",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "6501:7:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6491:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6517:42:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6544:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6555:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6540:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6540:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6527:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6527:32:80"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "6517:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6568:42:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6595:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6606:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6591:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6591:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6578:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6578:32:80"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "6568:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6619:47:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6650:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6661:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6646:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6646:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "6629:16:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6629:37:80"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "6619:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6675:43:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6702:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6713:3:80",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6698:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6698:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6685:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6685:33:80"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "6675:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6727:43:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6754:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6765:3:80",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6750:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6750:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6737:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6737:33:80"
                      },
                      "variableNames": [
                        {
                          "name": "value6",
                          "nodeType": "YulIdentifier",
                          "src": "6727:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6130:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "6141:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6153:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "6161:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "6169:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "6177:6:80",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "6185:6:80",
                    "type": ""
                  },
                  {
                    "name": "value5",
                    "nodeType": "YulTypedName",
                    "src": "6193:6:80",
                    "type": ""
                  },
                  {
                    "name": "value6",
                    "nodeType": "YulTypedName",
                    "src": "6201:6:80",
                    "type": ""
                  }
                ],
                "src": "6042:734:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6868:301:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6914:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6923:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6926:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6916:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6916:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6916:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6889:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6898:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6885:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6885:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6910:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "6881:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6881:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "6878:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6939:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6965:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6952:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6952:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "6943:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7009:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "6984:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6984:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6984:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7024:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7034:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7024:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7048:47:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7080:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7091:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7076:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7076:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7063:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7063:32:80"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "7052:7:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "7129:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "7104:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7104:33:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7104:33:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7146:17:80",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "7156:7:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7146:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6826:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "6837:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6849:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "6857:6:80",
                    "type": ""
                  }
                ],
                "src": "6781:388:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7260:333:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7306:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7315:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7318:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "7308:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7308:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7308:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "7281:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7290:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7277:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7277:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7302:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "7273:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7273:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "7270:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7331:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7357:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7344:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7344:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "7335:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7401:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "7376:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7376:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7376:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7416:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7426:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7416:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7440:47:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7472:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7483:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7468:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7468:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7455:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7455:32:80"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "7444:7:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7545:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7554:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7557:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "7547:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7547:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7547:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "7509:7:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7522:7:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7531:10:80",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "7518:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7518:24:80"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "7506:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7506:37:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7499:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7499:45:80"
                      },
                      "nodeType": "YulIf",
                      "src": "7496:65:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7570:17:80",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "7580:7:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7570:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_uint32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7218:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "7229:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7241:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "7249:6:80",
                    "type": ""
                  }
                ],
                "src": "7174:419:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7757:188:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "7767:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7779:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7790:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7775:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7775:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7767:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7809:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7830:6:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7824:5:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7824:13:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7839:10:80",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7820:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7820:30:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7802:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7802:49:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7802:49:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7871:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7882:4:80",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7867:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7867:20:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7903:6:80"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7911:4:80",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7899:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7899:17:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7893:5:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7893:24:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7927:2:80",
                                        "type": "",
                                        "value": "96"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7931:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "7923:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7923:10:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7935:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "7919:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7919:18:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7889:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7889:49:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7860:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7860:79:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7860:79:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_struct$_Checkpoint_$10137_memory_ptr__to_t_struct$_Checkpoint_$10137_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7726:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7737:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7748:4:80",
                    "type": ""
                  }
                ],
                "src": "7598:347:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8106:796:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8153:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8162:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8165:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8155:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8155:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8155:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "8127:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8136:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8123:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8123:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8148:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8119:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8119:33:80"
                      },
                      "nodeType": "YulIf",
                      "src": "8116:53:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8178:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8204:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8191:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8191:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "8182:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8248:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "8223:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8223:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8223:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8263:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8273:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8263:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8287:47:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8319:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8330:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8315:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8315:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8302:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8302:32:80"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "8291:7:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "8368:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "8343:24:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8343:33:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8343:33:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8385:17:80",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "8395:7:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "8385:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8411:42:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8438:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8449:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8434:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8434:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8421:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8421:32:80"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "8411:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8462:46:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8493:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8504:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8489:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8489:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8476:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8476:32:80"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8466:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8517:28:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8535:2:80",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8539:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "8531:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8531:10:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8543:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8527:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8527:18:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "8521:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8572:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8581:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8584:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8574:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8574:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8574:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "8560:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8568:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8557:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8557:14:80"
                      },
                      "nodeType": "YulIf",
                      "src": "8554:34:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8597:32:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8611:9:80"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "8622:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8607:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8607:22:80"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "8601:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8677:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8686:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8689:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8679:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8679:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8679:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8656:2:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8660:4:80",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8652:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8652:13:80"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "8667:7:80"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "8648:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8648:27:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8641:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8641:35:80"
                      },
                      "nodeType": "YulIf",
                      "src": "8638:55:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8702:30:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "8729:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8716:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8716:16:80"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "8706:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8759:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8768:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8771:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8761:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8761:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8761:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8747:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8755:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8744:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8744:14:80"
                      },
                      "nodeType": "YulIf",
                      "src": "8741:34:80"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8825:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8834:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8837:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8827:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8827:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8827:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8798:2:80"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8802:6:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8794:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8794:15:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8811:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8790:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8790:24:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8816:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8787:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8787:37:80"
                      },
                      "nodeType": "YulIf",
                      "src": "8784:57:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8850:21:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "8864:2:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8868:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8860:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8860:11:80"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "8850:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8880:16:80",
                      "value": {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8890:6:80"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "8880:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_contract$_IERC721_$7014t_addresst_uint256t_bytes_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8040:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "8051:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "8063:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "8071:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "8079:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "8087:6:80",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "8095:6:80",
                    "type": ""
                  }
                ],
                "src": "7950:952:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8962:325:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "8972:22:80",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8986:1:80",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "8989:4:80"
                          }
                        ],
                        "functionName": {
                          "name": "shr",
                          "nodeType": "YulIdentifier",
                          "src": "8982:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8982:12:80"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "8972:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9003:38:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "9033:4:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9039:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9029:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9029:12:80"
                      },
                      "variables": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulTypedName",
                          "src": "9007:18:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9080:31:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "9082:27:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "9096:6:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9104:4:80",
                                  "type": "",
                                  "value": "0x7f"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "9092:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9092:17:80"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "9082:6:80"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "9060:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9053:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9053:26:80"
                      },
                      "nodeType": "YulIf",
                      "src": "9050:61:80"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9170:111:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9191:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9198:3:80",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9203:10:80",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "9194:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9194:20:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "9184:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9184:31:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9184:31:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9235:1:80",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9238:4:80",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "9228:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9228:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9228:15:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9263:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9266:4:80",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "9256:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9256:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9256:15:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "9126:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "9149:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9157:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "9146:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9146:14:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9123:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9123:38:80"
                      },
                      "nodeType": "YulIf",
                      "src": "9120:161:80"
                    }
                  ]
                },
                "name": "extract_byte_array_length",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "8942:4:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "8951:6:80",
                    "type": ""
                  }
                ],
                "src": "8907:380:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9466:182:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9483:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9494:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9476:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9476:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9476:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9517:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9528:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9513:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9513:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9533:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9506:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9506:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9506:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9556:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9567:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9552:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9552:18:80"
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9572:34:80",
                            "type": "",
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9545:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9545:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9545:62:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9616:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9628:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9639:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9624:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9624:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "9616:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9443:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "9457:4:80",
                    "type": ""
                  }
                ],
                "src": "9292:356:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9827:223:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9844:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9855:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9837:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9837:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9837:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9878:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9889:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9874:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9874:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9894:2:80",
                            "type": "",
                            "value": "33"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9867:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9867:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9867:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9917:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9928:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9913:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9913:18:80"
                          },
                          {
                            "hexValue": "5472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9933:34:80",
                            "type": "",
                            "value": "Transfer amount exceeds allowanc"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9906:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9906:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9906:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9988:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9999:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9984:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9984:18:80"
                          },
                          {
                            "hexValue": "65",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10004:3:80",
                            "type": "",
                            "value": "e"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9977:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9977:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9977:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10017:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10029:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10040:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10025:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10025:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "10017:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9804:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "9818:4:80",
                    "type": ""
                  }
                ],
                "src": "9653:397:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10087:95:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10104:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10111:3:80",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10116:10:80",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "10107:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10107:20:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10097:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10097:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10097:31:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10144:1:80",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10147:4:80",
                            "type": "",
                            "value": "0x11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10137:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10137:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10137:15:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10168:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10171:4:80",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "10161:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10161:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10161:15:80"
                    }
                  ]
                },
                "name": "panic_error_0x11",
                "nodeType": "YulFunctionDefinition",
                "src": "10055:127:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10236:76:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10258:22:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "10260:16:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10260:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10260:18:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "10252:1:80"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10255:1:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "10249:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10249:8:80"
                      },
                      "nodeType": "YulIf",
                      "src": "10246:34:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10289:17:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "10301:1:80"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10304:1:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10297:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10297:9:80"
                      },
                      "variableNames": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "10289:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_sub_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "10218:1:80",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "10221:1:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "diff",
                    "nodeType": "YulTypedName",
                    "src": "10227:4:80",
                    "type": ""
                  }
                ],
                "src": "10187:125:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10491:174:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10508:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10519:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10501:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10501:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10501:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10542:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10553:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10538:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10538:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10558:2:80",
                            "type": "",
                            "value": "24"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10531:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10531:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10531:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10581:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10592:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10577:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10577:18:80"
                          },
                          {
                            "hexValue": "4d696e7420746f20746865207a65726f2061646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10597:26:80",
                            "type": "",
                            "value": "Mint to the zero address"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10570:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10570:54:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10570:54:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10633:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10645:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10656:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10641:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10641:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "10633:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_dfc0ec7f03e5010fc5e60d5e839b5983d0c776856dba6d5f0635b73a9b29e587__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "10468:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "10482:4:80",
                    "type": ""
                  }
                ],
                "src": "10317:348:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10718:80:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10745:22:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "10747:16:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10747:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10747:18:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "10734:1:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "10741:1:80"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "10737:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10737:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10731:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10731:13:80"
                      },
                      "nodeType": "YulIf",
                      "src": "10728:39:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10776:16:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "10787:1:80"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10790:1:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10783:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10783:9:80"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "10776:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_add_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "10701:1:80",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "10704:1:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "10710:3:80",
                    "type": ""
                  }
                ],
                "src": "10670:128:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10977:179:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10994:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11005:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10987:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10987:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10987:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11028:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11039:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11024:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11024:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11044:2:80",
                            "type": "",
                            "value": "29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11017:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11017:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11017:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11067:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11078:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11063:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11063:18:80"
                          },
                          {
                            "hexValue": "4275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11083:31:80",
                            "type": "",
                            "value": "Burn amount exceeds allowance"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11056:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11056:59:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11056:59:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11124:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11136:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11147:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11132:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11132:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "11124:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "10954:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "10968:4:80",
                    "type": ""
                  }
                ],
                "src": "10803:353:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11193:95:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11210:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11217:3:80",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11222:10:80",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "11213:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11213:20:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11203:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11203:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11203:31:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11250:1:80",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11253:4:80",
                            "type": "",
                            "value": "0x32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11243:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11243:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11243:15:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11274:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11277:4:80",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "11267:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11267:15:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11267:15:80"
                    }
                  ]
                },
                "name": "panic_error_0x32",
                "nodeType": "YulFunctionDefinition",
                "src": "11161:127:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11467:168:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11484:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11495:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11477:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11477:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11477:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11518:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11529:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11514:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11514:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11534:2:80",
                            "type": "",
                            "value": "18"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11507:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11507:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11507:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11557:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11568:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11553:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11553:18:80"
                          },
                          {
                            "hexValue": "44656c65676174696f6e2065787069726564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11573:20:80",
                            "type": "",
                            "value": "Delegation expired"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11546:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11546:48:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11546:48:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11603:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11615:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11626:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11611:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11611:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "11603:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_827fd26495b73720fe626df539d00c1be5968dac54591ff1406e783ed48f1d84__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "11444:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "11458:4:80",
                    "type": ""
                  }
                ],
                "src": "11293:342:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11814:177:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11831:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11842:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11824:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11824:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11824:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11865:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11876:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11861:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11861:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11881:2:80",
                            "type": "",
                            "value": "27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11854:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11854:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11854:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11904:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11915:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11900:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11900:18:80"
                          },
                          {
                            "hexValue": "496e76616c6964207369676e6174757265202773272076616c7565",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11920:29:80",
                            "type": "",
                            "value": "Invalid signature 's' value"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11893:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11893:57:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11893:57:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11959:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11971:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11982:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11967:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11967:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "11959:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_da5e941e0c0e9f5d2dd9c50d0d536bb3473df23a86b3758f7761ac079606810b__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "11791:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "11805:4:80",
                    "type": ""
                  }
                ],
                "src": "11640:351:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12170:177:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12187:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12198:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12180:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12180:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12180:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12221:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12232:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12217:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12217:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12237:2:80",
                            "type": "",
                            "value": "27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12210:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12210:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12210:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12260:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12271:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12256:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12256:18:80"
                          },
                          {
                            "hexValue": "496e76616c6964207369676e6174757265202776272076616c7565",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "12276:29:80",
                            "type": "",
                            "value": "Invalid signature 'v' value"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12249:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12249:57:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12249:57:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12315:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12327:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12338:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12323:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12323:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12315:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_39ee8e918a13a65f8035b763663940a12c57278addad36e689cdb6b64cb0b7e0__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "12147:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "12161:4:80",
                    "type": ""
                  }
                ],
                "src": "11996:351:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12399:88:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12430:22:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "12432:16:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12432:18:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "12432:18:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12415:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12426:1:80",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "12422:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12422:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "12412:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12412:17:80"
                      },
                      "nodeType": "YulIf",
                      "src": "12409:43:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12461:20:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12472:5:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12479:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12468:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12468:13:80"
                      },
                      "variableNames": [
                        {
                          "name": "ret",
                          "nodeType": "YulIdentifier",
                          "src": "12461:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "increment_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "12381:5:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "ret",
                    "nodeType": "YulTypedName",
                    "src": "12391:3:80",
                    "type": ""
                  }
                ],
                "src": "12352:135:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12677:232:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "12687:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12699:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12710:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12695:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12695:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12687:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12730:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12741:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12723:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12723:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12723:25:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12768:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12779:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12764:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12764:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "12788:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12804:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12809:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "12800:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12800:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12813:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "12796:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12796:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "12784:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12784:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12757:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12757:60:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12757:60:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12837:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12848:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12833:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12833:18:80"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "12853:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12826:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12826:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12826:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12880:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12891:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12876:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12876:18:80"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "12896:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12869:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12869:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12869:34:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "12622:9:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "12633:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "12641:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "12649:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "12657:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "12668:4:80",
                    "type": ""
                  }
                ],
                "src": "12492:417:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13162:144:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13179:3:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13188:3:80",
                                "type": "",
                                "value": "240"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13193:4:80",
                                "type": "",
                                "value": "6401"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "13184:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13184:14:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13172:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13172:27:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13172:27:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13219:3:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13224:1:80",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13215:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13215:11:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13228:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13208:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13208:27:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13208:27:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13255:3:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13260:2:80",
                                "type": "",
                                "value": "34"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13251:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13251:12:80"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "13265:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13244:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13244:28:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13244:28:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13281:19:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13292:3:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13297:2:80",
                            "type": "",
                            "value": "66"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13288:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13288:12:80"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "13281:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "13130:3:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "13135:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "13143:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "13154:3:80",
                    "type": ""
                  }
                ],
                "src": "12914:392:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13492:217:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "13502:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13514:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13525:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13510:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13510:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "13502:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13545:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13556:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13538:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13538:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13538:25:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13583:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13594:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13579:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13579:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "13603:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13611:4:80",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "13599:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13599:17:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13572:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13572:45:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13572:45:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13637:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13648:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13633:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13633:18:80"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "13653:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13626:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13626:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13626:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13680:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13691:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13676:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13676:18:80"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "13696:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13669:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13669:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13669:34:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13437:9:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "13448:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "13456:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "13464:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "13472:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "13483:4:80",
                    "type": ""
                  }
                ],
                "src": "13311:398:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13888:167:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13905:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13916:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13898:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13898:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13898:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13939:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13950:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13935:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13935:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13955:2:80",
                            "type": "",
                            "value": "17"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13928:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13928:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13928:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13978:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13989:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13974:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13974:18:80"
                          },
                          {
                            "hexValue": "496e76616c6964207369676e6174757265",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "13994:19:80",
                            "type": "",
                            "value": "Invalid signature"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13967:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13967:47:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13967:47:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14023:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14035:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14046:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14031:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14031:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "14023:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13865:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "13879:4:80",
                    "type": ""
                  }
                ],
                "src": "13714:341:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14263:286:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14273:29:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14291:3:80",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14296:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "14287:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14287:11:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14300:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14283:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14283:19:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "14277:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14318:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "14333:6:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "14341:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "14329:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14329:15:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14311:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14311:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14311:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14365:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14376:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14361:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14361:18:80"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "14381:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14354:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14354:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14354:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14408:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14419:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14404:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14404:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "14428:6:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "14436:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "14424:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14424:15:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14397:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14397:43:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14397:43:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14460:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14471:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14456:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14456:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14476:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14449:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14449:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14449:31:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14489:54:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "14515:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14527:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14538:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14523:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14523:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_string",
                          "nodeType": "YulIdentifier",
                          "src": "14497:17:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14497:46:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "14489:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_bytes_memory_ptr__to_t_address_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "14208:9:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "14219:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "14227:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "14235:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "14243:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "14254:4:80",
                    "type": ""
                  }
                ],
                "src": "14060:489:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14728:168:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14745:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14756:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14738:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14738:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14738:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14779:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14790:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14775:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14775:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14795:2:80",
                            "type": "",
                            "value": "18"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14768:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14768:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14768:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14818:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14829:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14814:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14814:18:80"
                          },
                          {
                            "hexValue": "5065726d697373696f6e2065787069726564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "14834:20:80",
                            "type": "",
                            "value": "Permission expired"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14807:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14807:48:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14807:48:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14864:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14876:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14887:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14872:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14872:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "14864:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_cabd043e27e35c3e395c87a9e81534dfb3a0dd1c8242131ac8a1276fa1903734__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "14705:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "14719:4:80",
                    "type": ""
                  }
                ],
                "src": "14554:342:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15142:350:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "15152:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15164:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15175:3:80",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15160:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15160:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "15152:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15195:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15206:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15188:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15188:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15188:25:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15222:29:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15240:3:80",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15245:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "15236:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15236:11:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15249:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15232:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15232:19:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "15226:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15271:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15282:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15267:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15267:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "15291:6:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "15299:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "15287:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15287:15:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15260:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15260:43:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15260:43:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15323:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15334:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15319:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15319:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "15343:6:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "15351:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "15339:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15339:15:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15312:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15312:43:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15312:43:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15375:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15386:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15371:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15371:18:80"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "15391:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15364:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15364:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15364:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15418:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15429:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15414:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15414:19:80"
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "15435:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15407:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15407:35:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15407:35:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15462:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15473:3:80",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15458:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15458:19:80"
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "15479:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15451:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15451:35:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15451:35:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "15071:9:80",
                    "type": ""
                  },
                  {
                    "name": "value5",
                    "nodeType": "YulTypedName",
                    "src": "15082:6:80",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "15090:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "15098:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "15106:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "15114:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "15122:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "15133:4:80",
                    "type": ""
                  }
                ],
                "src": "14901:591:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15671:228:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15688:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15699:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15681:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15681:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15681:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15722:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15733:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15718:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15718:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15738:2:80",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15711:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15711:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15711:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15761:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15772:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15757:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15757:18:80"
                          },
                          {
                            "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "15777:34:80",
                            "type": "",
                            "value": "Ownable: new owner is the zero a"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15750:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15750:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15750:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15832:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15843:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15828:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15828:18:80"
                          },
                          {
                            "hexValue": "646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "15848:8:80",
                            "type": "",
                            "value": "ddress"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15821:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15821:36:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15821:36:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "15866:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15878:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15889:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15874:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15874:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "15866:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "15648:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "15662:4:80",
                    "type": ""
                  }
                ],
                "src": "15497:402:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "16117:449:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16127:29:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16145:3:80",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16150:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "16141:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16141:11:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16154:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16137:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16137:19:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "16131:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16172:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "16187:6:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "16195:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "16183:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16183:15:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "16165:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16165:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16165:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16219:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16230:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16215:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16215:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "16239:6:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "16247:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "16235:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16235:15:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "16208:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16208:43:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16208:43:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16271:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16282:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16267:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16267:18:80"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "16287:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "16260:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16260:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16260:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16314:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16325:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16310:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16310:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16330:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "16303:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16303:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16303:31:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16354:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16365:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16350:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16350:19:80"
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "16371:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "16343:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16343:35:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16343:35:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16404:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16415:3:80",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16400:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16400:19:80"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "16421:6:80"
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "16429:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "16387:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16387:49:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16387:49:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16460:9:80"
                                  },
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "16471:6:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16456:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16456:22:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16480:3:80",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16452:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16452:32:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16486:1:80",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "16445:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16445:43:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16445:43:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "16497:63:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16513:9:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "16532:6:80"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16540:2:80",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16528:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16528:15:80"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16549:2:80",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "16545:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16545:7:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "16524:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16524:29:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16509:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16509:45:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16556:3:80",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16505:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16505:55:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "16497:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "16054:9:80",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "16065:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "16073:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "16081:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "16089:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "16097:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "16108:4:80",
                    "type": ""
                  }
                ],
                "src": "15904:662:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "16745:179:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16762:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16773:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "16755:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16755:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16755:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16796:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16807:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16792:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16792:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16812:2:80",
                            "type": "",
                            "value": "29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "16785:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16785:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16785:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16835:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16846:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16831:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16831:18:80"
                          },
                          {
                            "hexValue": "417070726f76652066726f6d20746865207a65726f2061646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "16851:31:80",
                            "type": "",
                            "value": "Approve from the zero address"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "16824:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16824:59:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16824:59:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "16892:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16904:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16915:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16900:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16900:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "16892:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_5f40ec20695f4374141f486d0b1634cea66e2bbc588f6505853f4a569fe344ed__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "16722:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "16736:4:80",
                    "type": ""
                  }
                ],
                "src": "16571:353:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "17103:177:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17120:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17131:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17113:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17113:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17113:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17154:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17165:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17150:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17150:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17170:2:80",
                            "type": "",
                            "value": "27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17143:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17143:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17143:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17193:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17204:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17189:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17189:18:80"
                          },
                          {
                            "hexValue": "417070726f766520746f20746865207a65726f2061646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "17209:29:80",
                            "type": "",
                            "value": "Approve to the zero address"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17182:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17182:57:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17182:57:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "17248:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17260:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17271:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17256:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17256:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "17248:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_1a6e9fec9992f38aafac16fbda1f1e60c1a6ea2ee29033877fd4d4ee56ae0b98__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "17080:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "17094:4:80",
                    "type": ""
                  }
                ],
                "src": "16929:351:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "17414:145:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "17424:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17436:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17447:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17432:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17432:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "17424:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17466:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "17481:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17497:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17502:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "17493:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17493:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17506:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "17489:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17489:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "17477:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17477:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17459:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17459:51:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17459:51:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17530:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17541:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17526:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17526:18:80"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "17546:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17519:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17519:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17519:34:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "17375:9:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "17386:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "17394:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "17405:4:80",
                    "type": ""
                  }
                ],
                "src": "17285:274:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "17738:180:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17755:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17766:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17748:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17748:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17748:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17789:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17800:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17785:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17785:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17805:2:80",
                            "type": "",
                            "value": "30"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17778:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17778:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17778:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17828:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17839:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17824:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17824:18:80"
                          },
                          {
                            "hexValue": "5472616e736665722066726f6d20746865207a65726f2061646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "17844:32:80",
                            "type": "",
                            "value": "Transfer from the zero address"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "17817:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17817:60:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17817:60:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "17886:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17898:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17909:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17894:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17894:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "17886:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_f9de4d0ce612773dd0c42774a83ce5880e91b70a52fec77e27b8f7380e8e6f76__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "17715:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "17729:4:80",
                    "type": ""
                  }
                ],
                "src": "17564:354:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "18097:178:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18114:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18125:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18107:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18107:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18107:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18148:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18159:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18144:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18144:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18164:2:80",
                            "type": "",
                            "value": "28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18137:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18137:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18137:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18187:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18198:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18183:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18183:18:80"
                          },
                          {
                            "hexValue": "5472616e7366657220746f20746865207a65726f2061646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "18203:30:80",
                            "type": "",
                            "value": "Transfer to the zero address"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18176:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18176:58:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18176:58:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "18243:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18255:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18266:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18251:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18251:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "18243:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_f0ce1be0f42288523d6bdd45a6d07b8d2b08d1f5986a347b5e5c14064be46e9c__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "18074:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "18088:4:80",
                    "type": ""
                  }
                ],
                "src": "17923:352:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "18454:179:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18471:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18482:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18464:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18464:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18464:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18505:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18516:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18501:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18501:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18521:2:80",
                            "type": "",
                            "value": "29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18494:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18494:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18494:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18544:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18555:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18540:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18540:18:80"
                          },
                          {
                            "hexValue": "5472616e7366657220746f2074686520746f6b656e2061646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "18560:31:80",
                            "type": "",
                            "value": "Transfer to the token address"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18533:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18533:59:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18533:59:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "18601:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18613:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18624:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18609:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18609:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "18601:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_4ddfa1e354bbbffc262e7631ee50acbf921856723264c01e84c45dc99b8c22de__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "18431:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "18445:4:80",
                    "type": ""
                  }
                ],
                "src": "18280:353:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "18812:181:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18829:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18840:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18822:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18822:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18822:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18863:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18874:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18859:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18859:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18879:2:80",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18852:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18852:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18852:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18902:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18913:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18898:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18898:18:80"
                          },
                          {
                            "hexValue": "5472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "18918:33:80",
                            "type": "",
                            "value": "Transfer amount exceeds balance"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "18891:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18891:61:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "18891:61:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "18961:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18973:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18984:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18969:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18969:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "18961:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_8b189f21d1893cc7b623479ef5c70d8b66a358ee6faf2498c3a0015a8b6f8d54__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "18789:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "18803:4:80",
                    "type": ""
                  }
                ],
                "src": "18638:355:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "19057:65:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19074:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "name": "ptr",
                            "nodeType": "YulIdentifier",
                            "src": "19077:3:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "19067:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19067:14:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "19067:14:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "19090:26:80",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19108:1:80",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19111:4:80",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "keccak256",
                          "nodeType": "YulIdentifier",
                          "src": "19098:9:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19098:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "data",
                          "nodeType": "YulIdentifier",
                          "src": "19090:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "array_dataslot_bytes_storage_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "ptr",
                    "nodeType": "YulTypedName",
                    "src": "19040:3:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "19048:4:80",
                    "type": ""
                  }
                ],
                "src": "18998:124:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "19265:966:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "19275:12:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19286:1:80",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "ret",
                          "nodeType": "YulTypedName",
                          "src": "19279:3:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "19296:30:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "19319:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "19313:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19313:13:80"
                      },
                      "variables": [
                        {
                          "name": "slotValue",
                          "nodeType": "YulTypedName",
                          "src": "19300:9:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "19335:17:80",
                      "value": {
                        "name": "ret",
                        "nodeType": "YulIdentifier",
                        "src": "19349:3:80"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "19339:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "19361:11:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19371:1:80",
                        "type": "",
                        "value": "1"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "19365:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "19381:28:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "19395:2:80"
                          },
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "19399:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "shr",
                          "nodeType": "YulIdentifier",
                          "src": "19391:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19391:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "19381:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "19418:44:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "19448:9:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "19459:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19444:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19444:18:80"
                      },
                      "variables": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulTypedName",
                          "src": "19422:18:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "19501:31:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "19503:27:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "19517:6:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "19525:4:80",
                                  "type": "",
                                  "value": "0x7f"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "19513:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "19513:17:80"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "19503:6:80"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "19481:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "19474:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19474:26:80"
                      },
                      "nodeType": "YulIf",
                      "src": "19471:61:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "19541:12:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19551:2:80",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "19545:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "19612:115:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "19633:3:80"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "19642:3:80",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "19647:10:80",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "19638:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "19638:20:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "19626:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "19626:33:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "19626:33:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "19679:1:80",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "19682:4:80",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "19672:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "19672:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "19672:15:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "19707:3:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "19712:4:80",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "19700:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "19700:17:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "19700:17:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "19568:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "19591:6:80"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "19599:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "19588:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19588:14:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "19565:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19565:38:80"
                      },
                      "nodeType": "YulIf",
                      "src": "19562:165:80"
                    },
                    {
                      "cases": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "19777:97:80",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "19798:3:80"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "slotValue",
                                          "nodeType": "YulIdentifier",
                                          "src": "19807:9:80"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "19822:3:80",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "not",
                                            "nodeType": "YulIdentifier",
                                            "src": "19818:3:80"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "19818:8:80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "19803:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19803:24:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "19791:6:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "19791:37:80"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "19791:37:80"
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "19841:23:80",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "19852:3:80"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "19857:6:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "19848:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "19848:16:80"
                                },
                                "variableNames": [
                                  {
                                    "name": "ret",
                                    "nodeType": "YulIdentifier",
                                    "src": "19841:3:80"
                                  }
                                ]
                              }
                            ]
                          },
                          "nodeType": "YulCase",
                          "src": "19770:104:80",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19775:1:80",
                            "type": "",
                            "value": "0"
                          }
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "19890:316:80",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "19904:55:80",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "19952:6:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "array_dataslot_bytes_storage_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "19919:32:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "19919:40:80"
                                },
                                "variables": [
                                  {
                                    "name": "dataPos",
                                    "nodeType": "YulTypedName",
                                    "src": "19908:7:80",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "19972:10:80",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "19981:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulTypedName",
                                    "src": "19976:1:80",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "20049:111:80",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "pos",
                                                "nodeType": "YulIdentifier",
                                                "src": "20078:3:80"
                                              },
                                              {
                                                "name": "i",
                                                "nodeType": "YulIdentifier",
                                                "src": "20083:1:80"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "20074:3:80"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "20074:11:80"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "dataPos",
                                                "nodeType": "YulIdentifier",
                                                "src": "20093:7:80"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sload",
                                              "nodeType": "YulIdentifier",
                                              "src": "20087:5:80"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "20087:14:80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mstore",
                                          "nodeType": "YulIdentifier",
                                          "src": "20067:6:80"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20067:35:80"
                                      },
                                      "nodeType": "YulExpressionStatement",
                                      "src": "20067:35:80"
                                    },
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "20119:27:80",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulIdentifier",
                                            "src": "20134:7:80"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "20143:2:80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "20130:3:80"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20130:16:80"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "dataPos",
                                          "nodeType": "YulIdentifier",
                                          "src": "20119:7:80"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "20006:1:80"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "20009:6:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nodeType": "YulIdentifier",
                                    "src": "20003:2:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "20003:13:80"
                                },
                                "nodeType": "YulForLoop",
                                "post": {
                                  "nodeType": "YulBlock",
                                  "src": "20017:19:80",
                                  "statements": [
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "20019:15:80",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "20028:1:80"
                                          },
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "20031:2:80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "20024:3:80"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20024:10:80"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "20019:1:80"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "pre": {
                                  "nodeType": "YulBlock",
                                  "src": "19999:3:80",
                                  "statements": []
                                },
                                "src": "19995:165:80"
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "20173:23:80",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "20184:3:80"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "20189:6:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "20180:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "20180:16:80"
                                },
                                "variableNames": [
                                  {
                                    "name": "ret",
                                    "nodeType": "YulIdentifier",
                                    "src": "20173:3:80"
                                  }
                                ]
                              }
                            ]
                          },
                          "nodeType": "YulCase",
                          "src": "19883:323:80",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19888:1:80",
                            "type": "",
                            "value": "1"
                          }
                        }
                      ],
                      "expression": {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "19743:18:80"
                      },
                      "nodeType": "YulSwitch",
                      "src": "19736:470:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "20215:10:80",
                      "value": {
                        "name": "ret",
                        "nodeType": "YulIdentifier",
                        "src": "20222:3:80"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "20215:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "19241:3:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "19246:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "19257:3:80",
                    "type": ""
                  }
                ],
                "src": "19127:1104:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "20449:276:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "20459:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20471:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20482:3:80",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20467:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20467:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "20459:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20502:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "20513:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "20495:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20495:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "20495:25:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20540:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20551:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20536:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20536:18:80"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "20556:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "20529:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20529:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "20529:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20583:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20594:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20579:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20579:18:80"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "20599:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "20572:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20572:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "20572:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20626:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20637:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20622:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20622:18:80"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "20642:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "20615:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20615:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "20615:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20669:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20680:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20665:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20665:19:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value4",
                                "nodeType": "YulIdentifier",
                                "src": "20690:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20706:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20711:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "20702:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20702:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20715:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "20698:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20698:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "20686:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20686:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "20658:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20658:61:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "20658:61:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "20386:9:80",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "20397:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "20405:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "20413:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "20421:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "20429:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "20440:4:80",
                    "type": ""
                  }
                ],
                "src": "20236:489:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "20904:174:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20921:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20932:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "20914:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20914:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "20914:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20955:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20966:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20951:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20951:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20971:2:80",
                            "type": "",
                            "value": "24"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "20944:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20944:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "20944:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20994:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21005:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20990:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20990:18:80"
                          },
                          {
                            "hexValue": "426c6f636b206e6f74207965742064657465726d696e6564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "21010:26:80",
                            "type": "",
                            "value": "Block not yet determined"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "20983:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20983:54:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "20983:54:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "21046:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21058:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21069:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21054:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21054:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "21046:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_83ee8eb1a9e77ac94f36a510fd8a146111d4889defed5bbb86a497f742fd412b__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "20881:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "20895:4:80",
                    "type": ""
                  }
                ],
                "src": "20730:348:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "21257:179:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21274:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21285:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "21267:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21267:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "21267:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "21308:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21319:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21304:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21304:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21324:2:80",
                            "type": "",
                            "value": "29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "21297:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21297:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "21297:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "21347:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21358:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21343:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21343:18:80"
                          },
                          {
                            "hexValue": "4d6178696d756d20746f74616c20737570706c79206578636565646564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "21363:31:80",
                            "type": "",
                            "value": "Maximum total supply exceeded"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "21336:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21336:59:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "21336:59:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "21404:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21416:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21427:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21412:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21412:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "21404:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_d056cfab7e1a9ec280a7e3c58615996403225d9d9d57bc53a0e2a0d76f81c25a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "21234:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "21248:4:80",
                    "type": ""
                  }
                ],
                "src": "21083:353:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "21615:177:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21632:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21643:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "21625:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21625:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "21625:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "21666:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21677:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21662:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21662:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21682:2:80",
                            "type": "",
                            "value": "27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "21655:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21655:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "21655:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "21705:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21716:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21701:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21701:18:80"
                          },
                          {
                            "hexValue": "4275726e20616d6f756e7420657863656564732062616c616e6365",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "21721:29:80",
                            "type": "",
                            "value": "Burn amount exceeds balance"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "21694:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21694:57:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "21694:57:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "21760:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21772:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21783:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21768:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21768:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "21760:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9549091f8ab6d1d0d20b644d47ba65c78b1ebfbbba15f6830e552b4c06c36251__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "21592:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "21606:4:80",
                    "type": ""
                  }
                ],
                "src": "21441:351:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "21971:228:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21988:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21999:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "21981:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21981:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "21981:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22022:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22033:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22018:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22018:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22038:2:80",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "22011:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22011:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "22011:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22061:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22072:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22057:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22057:18:80"
                          },
                          {
                            "hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2033",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "22077:34:80",
                            "type": "",
                            "value": "SafeCast: value doesn't fit in 3"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "22050:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22050:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "22050:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22132:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22143:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22128:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22128:18:80"
                          },
                          {
                            "hexValue": "322062697473",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "22148:8:80",
                            "type": "",
                            "value": "2 bits"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "22121:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22121:36:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "22121:36:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "22166:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22178:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22189:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22174:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22174:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "22166:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "21948:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "21962:4:80",
                    "type": ""
                  }
                ],
                "src": "21797:402:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "22282:199:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "22328:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22337:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22340:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "22330:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22330:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "22330:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "22303:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22312:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "22299:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22299:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22324:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "22295:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22295:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "22292:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "22353:29:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22372:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "22366:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22366:16:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "22357:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "22435:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22444:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22447:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "22437:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22437:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "22437:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "22404:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "22425:5:80"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "22418:6:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22418:13:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "22411:6:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22411:21:80"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "22401:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22401:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "22394:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22394:40:80"
                      },
                      "nodeType": "YulIf",
                      "src": "22391:60:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "22460:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "22470:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "22460:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "22248:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "22259:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "22271:6:80",
                    "type": ""
                  }
                ],
                "src": "22204:277:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "22660:232:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22677:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22688:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "22670:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22670:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "22670:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22711:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22722:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22707:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22707:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22727:2:80",
                            "type": "",
                            "value": "42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "22700:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22700:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "22700:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22750:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22761:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22746:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22746:18:80"
                          },
                          {
                            "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "22766:34:80",
                            "type": "",
                            "value": "SafeERC20: ERC20 operation did n"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "22739:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22739:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "22739:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "22821:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22832:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22817:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22817:18:80"
                          },
                          {
                            "hexValue": "6f742073756363656564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "22837:12:80",
                            "type": "",
                            "value": "ot succeed"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "22810:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22810:40:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "22810:40:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "22859:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22871:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22882:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22867:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22867:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "22859:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "22637:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "22651:4:80",
                    "type": ""
                  }
                ],
                "src": "22486:406:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "22943:171:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "22974:111:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22995:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "23002:3:80",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "23007:10:80",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "22998:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "22998:20:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "22988:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22988:31:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "22988:31:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "23039:1:80",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "23042:4:80",
                                  "type": "",
                                  "value": "0x12"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "23032:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "23032:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "23032:15:80"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "23067:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "23070:4:80",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "23060:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "23060:15:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "23060:15:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "22963:1:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "22956:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22956:9:80"
                      },
                      "nodeType": "YulIf",
                      "src": "22953:132:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "23094:14:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "23103:1:80"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "23106:1:80"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "23099:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23099:9:80"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "23094:1:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_div_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "22928:1:80",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "22931:1:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "22937:1:80",
                    "type": ""
                  }
                ],
                "src": "22897:217:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "23293:228:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23310:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23321:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23303:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23303:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23303:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23344:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23355:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23340:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23340:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23360:2:80",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23333:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23333:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23333:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23383:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23394:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23379:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23379:18:80"
                          },
                          {
                            "hexValue": "53616665436173743a2076616c756520646f65736e27742066697420696e2039",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "23399:34:80",
                            "type": "",
                            "value": "SafeCast: value doesn't fit in 9"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23372:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23372:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23372:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23454:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23465:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23450:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23450:18:80"
                          },
                          {
                            "hexValue": "362062697473",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "23470:8:80",
                            "type": "",
                            "value": "6 bits"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23443:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23443:36:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23443:36:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "23488:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23500:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23511:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23496:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23496:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "23488:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "23270:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "23284:4:80",
                    "type": ""
                  }
                ],
                "src": "23119:402:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "23655:119:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "23665:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23677:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23688:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23673:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23673:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "23665:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23707:9:80"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "23718:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23700:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23700:25:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23700:25:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "23745:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23756:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23741:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23741:18:80"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "23761:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23734:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23734:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23734:34:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "23616:9:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "23627:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "23635:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "23646:4:80",
                    "type": ""
                  }
                ],
                "src": "23526:248:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "23953:228:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23970:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23981:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23963:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23963:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23963:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24004:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "24015:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24000:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24000:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24020:2:80",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "23993:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23993:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "23993:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24043:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "24054:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24039:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24039:18:80"
                          },
                          {
                            "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "24059:34:80",
                            "type": "",
                            "value": "Address: insufficient balance fo"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "24032:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24032:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "24032:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24114:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "24125:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24110:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24110:18:80"
                          },
                          {
                            "hexValue": "722063616c6c",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "24130:8:80",
                            "type": "",
                            "value": "r call"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "24103:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24103:36:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "24103:36:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "24148:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24160:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24171:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24156:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24156:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "24148:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "23930:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "23944:4:80",
                    "type": ""
                  }
                ],
                "src": "23779:402:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "24360:179:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24377:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24388:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "24370:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24370:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "24370:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24411:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "24422:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24407:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24407:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24427:2:80",
                            "type": "",
                            "value": "29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "24400:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24400:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "24400:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "24450:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "24461:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24446:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24446:18:80"
                          },
                          {
                            "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "24466:31:80",
                            "type": "",
                            "value": "Address: call to non-contract"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "24439:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24439:59:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "24439:59:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "24507:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24519:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24530:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24515:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24515:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "24507:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "24337:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "24351:4:80",
                    "type": ""
                  }
                ],
                "src": "24186:353:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "24681:137:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "24691:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "24711:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "24705:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24705:13:80"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "24695:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "24753:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "24761:4:80",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24749:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24749:17:80"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "24768:3:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "24773:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "24727:21:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24727:53:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "24727:53:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "24789:23:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "24800:3:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "24805:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24796:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24796:16:80"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "24789:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "24657:3:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "24662:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "24673:3:80",
                    "type": ""
                  }
                ],
                "src": "24544:274:80"
              }
            ]
          },
          "contents": "{\n    { }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$5807t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(96, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_uint8(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value2 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_uint8(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffffffff))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_struct$_Checkpoint_$10137_memory_ptr__to_t_struct$_Checkpoint_$10137_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(mload(value0), 0xffffffff))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(96, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_IERC721_$7014t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2d57697c67ffd1ab87579ba42f3b90bb174923708e2c57bedfeaa18d9a6dafa7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Transfer amount exceeds allowanc\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_dfc0ec7f03e5010fc5e60d5e839b5983d0c776856dba6d5f0635b73a9b29e587__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Burn amount exceeds allowance\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_827fd26495b73720fe626df539d00c1be5968dac54591ff1406e783ed48f1d84__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Delegation expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_da5e941e0c0e9f5d2dd9c50d0d536bb3473df23a86b3758f7761ac079606810b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid signature 's' value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_39ee8e918a13a65f8035b763663940a12c57278addad36e689cdb6b64cb0b7e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid signature 'v' value\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_bytes_memory_ptr__to_t_address_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_cabd043e27e35c3e395c87a9e81534dfb3a0dd1c8242131ac8a1276fa1903734__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Permission expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), value4)\n        calldatacopy(add(headStart, 160), value3, value4)\n        mstore(add(add(headStart, value4), 160), 0)\n        tail := add(add(headStart, and(add(value4, 31), not(31))), 160)\n    }\n    function abi_encode_tuple_t_stringliteral_5f40ec20695f4374141f486d0b1634cea66e2bbc588f6505853f4a569fe344ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Approve from the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1a6e9fec9992f38aafac16fbda1f1e60c1a6ea2ee29033877fd4d4ee56ae0b98__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Approve to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_f9de4d0ce612773dd0c42774a83ce5880e91b70a52fec77e27b8f7380e8e6f76__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Transfer from the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f0ce1be0f42288523d6bdd45a6d07b8d2b08d1f5986a347b5e5c14064be46e9c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Transfer to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4ddfa1e354bbbffc262e7631ee50acbf921856723264c01e84c45dc99b8c22de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Transfer to the token address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8b189f21d1893cc7b623479ef5c70d8b66a358ee6faf2498c3a0015a8b6f8d54__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Transfer amount exceeds balance\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_bytes_storage_ptr(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := ret\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            let dataPos := array_dataslot_bytes_storage_ptr(value0)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_83ee8eb1a9e77ac94f36a510fd8a146111d4889defed5bbb86a497f742fd412b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Block not yet determined\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d056cfab7e1a9ec280a7e3c58615996403225d9d9d57bc53a0e2a0d76f81c25a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Maximum total supply exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9549091f8ab6d1d0d20b644d47ba65c78b1ebfbbba15f6830e552b4c06c36251__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Burn amount exceeds balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 3\")\n        mstore(add(headStart, 96), \"2 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 9\")\n        mstore(add(headStart, 96), \"6 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
          "id": 80,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {
        "8992": [
          {
            "length": 32,
            "start": 843
          },
          {
            "length": 32,
            "start": 1656
          }
        ],
        "8994": [
          {
            "length": 32,
            "start": 993
          },
          {
            "length": 32,
            "start": 1697
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x1171BDA9 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x70AE92D2 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x771DA5C5 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xB20D7FA9 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xB4F94B2E EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xFC4E51F6 EQ PUSH2 0x4B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EF PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x1EF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2580 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x22D PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x674 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF1 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0A JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0A JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST PUSH2 0x2E9 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0A JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x852 JUMP JUMPDEST PUSH2 0x1EF PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x88D JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x923 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF1 JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x25A PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0A JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F3D JUMP JUMPDEST PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0x1EF PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x411 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FB6 JUMP JUMPDEST PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2540 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x47C PUSH2 0x477 CALLDATASIZE PUSH1 0x4 PUSH2 0x2129 JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x4B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0A JUMP JUMPDEST PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x4C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2160 JUMP JUMPDEST PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x4D9 SWAP1 PUSH2 0x21FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x505 SWAP1 PUSH2 0x21FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x552 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x527 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x552 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x535 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x567 CALLER DUP5 DUP5 PUSH2 0x1076 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0x579 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x1182 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x65C JUMPI DUP3 DUP2 LT ISZERO PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206578636565647320616C6C6F77616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x65C DUP6 CALLER PUSH2 0x657 DUP7 DUP6 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x667 DUP6 DUP6 DUP6 PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ ISZERO PUSH2 0x6C3 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x6CB PUSH2 0x13D4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x66D SWAP1 DUP4 PUSH2 0x1483 JUMP JUMPDEST CALLER PUSH2 0x6FB PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x4D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x77E PUSH1 0x0 DUP4 DUP4 PUSH2 0x157E JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x790 SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7BD SWAP1 DUP5 SWAP1 PUSH2 0x229B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2560 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x7FF CALLER DUP3 PUSH2 0x166A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x7FF CALLER DUP3 PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x84C SWAP1 PUSH2 0x17E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0x85B PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x2239 JUMP JUMPDEST PUSH2 0x88B PUSH1 0x0 PUSH2 0x1851 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x919 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E20616D6F756E74206578636565647320616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x919 DUP4 CALLER PUSH2 0x657 DUP6 DUP6 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x5BC DUP4 DUP4 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84C PUSH1 0x9 DUP4 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x4D9 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x9D3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x9CE SWAP1 PUSH2 0x992 PUSH1 0x1 DUP5 PUSH2 0x2284 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x9A2 JUMPI PUSH2 0x9A2 PUSH2 0x22B3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x10 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x567 CALLER DUP5 DUP5 PUSH2 0x11D4 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11195B1959D85D1A5BDB88195E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 GT ISZERO PUSH2 0xA64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x22C9 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0xA79 JUMPI POP DUP3 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0xA95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9F PUSH2 0x674 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2540 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP11 SWAP3 SWAP1 PUSH2 0xAD5 DUP4 PUSH2 0x2333 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB0C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB33 SWAP3 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xB70 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2369 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xBC8 JUMPI POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xBE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x2387 JUMP JUMPDEST PUSH2 0xBEE DUP9 DUP9 PUSH2 0x1746 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC04 DUP5 DUP5 PUSH2 0x55A JUMP JUMPDEST ISZERO PUSH2 0xC76 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8F4FFCB1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x8F4FFCB1 SWAP1 PUSH2 0xC3B SWAP1 CALLER SWAP1 DUP8 SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x23B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 POP PUSH2 0x66D JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xCC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14195C9B5A5CDCDA5BDB88195E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 GT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x22C9 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0xD10 JUMPI POP DUP3 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0xD2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD36 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2580 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP13 SWAP3 DUP13 SWAP3 DUP13 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xD72 DUP4 PUSH2 0x2333 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDD5 SWAP3 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xE12 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2369 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE6A JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x2387 JUMP JUMPDEST PUSH2 0xE91 DUP10 DUP10 DUP10 PUSH2 0x1076 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 PUSH2 0xF1D SWAP2 PUSH4 0xFFFFFFFF DUP8 AND SWAP1 DUP2 LT PUSH2 0xEE6 JUMPI PUSH2 0xEE6 PUSH2 0x22B3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x10 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH4 0xFFFFFFFF PUSH1 0x60 DUP3 SWAP1 SHR AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0xF51 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x7FF DUP2 PUSH2 0x1851 JUMP JUMPDEST CALLER PUSH2 0xFEE PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1014 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5C46A7EF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xB88D4FDE SWAP1 PUSH2 0x1048 SWAP1 ADDRESS SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x23EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1062 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417070726F76652066726F6D20746865207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1120 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x417070726F766520746F20746865207A65726F2061646472657373 PUSH1 0x28 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x5BC SWAP1 DUP5 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x122A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E736665722066726F6D20746865207A65726F20616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x127F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x5472616E7366657220746F20746865207A65726F2061646472657373 PUSH1 0x20 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ ISZERO PUSH2 0x12D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220746F2074686520746F6B656E2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x12E3 DUP4 DUP4 DUP4 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E7420657863656564732062616C616E636500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x1356 DUP3 DUP3 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x138C SWAP1 DUP5 SWAP1 PUSH2 0x229B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2560 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x13C6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x5 PUSH1 0x40 MLOAD PUSH2 0x1406 SWAP2 SWAP1 PUSH2 0x2443 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x14CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x109B1BD8DAC81B9BDD081E595D0819195D195C9B5A5B9959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1558 JUMPI PUSH1 0x0 PUSH2 0x14E8 DUP3 DUP5 PUSH2 0x1973 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x152B DUP8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1501 JUMPI PUSH2 0x1501 PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP3 DIV ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 SWAP1 SWAP3 AND PUSH1 0x10 MUL PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x60 SHR AND SWAP1 JUMP JUMPDEST SWAP1 POP DUP6 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1543 JUMPI DUP2 SWAP4 POP PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x154E DUP3 PUSH1 0x1 PUSH2 0x229B JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP PUSH2 0x14D4 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1572 JUMPI PUSH2 0x156D DUP6 PUSH2 0x992 PUSH1 0x1 DUP6 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1589 DUP3 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1618 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 PUSH2 0x15B0 SWAP1 DUP5 SWAP1 PUSH2 0x229B JUMP JUMPDEST GT ISZERO PUSH2 0x15FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D20746F74616C20737570706C79206578636565646564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x1615 PUSH1 0x9 PUSH2 0x19F6 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x1A02 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1640 JUMPI PUSH2 0x163D PUSH1 0x9 PUSH2 0x1B5E DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x1A02 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x1664 PUSH2 0x164C DUP6 PUSH2 0x802 JUMP JUMPDEST PUSH2 0x1655 DUP6 PUSH2 0x802 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x1B6A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x16D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x4275726E20616D6F756E7420657863656564732062616C616E6365 PUSH1 0x28 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH2 0x16DD DUP4 PUSH1 0x0 DUP5 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x16E7 DUP3 DUP3 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1715 SWAP1 DUP5 SWAP1 PUSH2 0x2284 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2560 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x1175 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1751 DUP4 PUSH2 0x802 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x1777 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP10 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP5 SWAP6 POP SWAP4 SWAP3 DUP7 AND SWAP3 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x1664 DUP3 DUP5 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x184D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x322062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F6 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C83 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x5BC JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1914 SWAP2 SWAP1 PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1982 PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x2501 JUMP JUMPDEST PUSH2 0x66D SWAP1 DUP5 DUP5 AND PUSH2 0x229B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 GT ISZERO PUSH2 0x184D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2039 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x362062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66D DUP3 DUP5 PUSH2 0x229B JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 ISZERO PUSH2 0x1A23 JUMPI PUSH2 0x1A1E DUP7 PUSH2 0x992 PUSH1 0x1 DUP5 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 POP PUSH2 0x1A3F DUP4 DUP6 DUP8 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 ISZERO PUSH2 0x1AFF JUMPI PUSH1 0x0 PUSH2 0x1A68 DUP8 PUSH2 0x1A58 PUSH1 0x1 DUP6 PUSH2 0x2284 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1501 JUMPI PUSH2 0x1501 PUSH2 0x22B3 JUMP JUMPDEST SWAP1 POP NUMBER DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1AFD JUMPI PUSH2 0x1AA1 DUP2 PUSH2 0x1A85 DUP6 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH4 0xFFFFFFFF PUSH1 0x60 SHL AND OR SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x1AAD PUSH1 0x1 DUP6 PUSH2 0x2284 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1ABD JUMPI PUSH2 0x1ABD PUSH2 0x22B3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x10 MUL PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x1B56 JUMP JUMPDEST POP JUMPDEST DUP6 PUSH2 0x1B15 PUSH2 0x1B0C NUMBER PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0x1A85 DUP6 PUSH2 0x198E JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 KECCAK256 PUSH1 0x2 DUP3 DIV ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 DUP5 AND PUSH1 0x10 SWAP4 SWAP1 SWAP6 AND SWAP3 SWAP1 SWAP3 MUL PUSH2 0x100 EXP SWAP4 DUP5 MUL SWAP3 SWAP1 SWAP4 MUL NOT AND OR SWAP1 SSTORE POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66D DUP3 DUP5 PUSH2 0x2284 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B8C JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x5BC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1C08 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1BC7 SWAP1 PUSH2 0x1B5E DUP6 PUSH2 0x1A02 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BFD SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1C3E SWAP1 PUSH2 0x19F6 DUP6 PUSH2 0x1A02 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C74 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C92 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1C9A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1CFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1D52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1D6E SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DAB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1DC0 DUP3 DUP3 DUP7 PUSH2 0x1DCB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1DDA JUMPI POP DUP2 PUSH2 0x66D JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1DEA JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E1F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E07 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1664 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1E48 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x66D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1EA2 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1ED0 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1EE0 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x66D DUP2 PUSH2 0x1E6F JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1F38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1F56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1F61 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1F71 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1F86 PUSH1 0x60 DUP9 ADD PUSH2 0x1F27 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1FD6 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1FF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x200D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x201F JUMPI PUSH2 0x201F PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2047 JUMPI PUSH2 0x2047 PUSH2 0x1FA0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x209D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x20A8 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x20B8 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x20D4 PUSH1 0x80 DUP10 ADD PUSH2 0x1F27 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x210E DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x211E DUP2 PUSH2 0x1E6F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x213C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2147 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x211E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2183 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2193 DUP2 PUSH2 0x1E6F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x21B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x21D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x21EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2212 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2233 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2296 JUMPI PUSH2 0x2296 PUSH2 0x226E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x22AE JUMPI PUSH2 0x22AE PUSH2 0x226E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH27 0x496E76616C6964207369676E6174757265202773272076616C7565 PUSH1 0x28 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH27 0x496E76616C6964207369676E6174757265202776272076616C7565 PUSH1 0x28 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2347 JUMPI PUSH2 0x2347 PUSH2 0x226E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x23E5 SWAP1 DUP4 ADD DUP5 PUSH2 0x1E30 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x245F JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x247F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x2493 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x24A4 JUMPI PUSH2 0x24D1 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x24D1 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x24C9 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x24B0 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x251E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2535 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1E04 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID PUSH23 0x995FE87BE88484696CFD6792AEB71E0B61F81DFA3B641E GAS 0xDF STATICCALL CODESIZE LOG0 0xD3 0xB8 0xE2 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF PUSH15 0x71EDAE12B1B97F4D1F60370FEF1010 0x5F LOG2 STATICCALL 0xAE ADD 0x26 GT 0x4A AND SWAP13 PUSH5 0x845D6126C9 0xDE 0xC2 0xBA 0xCD 0xD2 CREATE JUMPDEST MSIZE 0xDE CALLVALUE 0xDA SWAP12 MSTORE RETURNDATASIZE SELFDESTRUCT DUP12 0xE4 0x2E 0x5E CODESIZE 0xE8 XOR 0xC8 0x2F 0xDB SIGNEXTEND 0xAE PUSH24 0x4387A724A2646970667358221220B9DA4B6D7C7329300271 EXP DUP11 0xE1 0x2E 0xD5 0xD0 0xB0 0xFB 0xE5 SDIV 0x29 SWAP11 CALLDATACOPY 0xFB 0xBD 0xB2 0xE2 SWAP13 0xAB PUSH11 0x8E1864736F6C6343000809 STOP CALLER ",
      "sourceMap": "1554:3715:76:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1978:27:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9738:184;;;;;;:::i;:::-;;:::i;:::-;;;1386:14:80;;1379:22;1361:41;;1349:2;1334:18;9738:184:45;1221:187:80;577:174:49;;;;;;:::i;:::-;;:::i;:::-;;1897:35:45;;;;;;;;;2035:25:80;;;2023:2;2008:18;1897:35:45;1889:177:80;3478:544:45;;;;;;:::i;:::-;;:::i;1663:176::-;;-1:-1:-1;;;;;;;;;;;1663:176:45;;2139:44;;2181:2;2139:44;;;;;2886:4:80;2874:17;;;2856:36;;2844:2;2829:18;2139:44:45;2714:184:80;10236:708:45;;;:::i;4497:193:51:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3065:31:80;;;3047:50;;3035:2;3020:18;4497:193:51;2903:200:80;6482:332:45;;;;;;:::i;:::-;;:::i;6974:90::-;;;;;;:::i;:::-;;:::i;3559:117:51:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3709:32:80;;;3691:51;;3679:2;3664:18;3559:117:51;3545:203:80;3867:107:76;;;;;;:::i;:::-;;:::i;3287:196:51:-;;;;;;:::i;:::-;;:::i;:::-;;;3927:10:80;3915:23;;;3897:42;;3885:2;3870:18;3287:196:51;3753:192:80;816:53:45;;;;;;:::i;:::-;;;;;;;;;;;;;;1374:49;;;;;;:::i;:::-;;;;;;;;;;;;;;1668:101:8;;;:::i;1430:38:45:-;;;;;7501:436;;;;;;:::i;:::-;;:::i;1036:85:8:-;;;:::i;5022:184:51:-;;;;;;:::i;:::-;;:::i;2053:29:45:-;;;:::i;3858:198:51:-;;;;;;:::i;:::-;;:::i;2703:192:45:-;;;;;;:::i;:::-;;:::i;2288:1450:76:-;;;;;;:::i;:::-;;:::i;1474:46:45:-;;;;;8573:427;;;;;;:::i;:::-;;:::i;4766:1512::-;;;;;;:::i;:::-;;:::i;1076:73::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1724:149:76;;-1:-1:-1;;;;;;;;;;;1724:149:76;;2910:314:51;;;;;;:::i;:::-;;:::i;:::-;;;;7824:13:80;;7839:10;7820:30;7802:49;;7911:4;7899:17;;;7893:24;-1:-1:-1;;;;;7889:49:80;7867:20;;;7860:79;;;;7775:18;2910:314:51;7598:347:80;1918:198:8;;;;;;:::i;:::-;;:::i;757:232:49:-;;;;;;:::i;:::-;;:::i;1978:27:45:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9738:184::-;9837:4;9857:37;9866:10;9878:7;9887:6;9857:8;:37::i;:::-;-1:-1:-1;9911:4:45;9738:184;;;;:::o;577:174:49:-;719:10:34;1248:7:8;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:8;;1240:68;;;;-1:-1:-1;;;1240:68:8;;;;;;;:::i;:::-;;;;;;;;;707:37:49::1;-1:-1:-1::0;;;;;707:18:49;::::1;726:9:::0;737:6;707:18:::1;:37::i;:::-;577:174:::0;;;:::o;3478:544:45:-;-1:-1:-1;;;;;3652:18:45;;3609:4;3652:18;;;:9;:18;;;;;;;;3671:10;3652:30;;;;;;;;-1:-1:-1;;3696:37:45;;3692:256;;3794:6;3774:16;:26;;3749:118;;;;-1:-1:-1;;;3749:118:45;;9855:2:80;3749:118:45;;;9837:21:80;9894:2;9874:18;;;9867:30;9933:34;9913:18;;;9906:62;-1:-1:-1;;;9984:18:80;;;9977:31;10025:19;;3749:118:45;9653:397:80;3749:118:45;3881:56;3890:7;3899:10;3911:25;3930:6;3911:16;:25;:::i;:::-;3881:8;:56::i;:::-;3957:37;3967:7;3976:9;3987:6;3957:9;:37::i;:::-;4011:4;4004:11;;;3478:544;;;;;;:::o;10236:708::-;10294:7;10810:13;10793;:30;10789:149;;;-1:-1:-1;10846:21:45;;10236:708::o;10789:149::-;10905:22;:20;:22::i;:::-;10898:29;;10236:708;:::o;4497:193:51:-;-1:-1:-1;;;;;4648:21:51;;4602:6;4648:21;;;:12;:21;;;;;4631:52;;4671:11;4631:16;:52::i;6482:332:45:-;719:10:34;1248:7:8;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:8;;1240:68;;;;-1:-1:-1;;;1240:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;6568:23:45;::::1;6560:60;;;::::0;-1:-1:-1;;;6560:60:45;;10519:2:80;6560:60:45::1;::::0;::::1;10501:21:80::0;10558:2;10538:18;;;10531:30;-1:-1:-1;;;10577:18:80;;;10570:54;10641:18;;6560:60:45::1;10317:348:80::0;6560:60:45::1;6631:50;6659:1;6663:9;6674:6;6631:19;:50::i;:::-;6707:6;6692:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;6723:20:45;::::1;;::::0;;;:9:::1;:20;::::0;;;;:30;;6747:6;;6723:20;:30:::1;::::0;6747:6;;6723:30:::1;:::i;:::-;::::0;;;-1:-1:-1;;6768:39:45::1;::::0;2035:25:80;;;-1:-1:-1;;;;;6768:39:45;::::1;::::0;6785:1:::1;::::0;-1:-1:-1;;;;;;;;;;;6768:39:45;2023:2:80;2008:18;6768:39:45::1;;;;;;;6482:332:::0;;:::o;6974:90::-;7032:25;7038:10;7050:6;7032:5;:25::i;:::-;6974:90;:::o;3559:117:51:-;-1:-1:-1;;;;;3650:19:51;;;3624:7;3650:19;;;:10;:19;;;;;;;;3559:117::o;3867:107:76:-;3936:31;3945:10;3957:9;3936:8;:31::i;3287:196:51:-;-1:-1:-1;;;;;3447:21:51;;3389:6;3447:21;;;:12;:21;;;;;:28;3418:58;;:28;:58::i;:::-;3411:65;3287:196;-1:-1:-1;;3287:196:51:o;1668:101:8:-;719:10:34;1248:7:8;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:8;;1240:68;;;;-1:-1:-1;;;1240:68:8;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;7501:436:45:-;-1:-1:-1;;;;;7607:18:45;;7580:24;7607:18;;;:9;:18;;;;;;;;7626:10;7607:30;;;;;;;;-1:-1:-1;;7651:37:45;;7647:252;;7749:6;7729:16;:26;;7704:114;;;;-1:-1:-1;;;7704:114:45;;11005:2:80;7704:114:45;;;10987:21:80;11044:2;11024:18;;;11017:30;11083:31;11063:18;;;11056:59;11132:18;;7704:114:45;10803:353:80;7704:114:45;7832:56;7841:7;7850:10;7862:25;7881:6;7862:16;:25;:::i;7832:56::-;7908:22;7914:7;7923:6;7908:5;:22::i;1036:85:8:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:8;;1036:85::o;5022:184:51:-;5116:6;5145:54;5162:23;5187:11;5145:16;:54::i;2053:29:45:-;;;;;;;:::i;3858:198:51:-;-1:-1:-1;;;;;3946:21:51;;3914:6;3946:21;;;:12;:21;;;;;:28;3991:8;;:58;;-1:-1:-1;;;;;4018:21:51;;;;;;:12;:21;;;;;4006:43;;4040:7;4046:1;4040:3;:7;:::i;:::-;4018:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4018:30:51;11086:10;10990:114;4006:43;3991:58;;;4002:1;3984:65;3858:198;-1:-1:-1;;;3858:198:51:o;2703:192:45:-;2807:4;2827:40;2837:10;2849:9;2860:6;2827:9;:40::i;2288:1450:76:-;2548:15;2536:8;:27;;2528:58;;;;-1:-1:-1;;;2528:58:76;;11495:2:80;2528:58:76;;;11477:21:80;11534:2;11514:18;;;11507:30;-1:-1:-1;;;11553:18:80;;;11546:48;11611:18;;2528:58:76;11293:342:80;2528:58:76;-1:-1:-1;;;;;2853:96:76;;;2832:170;;;;-1:-1:-1;;;2832:170:76;;;;;;;:::i;:::-;3020:1;:7;;3025:2;3020:7;:18;;;;3031:1;:7;;3036:2;3031:7;3020:18;3012:58;;;;-1:-1:-1;;;3012:58:76;;;;;;;:::i;:::-;3081:14;3183:18;:16;:18::i;:::-;-1:-1:-1;;;;;3366:16:76;;;;;;:5;:16;;;;;:18;;-1:-1:-1;;;;;;;;;;;1778:95:76;3331:9;;3366:16;:18;;;:::i;:::-;;;;;3410:8;3250:190;;;;;;;;;;12723:25:80;;;-1:-1:-1;;;;;12784:32:80;;;;12779:2;12764:18;;12757:60;12848:2;12833:18;;12826:34;12891:2;12876:18;;12869:34;12710:3;12695:19;;12492:417;3250:190:76;;;;;;;;;;;;;3219:239;;;;;;3121:351;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3098:384;;;;;;3081:401;;3493:24;3520:26;3530:6;3538:1;3541;3544;3520:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3520:26:76;;-1:-1:-1;;3520:26:76;;;-1:-1:-1;;;;;;;3577:30:76;;;;;;:63;;;3631:9;-1:-1:-1;;;;;3611:29:76;:16;-1:-1:-1;;;;;3611:29:76;;3577:63;3556:127;;;;-1:-1:-1;;;3556:127:76;;;;;;;:::i;:::-;3701:30;3710:9;3721;3701:8;:30::i;:::-;3694:37;;2288:1450;;;;;;:::o;8573:427:45:-;8711:4;8731:24;8739:7;8748:6;8731:7;:24::i;:::-;8727:245;;;8771:165;;-1:-1:-1;;;8771:165:45;;-1:-1:-1;;;;;8771:41:45;;;;;:165;;8830:10;;8858:6;;8890:4;;8913:9;;8771:165;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8957:4;8950:11;;;;8727:245;-1:-1:-1;8988:5:45;8573:427;;;;;:::o;4766:1512::-;5046:15;5034:8;:27;;5026:58;;;;-1:-1:-1;;;5026:58:45;;14756:2:80;5026:58:45;;;14738:21:80;14795:2;14775:18;;;14768:30;-1:-1:-1;;;14814:18:80;;;14807:48;14872:18;;5026:58:45;14554:342:80;5026:58:45;-1:-1:-1;;;;;5351:96:45;;;5330:170;;;;-1:-1:-1;;;5330:170:45;;;;;;;:::i;:::-;5518:1;:7;;5523:2;5518:7;:18;;;;5529:1;:7;;5534:2;5529:7;5518:18;5510:58;;;;-1:-1:-1;;;5510:58:45;;;;;;;:::i;:::-;5579:14;5681:18;:16;:18::i;:::-;-1:-1:-1;;;;;5921:12:45;;;;;;:5;:12;;;;;:14;;-1:-1:-1;;;;;;;;;;;1722:117:45;5825:5;;5856:7;;5889:6;;5921:14;;:12;:14;;;:::i;:::-;;;;-1:-1:-1;5748:243:45;;;;;;15188:25:80;;;;-1:-1:-1;;;;;15287:15:80;;;15267:18;;;15260:43;15339:15;;;;15319:18;;;15312:43;15371:18;;;15364:34;15414:19;;;15407:35;15458:19;;;15451:35;;;15160:19;;5748:243:45;;;;;;;;;;;;5717:292;;;;;;5619:404;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5596:437;;;;;;5579:454;;6043:24;6070:26;6080:6;6088:1;6091;6094;6070:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6070:26:45;;-1:-1:-1;;6070:26:45;;;-1:-1:-1;;;;;;;6127:30:45;;;;;;:59;;;6181:5;-1:-1:-1;;;;;6161:25:45;:16;-1:-1:-1;;;;;6161:25:45;;6127:59;6106:123;;;;-1:-1:-1;;;6106:123:45;;;;;;;:::i;:::-;6239:32;6248:5;6255:7;6264:6;6239:8;:32::i;:::-;4959:1319;;4766:1512;;;;;;;:::o;2910:314:51:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;3130:21:51;;3066:16;3130:21;;;:12;:21;;;;;:26;;3066:16;;3100:66;;3130:26;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3130:26:51;10872:35;;;;;;;11213:232;3100:66;3189:28;;;;;;;;;;;;;;;-1:-1:-1;;;;;3189:28:51;;;;;;2910:314;-1:-1:-1;;;;;2910:314:51:o;1918:198:8:-;719:10:34;1248:7:8;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:8;;1240:68;;;;-1:-1:-1;;;1240:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:8;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:8;;15699:2:80;1998:73:8::1;::::0;::::1;15681:21:80::0;15738:2;15718:18;;;15711:30;15777:34;15757:18;;;15750:62;-1:-1:-1;;;15828:18:80;;;15821:36;15874:19;;1998:73:8::1;15497:402:80::0;1998:73:8::1;2081:28;2100:8;2081:18;:28::i;757:232:49:-:0;719:10:34;1248:7:8;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:8;;1240:68;;;;-1:-1:-1;;;1240:68:8;;;;;;;:::i;:::-;919:63:49::1;::::0;-1:-1:-1;;;919:63:49;;-1:-1:-1;;;;;919:22:49;::::1;::::0;::::1;::::0;:63:::1;::::0;950:4:::1;::::0;957:9;;968:7;;977:4;;;;919:63:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;12658:344:45::0;-1:-1:-1;;;;;12780:19:45;;12772:61;;;;-1:-1:-1;;;12772:61:45;;16773:2:80;12772:61:45;;;16755:21:80;16812:2;16792:18;;;16785:30;16851:31;16831:18;;;16824:59;16900:18;;12772:61:45;16571:353:80;12772:61:45;-1:-1:-1;;;;;12851:21:45;;12843:61;;;;-1:-1:-1;;;12843:61:45;;17131:2:80;12843:61:45;;;17113:21:80;17170:2;17150:18;;;17143:30;-1:-1:-1;;;17189:18:80;;;17182:57;17256:18;;12843:61:45;16929:351:80;12843:61:45;-1:-1:-1;;;;;12914:16:45;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:34;;;12963:32;;2035:25:80;;;12963:32:45;;2008:18:80;12963:32:45;;;;;;;;12658:344;;;:::o;701:205:31:-;840:58;;;-1:-1:-1;;;;;17477:32:80;;840:58:31;;;17459:51:80;17526:18;;;;17519:34;;;840:58:31;;;;;;;;;;17432:18:80;;;;840:58:31;;;;;;;;-1:-1:-1;;;;;840:58:31;-1:-1:-1;;;840:58:31;;;813:86;;833:5;;813:19;:86::i;11975:677:45:-;-1:-1:-1;;;;;12102:21:45;;12094:64;;;;-1:-1:-1;;;12094:64:45;;17766:2:80;12094:64:45;;;17748:21:80;17805:2;17785:18;;;17778:30;17844:32;17824:18;;;17817:60;17894:18;;12094:64:45;17564:354:80;12094:64:45;-1:-1:-1;;;;;12176:23:45;;12168:64;;;;-1:-1:-1;;;12168:64:45;;18125:2:80;12168:64:45;;;18107:21:80;18164:2;18144:18;;;18137:30;-1:-1:-1;;;18183:18:80;;;18176:58;18251:18;;12168:64:45;17923:352:80;12168:64:45;-1:-1:-1;;;;;12250:26:45;;12271:4;12250:26;;12242:68;;;;-1:-1:-1;;;12242:68:45;;18482:2:80;12242:68:45;;;18464:21:80;18521:2;18501:18;;;18494:30;18560:31;18540:18;;;18533:59;18609:18;;12242:68:45;18280:353:80;12242:68:45;12321:47;12341:7;12350:9;12361:6;12321:19;:47::i;:::-;-1:-1:-1;;;;;12404:18:45;;12379:22;12404:18;;;:9;:18;;;;;;12440:24;;;;12432:68;;;;-1:-1:-1;;;12432:68:45;;18840:2:80;12432:68:45;;;18822:21:80;18879:2;18859:18;;;18852:30;18918:33;18898:18;;;18891:61;18969:18;;12432:68:45;18638:355:80;12432:68:45;12531:23;12548:6;12531:14;:23;:::i;:::-;-1:-1:-1;;;;;12510:18:45;;;;;;;:9;:18;;;;;;:44;;;;12564:20;;;;;;;;:30;;12588:6;;12510:18;12564:30;;12588:6;;12564:30;:::i;:::-;;;;;;;;12627:9;-1:-1:-1;;;;;12609:36:45;12618:7;-1:-1:-1;;;;;12609:36:45;-1:-1:-1;;;;;;;;;;;12638:6:45;12609:36;;;;2035:25:80;;2023:2;2008:18;;1889:177;12609:36:45;;;;;;;;12084:568;11975:677;;;:::o;13008:488::-;13062:7;13159:141;13338:4;13322:22;;;;;;:::i;:::-;;;;;;;;;;13376:10;;;;;;;;-1:-1:-1;;;13376:10:45;;;;;13127:348;;;;;20495:25:80;;;;20536:18;;20529:34;;;;13366:21:45;20579:18:80;;;20572:34;13409:13:45;20622:18:80;;;20615:34;13452:4:45;20665:19:80;;;20658:61;20467:19;;13127:348:45;;;;;;;;;;;;13100:389;;;;;;13081:408;;13008:488;:::o;8353:1680:51:-;8472:6;9562:12;9548:11;:26;9540:63;;;;-1:-1:-1;;;9540:63:51;;20932:2:80;9540:63:51;;;20914:21:80;20971:2;20951:18;;;20944:30;-1:-1:-1;;;20990:18:80;;;20983:54;21054:18;;9540:63:51;20730:348:80;9540:63:51;9629:12;;9614;9676:289;9689:4;9683:3;:10;9676:289;;;9709:11;9723:34;9747:3;9752:4;9723:23;:34::i;:::-;9709:48;;9771:15;9789:29;9807:5;9813:3;9807:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;10872:35;9807:10;;;;;;;;;;10872:35;;;;10749:165;9789:29;9771:47;;9847:11;9836:8;:22;;;9832:123;;;9885:3;9878:10;;9832:123;;;9933:7;:3;9939:1;9933:7;:::i;:::-;9927:13;;9832:123;9695:270;;9676:289;;;9982:9;;:44;;9998:28;10010:5;10016:8;10023:1;10016:4;:8;:::i;9998:28::-;9982:44;;;9994:1;9982:44;9975:51;8353:1680;-1:-1:-1;;;;;8353:1680:51:o;4023:805:76:-;4152:17;4172:25;4190:6;4172:17;:25::i;:::-;4152:45;-1:-1:-1;;;;;;4237:18:76;;4233:375;;4428:11;;-1:-1:-1;;;;;10239:16:51;4428:20:76;;4442:6;;4428:20;:::i;:::-;:35;;4403:123;;;;-1:-1:-1;;;4403:123:76;;21285:2:80;4403:123:76;;;21267:21:80;21324:2;21304:18;;;21297:30;21363:31;21343:18;;;21336:59;21412:18;;4403:123:76;21083:353:80;4403:123:76;4540:57;4556:23;4581:3;4586:10;-1:-1:-1;;;;;4540:57:76;:15;:57::i;:::-;;;4233:375;-1:-1:-1;;;;;4647:16:76;;4643:109;;4679:62;4695:23;4720:8;4730:10;-1:-1:-1;;;;;4679:62:76;:15;:62::i;:::-;;;4643:109;4762:59;4778:15;4788:4;4778:9;:15::i;:::-;4795:13;4805:2;4795:9;:13::i;:::-;4810:10;-1:-1:-1;;;;;4762:59:76;:15;:59::i;:::-;4142:686;4023:805;;;:::o;11581:388:45:-;-1:-1:-1;;;;;11673:18:45;;11648:22;11673:18;;;:9;:18;;;;;;11709:24;;;;11701:64;;;;-1:-1:-1;;;11701:64:45;;21643:2:80;11701:64:45;;;21625:21:80;21682:2;21662:18;;;21655:30;-1:-1:-1;;;21701:18:80;;;21694:57;21768:18;;11701:64:45;21441:351:80;11701:64:45;11776:48;11796:7;11813:1;11817:6;11776:19;:48::i;:::-;11856:23;11873:6;11856:14;:23;:::i;:::-;-1:-1:-1;;;;;11835:18:45;;;;;;:9;:18;;;;;:44;;;;11889:11;:21;;11904:6;;11835:18;11889:21;;11904:6;;11889:21;:::i;:::-;;;;-1:-1:-1;;11925:37:45;;2035:25:80;;;11951:1:45;;-1:-1:-1;;;;;11925:37:45;;;-1:-1:-1;;;;;;;;;;;11925:37:45;2023:2:80;2008:18;11925:37:45;1889:177:80;4834:433:76;4954:23;4980:20;4990:9;4980;:20::i;:::-;-1:-1:-1;;;;;5054:20:76;;5010:23;5054:20;;;:9;:20;;;;;;4954:46;;-1:-1:-1;5010:23:76;5036:39;;:17;:39::i;:::-;-1:-1:-1;;;;;5085:21:76;;;;;;;:10;:21;;;;;;:33;;-1:-1:-1;;;;;;5085:33:76;;;;;;;;;;5134:54;;5010:65;;-1:-1:-1;5085:33:76;5134:54;;;;;;5085:21;5134:54;5199:61;5215:15;5232:9;5243:16;-1:-1:-1;;;;;5199:61:76;:15;:61::i;3056:187:5:-;3112:6;3147:16;3138:25;;;3130:76;;;;-1:-1:-1;;;3130:76:5;;21999:2:80;3130:76:5;;;21981:21:80;22038:2;22018:18;;;22011:30;22077:34;22057:18;;;22050:62;-1:-1:-1;;;22128:18:80;;;22121:36;22174:19;;3130:76:5;21797:402:80;3130:76:5;-1:-1:-1;3230:5:5;3056:187::o;2270::8:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:8;;;-1:-1:-1;;;;;;2378:17:8;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;3207:706:31:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:31;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:31;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:31;;22688:2:80;3811:85:31;;;22670:21:80;22727:2;22707:18;;;22700:30;22766:34;22746:18;;;22739:62;-1:-1:-1;;;22817:18:80;;;22810:40;22867:19;;3811:85:31;22486:406:80;689:153:4;751:7;824:11;834:1;825:5;;;824:11;:::i;:::-;814:21;;815:5;;;814:21;:::i;2097:187:44:-;2153:6;-1:-1:-1;;;;;2179:25:44;;;2171:76;;;;-1:-1:-1;;;2171:76:44;;23321:2:80;2171:76:44;;;23303:21:80;23360:2;23340:18;;;23333:30;23399:34;23379:18;;;23372:62;-1:-1:-1;;;23450:18:80;;;23443:36;23496:19;;2171:76:44;23119:402:80;11494:96:51;11552:7;11578:5;11582:1;11578;:5;:::i;7180:973::-;7409:12;;7347:17;;;;7443:8;;:42;;7458:27;7470:5;7476:7;7482:1;7476:3;:7;:::i;7458:27::-;7443:42;;;7454:1;7443:42;-1:-1:-1;;;;;7431:54:51;;;7507:20;7510:9;7521:5;7507:2;:20;;:::i;:::-;7495:32;-1:-1:-1;7542:7:51;;7538:417;;7565:16;7584:33;7602:5;7608:7;7614:1;7608:3;:7;:::i;:::-;7602:14;;;;;;;;:::i;7584:33::-;7565:52;;7708:12;7695:9;:25;;;7691:254;;;7757:126;7795:9;7826:39;7855:9;7826:28;:39::i;:::-;-1:-1:-1;;;;;10652:14:51;10646:2;10622:26;;;;-1:-1:-1;;;10622:26:51;10621:45;;10484:189;7757:126;7740:5;7746:7;7752:1;7746:3;:7;:::i;:::-;7740:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:143;;;;;-1:-1:-1;;;;;7740:143:51;;;;;-1:-1:-1;;;;;7740:143:51;;;;;;7901:29;;;;7691:254;7551:404;7538:417;7965:5;7989:147;8023:42;8052:12;8023:28;:42::i;:::-;8083:39;8112:9;8083:28;:39::i;7989:147::-;7965:181;;;;;;;;-1:-1:-1;7965:181:51;;;;;;;;;;;;;-1:-1:-1;;;;;7965:181:51;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7180:973:51;;;;;;;:::o;11639:101::-;11702:7;11728:5;11732:1;11728;:5;:::i;5622:1032::-;5749:3;-1:-1:-1;;;;;5742:10:51;:3;-1:-1:-1;;;;;5742:10:51;;;:24;;;;;5765:1;5756:6;:10;5742:24;5738:910;;;-1:-1:-1;;;;;5786:17:51;;;5782:421;;-1:-1:-1;;;;;6025:17:51;;5948;6025;;;:12;:17;;;;;5948;;5988:130;;6064:8;6094:6;5988:15;:130::i;:::-;5947:171;;;;6162:3;-1:-1:-1;;;;;6141:47:51;-1:-1:-1;;;;;;;;;;;6167:9:51;6178;6141:47;;;;;;23700:25:80;;;23756:2;23741:18;;23734:34;23688:2;23673:18;;23526:248;6141:47:51;;;;;;;;5805:398;;5782:421;-1:-1:-1;;;;;6221:17:51;;;6217:421;;-1:-1:-1;;;;;6465:17:51;;6388;6465;;;:12;:17;;;;;6388;;6428:125;;6504:3;6529:6;6428:15;:125::i;:::-;6387:166;;;;6597:3;-1:-1:-1;;;;;6576:47:51;-1:-1:-1;;;;;;;;;;;6602:9:51;6613;6576:47;;;;;;23700:25:80;;;23756:2;23741:18;;23734:34;23688:2;23673:18;;23526:248;6576:47:51;;;;;;;;6240:398;;5622:1032;;;:::o;3861:223:33:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:33:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:33;;23981:2:80;5137:81:33;;;23963:21:80;24020:2;24000:18;;;23993:30;24059:34;24039:18;;;24032:62;-1:-1:-1;;;24110:18:80;;;24103:36;24156:19;;5137:81:33;23779:402:80;5137:81:33;-1:-1:-1;;;;;1465:19:33;;;5228:60;;;;-1:-1:-1;;;5228:60:33;;24388:2:80;5228:60:33;;;24370:21:80;24427:2;24407:18;;;24400:30;24466:31;24446:18;;;24439:59;24515:18;;5228:60:33;24186:353:80;5228:60:33;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:33;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:33:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:33;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:33;;;;;;;;:::i;14:258:80:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:80;244:16;;237:27;14:258::o;277:::-;319:3;357:5;351:12;384:6;379:3;372:19;400:63;456:6;449:4;444:3;440:14;433:4;426:5;422:16;400:63;:::i;:::-;517:2;496:15;-1:-1:-1;;492:29:80;483:39;;;;524:4;479:50;;277:258;-1:-1:-1;;277:258:80:o;540:220::-;689:2;678:9;671:21;652:4;709:45;750:2;739:9;735:18;727:6;709:45;:::i;765:131::-;-1:-1:-1;;;;;840:31:80;;830:42;;820:70;;886:1;883;876:12;901:315;969:6;977;1030:2;1018:9;1009:7;1005:23;1001:32;998:52;;;1046:1;1043;1036:12;998:52;1085:9;1072:23;1104:31;1129:5;1104:31;:::i;:::-;1154:5;1206:2;1191:18;;;;1178:32;;-1:-1:-1;;;901:315:80:o;1413:471::-;1505:6;1513;1521;1574:2;1562:9;1553:7;1549:23;1545:32;1542:52;;;1590:1;1587;1580:12;1542:52;1629:9;1616:23;1648:31;1673:5;1648:31;:::i;:::-;1698:5;-1:-1:-1;1755:2:80;1740:18;;1727:32;1768:33;1727:32;1768:33;:::i;:::-;1413:471;;1820:7;;-1:-1:-1;;;1874:2:80;1859:18;;;;1846:32;;1413:471::o;3108:180::-;3167:6;3220:2;3208:9;3199:7;3195:23;3191:32;3188:52;;;3236:1;3233;3226:12;3188:52;-1:-1:-1;3259:23:80;;3108:180;-1:-1:-1;3108:180:80:o;3293:247::-;3352:6;3405:2;3393:9;3384:7;3380:23;3376:32;3373:52;;;3421:1;3418;3411:12;3373:52;3460:9;3447:23;3479:31;3504:5;3479:31;:::i;3950:156::-;4016:20;;4076:4;4065:16;;4055:27;;4045:55;;4096:1;4093;4086:12;4045:55;3950:156;;;:::o;4111:665::-;4213:6;4221;4229;4237;4245;4253;4306:3;4294:9;4285:7;4281:23;4277:33;4274:53;;;4323:1;4320;4313:12;4274:53;4362:9;4349:23;4381:31;4406:5;4381:31;:::i;:::-;4431:5;-1:-1:-1;4488:2:80;4473:18;;4460:32;4501:33;4460:32;4501:33;:::i;:::-;4553:7;-1:-1:-1;4607:2:80;4592:18;;4579:32;;-1:-1:-1;4630:36:80;4662:2;4647:18;;4630:36;:::i;:::-;4620:46;;4713:3;4702:9;4698:19;4685:33;4675:43;;4765:3;4754:9;4750:19;4737:33;4727:43;;4111:665;;;;;;;;:::o;4781:127::-;4842:10;4837:3;4833:20;4830:1;4823:31;4873:4;4870:1;4863:15;4897:4;4894:1;4887:15;4913:1124;4999:6;5007;5015;5068:2;5056:9;5047:7;5043:23;5039:32;5036:52;;;5084:1;5081;5074:12;5036:52;5123:9;5110:23;5142:31;5167:5;5142:31;:::i;:::-;5192:5;-1:-1:-1;5244:2:80;5229:18;;5216:32;;-1:-1:-1;5299:2:80;5284:18;;5271:32;-1:-1:-1;;;;;5352:14:80;;;5349:34;;;5379:1;5376;5369:12;5349:34;5417:6;5406:9;5402:22;5392:32;;5462:7;5455:4;5451:2;5447:13;5443:27;5433:55;;5484:1;5481;5474:12;5433:55;5520:2;5507:16;5542:2;5538;5535:10;5532:36;;;5548:18;;:::i;:::-;5623:2;5617:9;5591:2;5677:13;;-1:-1:-1;;5673:22:80;;;5697:2;5669:31;5665:40;5653:53;;;5721:18;;;5741:22;;;5718:46;5715:72;;;5767:18;;:::i;:::-;5807:10;5803:2;5796:22;5842:2;5834:6;5827:18;5882:7;5877:2;5872;5868;5864:11;5860:20;5857:33;5854:53;;;5903:1;5900;5893:12;5854:53;5959:2;5954;5950;5946:11;5941:2;5933:6;5929:15;5916:46;6004:1;5999:2;5994;5986:6;5982:15;5978:24;5971:35;6025:6;6015:16;;;;;;;4913:1124;;;;;:::o;6042:734::-;6153:6;6161;6169;6177;6185;6193;6201;6254:3;6242:9;6233:7;6229:23;6225:33;6222:53;;;6271:1;6268;6261:12;6222:53;6310:9;6297:23;6329:31;6354:5;6329:31;:::i;:::-;6379:5;-1:-1:-1;6436:2:80;6421:18;;6408:32;6449:33;6408:32;6449:33;:::i;:::-;6501:7;-1:-1:-1;6555:2:80;6540:18;;6527:32;;-1:-1:-1;6606:2:80;6591:18;;6578:32;;-1:-1:-1;6629:37:80;6661:3;6646:19;;6629:37;:::i;:::-;6619:47;;6713:3;6702:9;6698:19;6685:33;6675:43;;6765:3;6754:9;6750:19;6737:33;6727:43;;6042:734;;;;;;;;;;:::o;6781:388::-;6849:6;6857;6910:2;6898:9;6889:7;6885:23;6881:32;6878:52;;;6926:1;6923;6916:12;6878:52;6965:9;6952:23;6984:31;7009:5;6984:31;:::i;:::-;7034:5;-1:-1:-1;7091:2:80;7076:18;;7063:32;7104:33;7063:32;7104:33;:::i;:::-;7156:7;7146:17;;;6781:388;;;;;:::o;7174:419::-;7241:6;7249;7302:2;7290:9;7281:7;7277:23;7273:32;7270:52;;;7318:1;7315;7308:12;7270:52;7357:9;7344:23;7376:31;7401:5;7376:31;:::i;:::-;7426:5;-1:-1:-1;7483:2:80;7468:18;;7455:32;7531:10;7518:24;;7506:37;;7496:65;;7557:1;7554;7547:12;7950:952;8063:6;8071;8079;8087;8095;8148:3;8136:9;8127:7;8123:23;8119:33;8116:53;;;8165:1;8162;8155:12;8116:53;8204:9;8191:23;8223:31;8248:5;8223:31;:::i;:::-;8273:5;-1:-1:-1;8330:2:80;8315:18;;8302:32;8343:33;8302:32;8343:33;:::i;:::-;8395:7;-1:-1:-1;8449:2:80;8434:18;;8421:32;;-1:-1:-1;8504:2:80;8489:18;;8476:32;-1:-1:-1;;;;;8557:14:80;;;8554:34;;;8584:1;8581;8574:12;8554:34;8622:6;8611:9;8607:22;8597:32;;8667:7;8660:4;8656:2;8652:13;8648:27;8638:55;;8689:1;8686;8679:12;8638:55;8729:2;8716:16;8755:2;8747:6;8744:14;8741:34;;;8771:1;8768;8761:12;8741:34;8816:7;8811:2;8802:6;8798:2;8794:15;8790:24;8787:37;8784:57;;;8837:1;8834;8827:12;8784:57;7950:952;;;;-1:-1:-1;7950:952:80;;-1:-1:-1;8868:2:80;8860:11;;8890:6;7950:952;-1:-1:-1;;;7950:952:80:o;8907:380::-;8986:1;8982:12;;;;9029;;;9050:61;;9104:4;9096:6;9092:17;9082:27;;9050:61;9157:2;9149:6;9146:14;9126:18;9123:38;9120:161;;;9203:10;9198:3;9194:20;9191:1;9184:31;9238:4;9235:1;9228:15;9266:4;9263:1;9256:15;9120:161;;8907:380;;;:::o;9292:356::-;9494:2;9476:21;;;9513:18;;;9506:30;9572:34;9567:2;9552:18;;9545:62;9639:2;9624:18;;9292:356::o;10055:127::-;10116:10;10111:3;10107:20;10104:1;10097:31;10147:4;10144:1;10137:15;10171:4;10168:1;10161:15;10187:125;10227:4;10255:1;10252;10249:8;10246:34;;;10260:18;;:::i;:::-;-1:-1:-1;10297:9:80;;10187:125::o;10670:128::-;10710:3;10741:1;10737:6;10734:1;10731:13;10728:39;;;10747:18;;:::i;:::-;-1:-1:-1;10783:9:80;;10670:128::o;11161:127::-;11222:10;11217:3;11213:20;11210:1;11203:31;11253:4;11250:1;11243:15;11277:4;11274:1;11267:15;11640:351;11842:2;11824:21;;;11881:2;11861:18;;;11854:30;-1:-1:-1;;;11915:2:80;11900:18;;11893:57;11982:2;11967:18;;11640:351::o;11996:::-;12198:2;12180:21;;;12237:2;12217:18;;;12210:30;-1:-1:-1;;;12271:2:80;12256:18;;12249:57;12338:2;12323:18;;11996:351::o;12352:135::-;12391:3;-1:-1:-1;;12412:17:80;;12409:43;;;12432:18;;:::i;:::-;-1:-1:-1;12479:1:80;12468:13;;12352:135::o;12914:392::-;-1:-1:-1;;;13172:27:80;;13224:1;13215:11;;13208:27;;;;13260:2;13251:12;;13244:28;13297:2;13288:12;;12914:392::o;13311:398::-;13538:25;;;13611:4;13599:17;;;;13594:2;13579:18;;13572:45;13648:2;13633:18;;13626:34;13691:2;13676:18;;13669:34;13525:3;13510:19;;13311:398::o;13714:341::-;13916:2;13898:21;;;13955:2;13935:18;;;13928:30;-1:-1:-1;;;13989:2:80;13974:18;;13967:47;14046:2;14031:18;;13714:341::o;14060:489::-;-1:-1:-1;;;;;14329:15:80;;;14311:34;;14376:2;14361:18;;14354:34;;;14424:15;;14419:2;14404:18;;14397:43;14476:3;14471:2;14456:18;;14449:31;;;14254:4;;14497:46;;14523:19;;14515:6;14497:46;:::i;:::-;14489:54;14060:489;-1:-1:-1;;;;;;14060:489:80:o;15904:662::-;-1:-1:-1;;;;;16183:15:80;;;16165:34;;16235:15;;16230:2;16215:18;;16208:43;16282:2;16267:18;;16260:34;;;16330:3;16325:2;16310:18;;16303:31;;;16350:19;;16343:35;;;16108:4;16371:6;16421;16145:3;16400:19;;16387:49;16486:1;16480:3;16471:6;16460:9;16456:22;16452:32;16445:43;16556:3;16549:2;16545:7;16540:2;16532:6;16528:15;16524:29;16513:9;16509:45;16505:55;16497:63;;15904:662;;;;;;;;:::o;19127:1104::-;19257:3;19286:1;19319:6;19313:13;19349:3;19371:1;19399:9;19395:2;19391:18;19381:28;;19459:2;19448:9;19444:18;19481;19471:61;;19525:4;19517:6;19513:17;19503:27;;19471:61;19551:2;19599;19591:6;19588:14;19568:18;19565:38;19562:165;;;-1:-1:-1;;;19626:33:80;;19682:4;19679:1;19672:15;19712:4;19633:3;19700:17;19562:165;19743:18;19770:104;;;;19888:1;19883:323;;;;19736:470;;19770:104;-1:-1:-1;;19803:24:80;;19791:37;;19848:16;;;;-1:-1:-1;19770:104:80;;19883:323;19074:1;19067:14;;;19111:4;19098:18;;19981:1;19995:165;20009:6;20006:1;20003:13;19995:165;;;20087:14;;20074:11;;;20067:35;20130:16;;;;20024:10;;19995:165;;;19999:3;;20189:6;20184:3;20180:16;20173:23;;19736:470;-1:-1:-1;20222:3:80;;19127:1104;-1:-1:-1;;;;;;;;19127:1104:80:o;22204:277::-;22271:6;22324:2;22312:9;22303:7;22299:23;22295:32;22292:52;;;22340:1;22337;22330:12;22292:52;22372:9;22366:16;22425:5;22418:13;22411:21;22404:5;22401:32;22391:60;;22447:1;22444;22437:12;22897:217;22937:1;22963;22953:132;;23007:10;23002:3;22998:20;22995:1;22988:31;23042:4;23039:1;23032:15;23070:4;23067:1;23060:15;22953:132;-1:-1:-1;23099:9:80;;22897:217::o;24544:274::-;24673:3;24711:6;24705:13;24727:53;24773:6;24768:3;24761:4;24753:6;24749:17;24727:53;:::i;:::-;24796:16;;;;;24544:274;-1:-1:-1;;24544:274:80:o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "1943400",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "DELEGATION_TYPEHASH()": "infinite",
        "DOMAIN_SEPARATOR()": "infinite",
        "PERMIT_TYPEHASH()": "infinite",
        "allowance(address,address)": "infinite",
        "approve(address,uint256)": "24591",
        "approveAndCall(address,uint256,bytes)": "infinite",
        "balanceOf(address)": "2799",
        "burn(uint256)": "infinite",
        "burnFrom(address,uint256)": "infinite",
        "cachedChainId()": "infinite",
        "cachedDomainSeparator()": "infinite",
        "checkpoints(address,uint32)": "7376",
        "decimals()": "314",
        "delegate(address)": "infinite",
        "delegateBySig(address,address,uint256,uint8,bytes32,bytes32)": "infinite",
        "delegates(address)": "2793",
        "getPastTotalSupply(uint256)": "infinite",
        "getPastVotes(address,uint256)": "8932",
        "getVotes(address)": "infinite",
        "mint(address,uint256)": "infinite",
        "name()": "infinite",
        "nonce(address)": "2821",
        "numCheckpoints(address)": "2928",
        "owner()": "2742",
        "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
        "recoverERC20(address,address,uint256)": "infinite",
        "recoverERC721(address,address,uint256,bytes)": "infinite",
        "renounceOwnership()": "28489",
        "symbol()": "infinite",
        "totalSupply()": "2339",
        "transfer(address,uint256)": "infinite",
        "transferFrom(address,address,uint256)": "infinite",
        "transferOwnership(address)": "infinite"
      },
      "internal": {
        "beforeTokenTransfer(address,address,uint256)": "infinite",
        "delegate(address,address)": "infinite"
      }
    },
    "methodIdentifiers": {
      "DELEGATION_TYPEHASH()": "e7a324dc",
      "DOMAIN_SEPARATOR()": "3644e515",
      "PERMIT_TYPEHASH()": "30adf81f",
      "allowance(address,address)": "dd62ed3e",
      "approve(address,uint256)": "095ea7b3",
      "approveAndCall(address,uint256,bytes)": "cae9ca51",
      "balanceOf(address)": "70a08231",
      "burn(uint256)": "42966c68",
      "burnFrom(address,uint256)": "79cc6790",
      "cachedChainId()": "771da5c5",
      "cachedDomainSeparator()": "b4f94b2e",
      "checkpoints(address,uint32)": "f1127ed8",
      "decimals()": "313ce567",
      "delegate(address)": "5c19a95c",
      "delegateBySig(address,address,uint256,uint8,bytes32,bytes32)": "b20d7fa9",
      "delegates(address)": "587cde1e",
      "getPastTotalSupply(uint256)": "8e539e8c",
      "getPastVotes(address,uint256)": "3a46b1a8",
      "getVotes(address)": "9ab24eb0",
      "mint(address,uint256)": "40c10f19",
      "name()": "06fdde03",
      "nonce(address)": "70ae92d2",
      "numCheckpoints(address)": "6fcfff45",
      "owner()": "8da5cb5b",
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
      "recoverERC20(address,address,uint256)": "1171bda9",
      "recoverERC721(address,address,uint256,bytes)": "fc4e51f6",
      "renounceOwnership()": "715018a6",
      "symbol()": "95d89b41",
      "totalSupply()": "18160ddd",
      "transfer(address,uint256)": "a9059cbb",
      "transferFrom(address,address,uint256)": "23b872dd",
      "transferOwnership(address)": "f2fde38b"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cachedChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cachedDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct Checkpoints.Checkpoint\",\"name\":\"checkpoint\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signatory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"recoverERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"By default, token balance does not account for voting power.      This makes transfers cheaper. The downside is that it requires users      to delegate to themselves to activate checkpoints and have their      voting power tracked.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"If the `amount` is set to `type(uint256).max` then      `transferFrom` and `burnFrom` will not reduce an allowance.      Beware that changing an allowance with this method brings the risk      that someone may use both the old and the new allowance by      unfortunate transaction ordering. One possible solution to mitigate      this race condition is to first reduce the spender's allowance to 0      and set the desired value afterwards:      https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"returns\":{\"_0\":\"True if the operation succeeded.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"If the `amount` is set to `type(uint256).max` then      `transferFrom` and `burnFrom` will not reduce an allowance.\",\"returns\":{\"_0\":\"True if both approval and `receiveApproval` calls succeeded.\"}},\"burn(uint256)\":{\"details\":\"Requirements:       - the caller must have a balance of at least `amount`.\"},\"burnFrom(address,uint256)\":{\"details\":\"Requirements:      - `account` must have a balance of at least `amount`,      - the caller must have allowance for `account`'s tokens of at least        `amount`.\"},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,address,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The time at which to expire the signature\",\"delegatee\":\"The address to delegate votes to\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getPastTotalSupply(uint256)\":{\"details\":\"`blockNumber` must have been already mined\",\"params\":{\"blockNumber\":\"The block number to get the total supply at\"}},\"getPastVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will      revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block\"}},\"getVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"returns\":{\"_0\":\"The number of current votes for `account`\"}},\"mint(address,uint256)\":{\"details\":\"Requirements:      - `recipient` cannot be the zero address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The deadline argument can be set to `type(uint256).max to create         permits that effectively never expire.  If the `amount` is set         to `type(uint256).max` then `transferFrom` and `burnFrom` will         not reduce an allowance.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transfer(address,uint256)\":{\"details\":\"Requirements:       - `recipient` cannot be the zero address,       - the caller must have a balance of at least `amount`.\",\"returns\":{\"_0\":\"True if the operation succeeded, reverts otherwise.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Requirements:      - `spender` and `recipient` cannot be the zero address,      - `spender` must have a balance of at least `amount`,      - the caller must have allowance for `spender`'s tokens of at least        `amount`.\",\"returns\":{\"_0\":\"True if the operation succeeded, reverts otherwise.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"T token\",\"version\":1},\"userdoc\":{\"events\":{\"DelegateChanged(address,address,address)\":{\"notice\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"notice\":\"Emitted when a balance or delegate change results in changes         to an account's voting power.\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by         `delegateBySig`.\"},\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns hash of EIP712 Domain struct with the token name as         a signing domain and token contract as a verifying contract.         Used to construct EIP2612 signature provided to `permit`         function.\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"Returns EIP2612 Permit message hash. Used to construct EIP2612         signature provided to `permit` function.\"},\"allowance(address,address)\":{\"notice\":\"The remaining number of tokens that spender will be         allowed to spend on behalf of owner through `transferFrom` and         `burnFrom`. This is zero by default.\"},\"approve(address,uint256)\":{\"notice\":\"Sets `amount` as the allowance of `spender` over the caller's         tokens.\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"Calls `receiveApproval` function on spender previously approving         the spender to withdraw from the caller multiple times, up to         the `amount` amount. If this function is called again, it         overwrites the current allowance with `amount`. Reverts if the         approval reverted or if `receiveApproval` call on the spender         reverted.\"},\"balanceOf(address)\":{\"notice\":\"The amount of tokens owned by the given account.\"},\"burn(uint256)\":{\"notice\":\"Destroys `amount` tokens from the caller.\"},\"burnFrom(address,uint256)\":{\"notice\":\"Destroys `amount` of tokens from `account` using the allowance         mechanism. `amount` is then deducted from the caller's allowance         unless the allowance was made for `type(uint256).max`.\"},\"decimals()\":{\"notice\":\"The decimals places of the token.\"},\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`.\"},\"delegateBySig(address,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"delegates(address)\":{\"notice\":\"Get the address `account` is currently delegating to.\"},\"getPastTotalSupply(uint256)\":{\"notice\":\"Retrieve the `totalSupply` at the end of `blockNumber`.         Note, this value is the sum of all balances, but it is NOT the         sum of all the delegated votes!\"},\"getPastVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of         a block number.\"},\"getVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`.\"},\"mint(address,uint256)\":{\"notice\":\"Creates `amount` tokens and assigns them to `account`,         increasing the total supply.\"},\"name()\":{\"notice\":\"The name of the token.\"},\"nonce(address)\":{\"notice\":\"Returns the current nonce for EIP2612 permission for the         provided token owner for a replay protection. Used to construct         EIP2612 signature provided to `permit` function.\"},\"numCheckpoints(address)\":{\"notice\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"EIP2612 approval made with secp256k1 signature.         Users can authorize a transfer of their tokens with a signature         conforming EIP712 standard, rather than an on-chain transaction         from their address. Anyone can submit this signature on the         user's behalf by calling the permit function, paying gas fees,         and possibly performing other actions in the same transaction.\"},\"symbol()\":{\"notice\":\"The symbol of the token.\"},\"totalSupply()\":{\"notice\":\"The amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"notice\":\"Moves `amount` tokens from the caller's account to `recipient`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Moves `amount` tokens from `spender` to `recipient` using the         allowance mechanism. `amount` is then deducted from the caller's         allowance unless the allowance was made for `type(uint256).max`.\"}},\"notice\":\"Threshold Network T token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/T.sol\":\"T\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary MathUpgradeable {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a / b + (a % b == 0 ? 0 : 1);\\n    }\\n}\\n\",\"keccak256\":\"0xd0a917e32d1251a9b2f1dea15e932815d5382e64e6b0a18104664a6cc774cd70\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeCast.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\\n * checks.\\n *\\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\\n * easily result in undesired exploitation or bugs, since developers usually\\n * assume that overflows raise errors. `SafeCast` restores this intuition by\\n * reverting the transaction when such an operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n *\\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\\n * all math on `uint256` and `int256` and then downcasting.\\n */\\nlibrary SafeCastUpgradeable {\\n    /**\\n     * @dev Returns the downcasted uint224 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint224).\\n     *\\n     * Counterpart to Solidity's `uint224` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 224 bits\\n     */\\n    function toUint224(uint256 value) internal pure returns (uint224) {\\n        require(value <= type(uint224).max, \\\"SafeCast: value doesn't fit in 224 bits\\\");\\n        return uint224(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint128 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint128).\\n     *\\n     * Counterpart to Solidity's `uint128` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 128 bits\\n     */\\n    function toUint128(uint256 value) internal pure returns (uint128) {\\n        require(value <= type(uint128).max, \\\"SafeCast: value doesn't fit in 128 bits\\\");\\n        return uint128(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint96 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint96).\\n     *\\n     * Counterpart to Solidity's `uint96` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 96 bits\\n     */\\n    function toUint96(uint256 value) internal pure returns (uint96) {\\n        require(value <= type(uint96).max, \\\"SafeCast: value doesn't fit in 96 bits\\\");\\n        return uint96(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint64 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint64).\\n     *\\n     * Counterpart to Solidity's `uint64` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 64 bits\\n     */\\n    function toUint64(uint256 value) internal pure returns (uint64) {\\n        require(value <= type(uint64).max, \\\"SafeCast: value doesn't fit in 64 bits\\\");\\n        return uint64(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint32 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint32).\\n     *\\n     * Counterpart to Solidity's `uint32` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 32 bits\\n     */\\n    function toUint32(uint256 value) internal pure returns (uint32) {\\n        require(value <= type(uint32).max, \\\"SafeCast: value doesn't fit in 32 bits\\\");\\n        return uint32(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint16 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint16).\\n     *\\n     * Counterpart to Solidity's `uint16` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 16 bits\\n     */\\n    function toUint16(uint256 value) internal pure returns (uint16) {\\n        require(value <= type(uint16).max, \\\"SafeCast: value doesn't fit in 16 bits\\\");\\n        return uint16(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint8 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint8).\\n     *\\n     * Counterpart to Solidity's `uint8` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 8 bits.\\n     */\\n    function toUint8(uint256 value) internal pure returns (uint8) {\\n        require(value <= type(uint8).max, \\\"SafeCast: value doesn't fit in 8 bits\\\");\\n        return uint8(value);\\n    }\\n\\n    /**\\n     * @dev Converts a signed int256 into an unsigned uint256.\\n     *\\n     * Requirements:\\n     *\\n     * - input must be greater than or equal to 0.\\n     */\\n    function toUint256(int256 value) internal pure returns (uint256) {\\n        require(value >= 0, \\\"SafeCast: value must be positive\\\");\\n        return uint256(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int128 from int256, reverting on\\n     * overflow (when the input is less than smallest int128 or\\n     * greater than largest int128).\\n     *\\n     * Counterpart to Solidity's `int128` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 128 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt128(int256 value) internal pure returns (int128) {\\n        require(value >= type(int128).min && value <= type(int128).max, \\\"SafeCast: value doesn't fit in 128 bits\\\");\\n        return int128(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int64 from int256, reverting on\\n     * overflow (when the input is less than smallest int64 or\\n     * greater than largest int64).\\n     *\\n     * Counterpart to Solidity's `int64` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 64 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt64(int256 value) internal pure returns (int64) {\\n        require(value >= type(int64).min && value <= type(int64).max, \\\"SafeCast: value doesn't fit in 64 bits\\\");\\n        return int64(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int32 from int256, reverting on\\n     * overflow (when the input is less than smallest int32 or\\n     * greater than largest int32).\\n     *\\n     * Counterpart to Solidity's `int32` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 32 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt32(int256 value) internal pure returns (int32) {\\n        require(value >= type(int32).min && value <= type(int32).max, \\\"SafeCast: value doesn't fit in 32 bits\\\");\\n        return int32(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int16 from int256, reverting on\\n     * overflow (when the input is less than smallest int16 or\\n     * greater than largest int16).\\n     *\\n     * Counterpart to Solidity's `int16` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 16 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt16(int256 value) internal pure returns (int16) {\\n        require(value >= type(int16).min && value <= type(int16).max, \\\"SafeCast: value doesn't fit in 16 bits\\\");\\n        return int16(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int8 from int256, reverting on\\n     * overflow (when the input is less than smallest int8 or\\n     * greater than largest int8).\\n     *\\n     * Counterpart to Solidity's `int8` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 8 bits.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt8(int256 value) internal pure returns (int8) {\\n        require(value >= type(int8).min && value <= type(int8).max, \\\"SafeCast: value doesn't fit in 8 bits\\\");\\n        return int8(value);\\n    }\\n\\n    /**\\n     * @dev Converts an unsigned uint256 into a signed int256.\\n     *\\n     * Requirements:\\n     *\\n     * - input must be less than or equal to maxInt256.\\n     */\\n    function toInt256(uint256 value) internal pure returns (int256) {\\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\\n        require(value <= uint256(type(int256).max), \\\"SafeCast: value doesn't fit in an int256\\\");\\n        return int256(value);\\n    }\\n}\\n\",\"keccak256\":\"0xcec885ecdf113b4265ed0856972d7ff167bfeb3802604b18cbb782bf47ecc4ae\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeCast.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\\n * checks.\\n *\\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\\n * easily result in undesired exploitation or bugs, since developers usually\\n * assume that overflows raise errors. `SafeCast` restores this intuition by\\n * reverting the transaction when such an operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n *\\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\\n * all math on `uint256` and `int256` and then downcasting.\\n */\\nlibrary SafeCast {\\n    /**\\n     * @dev Returns the downcasted uint224 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint224).\\n     *\\n     * Counterpart to Solidity's `uint224` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 224 bits\\n     */\\n    function toUint224(uint256 value) internal pure returns (uint224) {\\n        require(value <= type(uint224).max, \\\"SafeCast: value doesn't fit in 224 bits\\\");\\n        return uint224(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint128 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint128).\\n     *\\n     * Counterpart to Solidity's `uint128` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 128 bits\\n     */\\n    function toUint128(uint256 value) internal pure returns (uint128) {\\n        require(value <= type(uint128).max, \\\"SafeCast: value doesn't fit in 128 bits\\\");\\n        return uint128(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint96 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint96).\\n     *\\n     * Counterpart to Solidity's `uint96` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 96 bits\\n     */\\n    function toUint96(uint256 value) internal pure returns (uint96) {\\n        require(value <= type(uint96).max, \\\"SafeCast: value doesn't fit in 96 bits\\\");\\n        return uint96(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint64 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint64).\\n     *\\n     * Counterpart to Solidity's `uint64` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 64 bits\\n     */\\n    function toUint64(uint256 value) internal pure returns (uint64) {\\n        require(value <= type(uint64).max, \\\"SafeCast: value doesn't fit in 64 bits\\\");\\n        return uint64(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint32 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint32).\\n     *\\n     * Counterpart to Solidity's `uint32` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 32 bits\\n     */\\n    function toUint32(uint256 value) internal pure returns (uint32) {\\n        require(value <= type(uint32).max, \\\"SafeCast: value doesn't fit in 32 bits\\\");\\n        return uint32(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint16 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint16).\\n     *\\n     * Counterpart to Solidity's `uint16` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 16 bits\\n     */\\n    function toUint16(uint256 value) internal pure returns (uint16) {\\n        require(value <= type(uint16).max, \\\"SafeCast: value doesn't fit in 16 bits\\\");\\n        return uint16(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint8 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint8).\\n     *\\n     * Counterpart to Solidity's `uint8` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 8 bits.\\n     */\\n    function toUint8(uint256 value) internal pure returns (uint8) {\\n        require(value <= type(uint8).max, \\\"SafeCast: value doesn't fit in 8 bits\\\");\\n        return uint8(value);\\n    }\\n\\n    /**\\n     * @dev Converts a signed int256 into an unsigned uint256.\\n     *\\n     * Requirements:\\n     *\\n     * - input must be greater than or equal to 0.\\n     */\\n    function toUint256(int256 value) internal pure returns (uint256) {\\n        require(value >= 0, \\\"SafeCast: value must be positive\\\");\\n        return uint256(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int128 from int256, reverting on\\n     * overflow (when the input is less than smallest int128 or\\n     * greater than largest int128).\\n     *\\n     * Counterpart to Solidity's `int128` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 128 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt128(int256 value) internal pure returns (int128) {\\n        require(value >= type(int128).min && value <= type(int128).max, \\\"SafeCast: value doesn't fit in 128 bits\\\");\\n        return int128(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int64 from int256, reverting on\\n     * overflow (when the input is less than smallest int64 or\\n     * greater than largest int64).\\n     *\\n     * Counterpart to Solidity's `int64` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 64 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt64(int256 value) internal pure returns (int64) {\\n        require(value >= type(int64).min && value <= type(int64).max, \\\"SafeCast: value doesn't fit in 64 bits\\\");\\n        return int64(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int32 from int256, reverting on\\n     * overflow (when the input is less than smallest int32 or\\n     * greater than largest int32).\\n     *\\n     * Counterpart to Solidity's `int32` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 32 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt32(int256 value) internal pure returns (int32) {\\n        require(value >= type(int32).min && value <= type(int32).max, \\\"SafeCast: value doesn't fit in 32 bits\\\");\\n        return int32(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int16 from int256, reverting on\\n     * overflow (when the input is less than smallest int16 or\\n     * greater than largest int16).\\n     *\\n     * Counterpart to Solidity's `int16` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 16 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt16(int256 value) internal pure returns (int16) {\\n        require(value >= type(int16).min && value <= type(int16).max, \\\"SafeCast: value doesn't fit in 16 bits\\\");\\n        return int16(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int8 from int256, reverting on\\n     * overflow (when the input is less than smallest int8 or\\n     * greater than largest int8).\\n     *\\n     * Counterpart to Solidity's `int8` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 8 bits.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt8(int256 value) internal pure returns (int8) {\\n        require(value >= type(int8).min && value <= type(int8).max, \\\"SafeCast: value doesn't fit in 8 bits\\\");\\n        return int8(value);\\n    }\\n\\n    /**\\n     * @dev Converts an unsigned uint256 into a signed int256.\\n     *\\n     * Requirements:\\n     *\\n     * - input must be less than or equal to maxInt256.\\n     */\\n    function toInt256(uint256 value) internal pure returns (int256) {\\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\\n        require(value <= uint256(type(int256).max), \\\"SafeCast: value doesn't fit in an int256\\\");\\n        return int256(value);\\n    }\\n}\\n\",\"keccak256\":\"0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7\",\"license\":\"MIT\"},\"@thesis/solidity-contracts/contracts/token/ERC20WithPermit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./IERC20WithPermit.sol\\\";\\nimport \\\"./IReceiveApproval.sol\\\";\\n\\n/// @title  ERC20WithPermit\\n/// @notice Burnable ERC20 token with EIP2612 permit functionality. User can\\n///         authorize a transfer of their token with a signature conforming\\n///         EIP712 standard instead of an on-chain transaction from their\\n///         address. Anyone can submit this signature on the user's behalf by\\n///         calling the permit function, as specified in EIP2612 standard,\\n///         paying gas fees, and possibly performing other actions in the same\\n///         transaction.\\ncontract ERC20WithPermit is IERC20WithPermit, Ownable {\\n    /// @notice The amount of tokens owned by the given account.\\n    mapping(address => uint256) public override balanceOf;\\n\\n    /// @notice The remaining number of tokens that spender will be\\n    ///         allowed to spend on behalf of owner through `transferFrom` and\\n    ///         `burnFrom`. This is zero by default.\\n    mapping(address => mapping(address => uint256)) public override allowance;\\n\\n    /// @notice Returns the current nonce for EIP2612 permission for the\\n    ///         provided token owner for a replay protection. Used to construct\\n    ///         EIP2612 signature provided to `permit` function.\\n    mapping(address => uint256) public override nonce;\\n\\n    uint256 public immutable cachedChainId;\\n    bytes32 public immutable cachedDomainSeparator;\\n\\n    /// @notice Returns EIP2612 Permit message hash. Used to construct EIP2612\\n    ///         signature provided to `permit` function.\\n    bytes32 public constant override PERMIT_TYPEHASH =\\n        keccak256(\\n            \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n        );\\n\\n    /// @notice The amount of tokens in existence.\\n    uint256 public override totalSupply;\\n\\n    /// @notice The name of the token.\\n    string public override name;\\n\\n    /// @notice The symbol of the token.\\n    string public override symbol;\\n\\n    /// @notice The decimals places of the token.\\n    uint8 public constant override decimals = 18;\\n\\n    constructor(string memory _name, string memory _symbol) {\\n        name = _name;\\n        symbol = _symbol;\\n\\n        cachedChainId = block.chainid;\\n        cachedDomainSeparator = buildDomainSeparator();\\n    }\\n\\n    /// @notice Moves `amount` tokens from the caller's account to `recipient`.\\n    /// @return True if the operation succeeded, reverts otherwise.\\n    /// @dev Requirements:\\n    ///       - `recipient` cannot be the zero address,\\n    ///       - the caller must have a balance of at least `amount`.\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        override\\n        returns (bool)\\n    {\\n        _transfer(msg.sender, recipient, amount);\\n        return true;\\n    }\\n\\n    /// @notice Moves `amount` tokens from `spender` to `recipient` using the\\n    ///         allowance mechanism. `amount` is then deducted from the caller's\\n    ///         allowance unless the allowance was made for `type(uint256).max`.\\n    /// @return True if the operation succeeded, reverts otherwise.\\n    /// @dev Requirements:\\n    ///      - `spender` and `recipient` cannot be the zero address,\\n    ///      - `spender` must have a balance of at least `amount`,\\n    ///      - the caller must have allowance for `spender`'s tokens of at least\\n    ///        `amount`.\\n    function transferFrom(\\n        address spender,\\n        address recipient,\\n        uint256 amount\\n    ) external override returns (bool) {\\n        uint256 currentAllowance = allowance[spender][msg.sender];\\n        if (currentAllowance != type(uint256).max) {\\n            require(\\n                currentAllowance >= amount,\\n                \\\"Transfer amount exceeds allowance\\\"\\n            );\\n            _approve(spender, msg.sender, currentAllowance - amount);\\n        }\\n        _transfer(spender, recipient, amount);\\n        return true;\\n    }\\n\\n    /// @notice EIP2612 approval made with secp256k1 signature.\\n    ///         Users can authorize a transfer of their tokens with a signature\\n    ///         conforming EIP712 standard, rather than an on-chain transaction\\n    ///         from their address. Anyone can submit this signature on the\\n    ///         user's behalf by calling the permit function, paying gas fees,\\n    ///         and possibly performing other actions in the same transaction.\\n    /// @dev    The deadline argument can be set to `type(uint256).max to create\\n    ///         permits that effectively never expire.  If the `amount` is set\\n    ///         to `type(uint256).max` then `transferFrom` and `burnFrom` will\\n    ///         not reduce an allowance.\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override {\\n        /* solhint-disable-next-line not-rely-on-time */\\n        require(deadline >= block.timestamp, \\\"Permission expired\\\");\\n\\n        // Validate `s` and `v` values for a malleability concern described in EIP2.\\n        // Only signatures with `s` value in the lower half of the secp256k1\\n        // curve's order and `v` value of 27 or 28 are considered valid.\\n        require(\\n            uint256(s) <=\\n                0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\\n            \\\"Invalid signature 's' value\\\"\\n        );\\n        require(v == 27 || v == 28, \\\"Invalid signature 'v' value\\\");\\n\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR(),\\n                keccak256(\\n                    abi.encode(\\n                        PERMIT_TYPEHASH,\\n                        owner,\\n                        spender,\\n                        amount,\\n                        nonce[owner]++,\\n                        deadline\\n                    )\\n                )\\n            )\\n        );\\n        address recoveredAddress = ecrecover(digest, v, r, s);\\n        require(\\n            recoveredAddress != address(0) && recoveredAddress == owner,\\n            \\\"Invalid signature\\\"\\n        );\\n        _approve(owner, spender, amount);\\n    }\\n\\n    /// @notice Creates `amount` tokens and assigns them to `account`,\\n    ///         increasing the total supply.\\n    /// @dev Requirements:\\n    ///      - `recipient` cannot be the zero address.\\n    function mint(address recipient, uint256 amount) external onlyOwner {\\n        require(recipient != address(0), \\\"Mint to the zero address\\\");\\n\\n        beforeTokenTransfer(address(0), recipient, amount);\\n\\n        totalSupply += amount;\\n        balanceOf[recipient] += amount;\\n        emit Transfer(address(0), recipient, amount);\\n    }\\n\\n    /// @notice Destroys `amount` tokens from the caller.\\n    /// @dev Requirements:\\n    ///       - the caller must have a balance of at least `amount`.\\n    function burn(uint256 amount) external override {\\n        _burn(msg.sender, amount);\\n    }\\n\\n    /// @notice Destroys `amount` of tokens from `account` using the allowance\\n    ///         mechanism. `amount` is then deducted from the caller's allowance\\n    ///         unless the allowance was made for `type(uint256).max`.\\n    /// @dev Requirements:\\n    ///      - `account` must have a balance of at least `amount`,\\n    ///      - the caller must have allowance for `account`'s tokens of at least\\n    ///        `amount`.\\n    function burnFrom(address account, uint256 amount) external override {\\n        uint256 currentAllowance = allowance[account][msg.sender];\\n        if (currentAllowance != type(uint256).max) {\\n            require(\\n                currentAllowance >= amount,\\n                \\\"Burn amount exceeds allowance\\\"\\n            );\\n            _approve(account, msg.sender, currentAllowance - amount);\\n        }\\n        _burn(account, amount);\\n    }\\n\\n    /// @notice Calls `receiveApproval` function on spender previously approving\\n    ///         the spender to withdraw from the caller multiple times, up to\\n    ///         the `amount` amount. If this function is called again, it\\n    ///         overwrites the current allowance with `amount`. Reverts if the\\n    ///         approval reverted or if `receiveApproval` call on the spender\\n    ///         reverted.\\n    /// @return True if both approval and `receiveApproval` calls succeeded.\\n    /// @dev If the `amount` is set to `type(uint256).max` then\\n    ///      `transferFrom` and `burnFrom` will not reduce an allowance.\\n    function approveAndCall(\\n        address spender,\\n        uint256 amount,\\n        bytes memory extraData\\n    ) external override returns (bool) {\\n        if (approve(spender, amount)) {\\n            IReceiveApproval(spender).receiveApproval(\\n                msg.sender,\\n                amount,\\n                address(this),\\n                extraData\\n            );\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    /// @notice Sets `amount` as the allowance of `spender` over the caller's\\n    ///         tokens.\\n    /// @return True if the operation succeeded.\\n    /// @dev If the `amount` is set to `type(uint256).max` then\\n    ///      `transferFrom` and `burnFrom` will not reduce an allowance.\\n    ///      Beware that changing an allowance with this method brings the risk\\n    ///      that someone may use both the old and the new allowance by\\n    ///      unfortunate transaction ordering. One possible solution to mitigate\\n    ///      this race condition is to first reduce the spender's allowance to 0\\n    ///      and set the desired value afterwards:\\n    ///      https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n    function approve(address spender, uint256 amount)\\n        public\\n        override\\n        returns (bool)\\n    {\\n        _approve(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /// @notice Returns hash of EIP712 Domain struct with the token name as\\n    ///         a signing domain and token contract as a verifying contract.\\n    ///         Used to construct EIP2612 signature provided to `permit`\\n    ///         function.\\n    /* solhint-disable-next-line func-name-mixedcase */\\n    function DOMAIN_SEPARATOR() public view override returns (bytes32) {\\n        // As explained in EIP-2612, if the DOMAIN_SEPARATOR contains the\\n        // chainId and is defined at contract deployment instead of\\n        // reconstructed for every signature, there is a risk of possible replay\\n        // attacks between chains in the event of a future chain split.\\n        // To address this issue, we check the cached chain ID against the\\n        // current one and in case they are different, we build domain separator\\n        // from scratch.\\n        if (block.chainid == cachedChainId) {\\n            return cachedDomainSeparator;\\n        } else {\\n            return buildDomainSeparator();\\n        }\\n    }\\n\\n    /// @dev Hook that is called before any transfer of tokens. This includes\\n    ///      minting and burning.\\n    ///\\n    /// Calling conditions:\\n    /// - when `from` and `to` are both non-zero, `amount` of `from`'s tokens\\n    ///   will be to transferred to `to`.\\n    /// - when `from` is zero, `amount` tokens will be minted for `to`.\\n    /// - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n    /// - `from` and `to` are never both zero.\\n    // slither-disable-next-line dead-code\\n    function beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    function _burn(address account, uint256 amount) internal {\\n        uint256 currentBalance = balanceOf[account];\\n        require(currentBalance >= amount, \\\"Burn amount exceeds balance\\\");\\n\\n        beforeTokenTransfer(account, address(0), amount);\\n\\n        balanceOf[account] = currentBalance - amount;\\n        totalSupply -= amount;\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    function _transfer(\\n        address spender,\\n        address recipient,\\n        uint256 amount\\n    ) private {\\n        require(spender != address(0), \\\"Transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"Transfer to the zero address\\\");\\n        require(recipient != address(this), \\\"Transfer to the token address\\\");\\n\\n        beforeTokenTransfer(spender, recipient, amount);\\n\\n        uint256 spenderBalance = balanceOf[spender];\\n        require(spenderBalance >= amount, \\\"Transfer amount exceeds balance\\\");\\n        balanceOf[spender] = spenderBalance - amount;\\n        balanceOf[recipient] += amount;\\n        emit Transfer(spender, recipient, amount);\\n    }\\n\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) private {\\n        require(owner != address(0), \\\"Approve from the zero address\\\");\\n        require(spender != address(0), \\\"Approve to the zero address\\\");\\n        allowance[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function buildDomainSeparator() private view returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\n                        \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n                    ),\\n                    keccak256(bytes(name)),\\n                    keccak256(bytes(\\\"1\\\")),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0x1e1bf4ec5c9d6fe70f6f834316482aeff3f122ff4ffaa7178099e7ae71a0b16d\",\"license\":\"MIT\"},\"@thesis/solidity-contracts/contracts/token/IApproveAndCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\n/// @notice An interface that should be implemented by tokens supporting\\n///         `approveAndCall`/`receiveApproval` pattern.\\ninterface IApproveAndCall {\\n    /// @notice Executes `receiveApproval` function on spender as specified in\\n    ///         `IReceiveApproval` interface. Approves spender to withdraw from\\n    ///         the caller multiple times, up to the `amount`. If this\\n    ///         function is called again, it overwrites the current allowance\\n    ///         with `amount`. Reverts if the approval reverted or if\\n    ///         `receiveApproval` call on the spender reverted.\\n    function approveAndCall(\\n        address spender,\\n        uint256 amount,\\n        bytes memory extraData\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x393d18ef81a57dcc96fff4c340cc2945deaebb37b9796c322cf2bc96872c3df8\",\"license\":\"MIT\"},\"@thesis/solidity-contracts/contracts/token/IERC20WithPermit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\nimport \\\"./IApproveAndCall.sol\\\";\\n\\n/// @title  IERC20WithPermit\\n/// @notice Burnable ERC20 token with EIP2612 permit functionality. User can\\n///         authorize a transfer of their token with a signature conforming\\n///         EIP712 standard instead of an on-chain transaction from their\\n///         address. Anyone can submit this signature on the user's behalf by\\n///         calling the permit function, as specified in EIP2612 standard,\\n///         paying gas fees, and possibly performing other actions in the same\\n///         transaction.\\ninterface IERC20WithPermit is IERC20, IERC20Metadata, IApproveAndCall {\\n    /// @notice EIP2612 approval made with secp256k1 signature.\\n    ///         Users can authorize a transfer of their tokens with a signature\\n    ///         conforming EIP712 standard, rather than an on-chain transaction\\n    ///         from their address. Anyone can submit this signature on the\\n    ///         user's behalf by calling the permit function, paying gas fees,\\n    ///         and possibly performing other actions in the same transaction.\\n    /// @dev    The deadline argument can be set to `type(uint256).max to create\\n    ///         permits that effectively never expire.\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /// @notice Destroys `amount` tokens from the caller.\\n    function burn(uint256 amount) external;\\n\\n    /// @notice Destroys `amount` of tokens from `account`, deducting the amount\\n    ///         from caller's allowance.\\n    function burnFrom(address account, uint256 amount) external;\\n\\n    /// @notice Returns hash of EIP712 Domain struct with the token name as\\n    ///         a signing domain and token contract as a verifying contract.\\n    ///         Used to construct EIP2612 signature provided to `permit`\\n    ///         function.\\n    /* solhint-disable-next-line func-name-mixedcase */\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    /// @notice Returns the current nonce for EIP2612 permission for the\\n    ///         provided token owner for a replay protection. Used to construct\\n    ///         EIP2612 signature provided to `permit` function.\\n    function nonce(address owner) external view returns (uint256);\\n\\n    /// @notice Returns EIP2612 Permit message hash. Used to construct EIP2612\\n    ///         signature provided to `permit` function.\\n    /* solhint-disable-next-line func-name-mixedcase */\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n}\\n\",\"keccak256\":\"0xdac9a5086c19a7128b505a7be1ab0ac1aa314f6989cb88d2417e9d7383f89fa9\",\"license\":\"MIT\"},\"@thesis/solidity-contracts/contracts/token/IReceiveApproval.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\n/// @notice An interface that should be implemented by contracts supporting\\n///         `approveAndCall`/`receiveApproval` pattern.\\ninterface IReceiveApproval {\\n    /// @notice Receives approval to spend tokens. Called as a result of\\n    ///         `approveAndCall` call on the token.\\n    function receiveApproval(\\n        address from,\\n        uint256 amount,\\n        address token,\\n        bytes calldata extraData\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6a30d83ad230548b1e7839737affc8489a035314209de14b89dbef7fb0f66395\",\"license\":\"MIT\"},\"@thesis/solidity-contracts/contracts/token/MisfundRecovery.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\n/// @title  MisfundRecovery\\n/// @notice Allows the owner of the token contract extending MisfundRecovery\\n///         to recover any ERC20 and ERC721 sent mistakenly to the token\\n///         contract address.\\ncontract MisfundRecovery is Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    function recoverERC20(\\n        IERC20 token,\\n        address recipient,\\n        uint256 amount\\n    ) external onlyOwner {\\n        token.safeTransfer(recipient, amount);\\n    }\\n\\n    function recoverERC721(\\n        IERC721 token,\\n        address recipient,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external onlyOwner {\\n        token.safeTransferFrom(address(this), recipient, tokenId, data);\\n    }\\n}\\n\",\"keccak256\":\"0xbbfea02bf20e2a6df5a497bbc05c7540a3b7c7dfb8b1feeaffef7f6b8ba65d65\",\"license\":\"MIT\"},\"contracts/governance/Checkpoints.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"./IVotesHistory.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\\\";\\n\\n/// @title Checkpoints\\n/// @dev Abstract contract to support checkpoints for Compound-like voting and\\n///      delegation. This implementation supports token supply up to 2^96 - 1.\\n///      This contract keeps a history (checkpoints) of each account's vote\\n///      power. Vote power can be delegated either by calling the {delegate}\\n///      function directly, or by providing a signature to be used with\\n///      {delegateBySig}. Voting power can be publicly queried through\\n///      {getVotes} and {getPastVotes}.\\n///      NOTE: Extracted from OpenZeppelin ERCVotes.sol.\\n/// @dev This contract is upgrade-safe.\\nabstract contract Checkpoints is IVotesHistory {\\n    struct Checkpoint {\\n        uint32 fromBlock;\\n        uint96 votes;\\n    }\\n\\n    // slither-disable-next-line uninitialized-state\\n    mapping(address => address) internal _delegates;\\n    mapping(address => uint128[]) internal _checkpoints;\\n    uint128[] internal _totalSupplyCheckpoints;\\n\\n    // Reserved storage space in case we need to add more variables,\\n    // since there are upgradeable contracts that inherit from this one.\\n    // See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n    // slither-disable-next-line unused-state\\n    uint256[47] private __gap;\\n\\n    /// @notice Emitted when an account changes their delegate.\\n    event DelegateChanged(\\n        address indexed delegator,\\n        address indexed fromDelegate,\\n        address indexed toDelegate\\n    );\\n\\n    /// @notice Emitted when a balance or delegate change results in changes\\n    ///         to an account's voting power.\\n    event DelegateVotesChanged(\\n        address indexed delegate,\\n        uint256 previousBalance,\\n        uint256 newBalance\\n    );\\n\\n    function checkpoints(address account, uint32 pos)\\n        public\\n        view\\n        virtual\\n        returns (Checkpoint memory checkpoint)\\n    {\\n        (uint32 fromBlock, uint96 votes) = decodeCheckpoint(\\n            _checkpoints[account][pos]\\n        );\\n        checkpoint = Checkpoint(fromBlock, votes);\\n    }\\n\\n    /// @notice Get number of checkpoints for `account`.\\n    function numCheckpoints(address account)\\n        public\\n        view\\n        virtual\\n        returns (uint32)\\n    {\\n        return SafeCastUpgradeable.toUint32(_checkpoints[account].length);\\n    }\\n\\n    /// @notice Get the address `account` is currently delegating to.\\n    function delegates(address account) public view virtual returns (address) {\\n        return _delegates[account];\\n    }\\n\\n    /// @notice Gets the current votes balance for `account`.\\n    /// @param account The address to get votes balance\\n    /// @return The number of current votes for `account`\\n    function getVotes(address account) public view returns (uint96) {\\n        uint256 pos = _checkpoints[account].length;\\n        return pos == 0 ? 0 : decodeValue(_checkpoints[account][pos - 1]);\\n    }\\n\\n    /// @notice Determine the prior number of votes for an account as of\\n    ///         a block number.\\n    /// @dev Block number must be a finalized block or else this function will\\n    ///      revert to prevent misinformation.\\n    /// @param account The address of the account to check\\n    /// @param blockNumber The block number to get the vote balance at\\n    /// @return The number of votes the account had as of the given block\\n    function getPastVotes(address account, uint256 blockNumber)\\n        public\\n        view\\n        returns (uint96)\\n    {\\n        return lookupCheckpoint(_checkpoints[account], blockNumber);\\n    }\\n\\n    /// @notice Retrieve the `totalSupply` at the end of `blockNumber`.\\n    ///         Note, this value is the sum of all balances, but it is NOT the\\n    ///         sum of all the delegated votes!\\n    /// @param blockNumber The block number to get the total supply at\\n    /// @dev `blockNumber` must have been already mined\\n    function getPastTotalSupply(uint256 blockNumber)\\n        public\\n        view\\n        returns (uint96)\\n    {\\n        return lookupCheckpoint(_totalSupplyCheckpoints, blockNumber);\\n    }\\n\\n    /// @notice Change delegation for `delegator` to `delegatee`.\\n    // slither-disable-next-line dead-code\\n    function delegate(address delegator, address delegatee) internal virtual;\\n\\n    /// @notice Moves voting power from one delegate to another\\n    /// @param src Address of old delegate\\n    /// @param dst Address of new delegate\\n    /// @param amount Voting power amount to transfer between delegates\\n    function moveVotingPower(\\n        address src,\\n        address dst,\\n        uint256 amount\\n    ) internal {\\n        if (src != dst && amount > 0) {\\n            if (src != address(0)) {\\n                // https://github.com/crytic/slither/issues/960\\n                // slither-disable-next-line variable-scope\\n                (uint256 oldWeight, uint256 newWeight) = writeCheckpoint(\\n                    _checkpoints[src],\\n                    subtract,\\n                    amount\\n                );\\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\\n            }\\n\\n            if (dst != address(0)) {\\n                // https://github.com/crytic/slither/issues/959\\n                // slither-disable-next-line uninitialized-local\\n                (uint256 oldWeight, uint256 newWeight) = writeCheckpoint(\\n                    _checkpoints[dst],\\n                    add,\\n                    amount\\n                );\\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\\n            }\\n        }\\n    }\\n\\n    /// @notice Writes a new checkpoint based on operating last stored value\\n    ///         with a `delta`. Usually, said operation is the `add` or\\n    ///         `subtract` functions from this contract, but more complex\\n    ///         functions can be passed as parameters.\\n    /// @param ckpts The checkpoints array to use\\n    /// @param op The function to apply over the last value and the `delta`\\n    /// @param delta Variation with respect to last stored value to be used\\n    ///              for new checkpoint\\n    function writeCheckpoint(\\n        uint128[] storage ckpts,\\n        function(uint256, uint256) view returns (uint256) op,\\n        uint256 delta\\n    ) internal returns (uint256 oldWeight, uint256 newWeight) {\\n        uint256 pos = ckpts.length;\\n        oldWeight = pos == 0 ? 0 : decodeValue(ckpts[pos - 1]);\\n        newWeight = op(oldWeight, delta);\\n\\n        if (pos > 0) {\\n            uint32 fromBlock = decodeBlockNumber(ckpts[pos - 1]);\\n            // slither-disable-next-line incorrect-equality\\n            if (fromBlock == block.number) {\\n                ckpts[pos - 1] = encodeCheckpoint(\\n                    fromBlock,\\n                    SafeCastUpgradeable.toUint96(newWeight)\\n                );\\n                return (oldWeight, newWeight);\\n            }\\n        }\\n\\n        ckpts.push(\\n            encodeCheckpoint(\\n                SafeCastUpgradeable.toUint32(block.number),\\n                SafeCastUpgradeable.toUint96(newWeight)\\n            )\\n        );\\n    }\\n\\n    /// @notice Lookup a value in a list of (sorted) checkpoints.\\n    /// @param ckpts The checkpoints array to use\\n    /// @param blockNumber Block number when we want to get the checkpoint at\\n    function lookupCheckpoint(uint128[] storage ckpts, uint256 blockNumber)\\n        internal\\n        view\\n        returns (uint96)\\n    {\\n        // We run a binary search to look for the earliest checkpoint taken\\n        // after `blockNumber`. During the loop, the index of the wanted\\n        // checkpoint remains in the range [low-1, high). With each iteration,\\n        // either `low` or `high` is moved towards the middle of the range to\\n        // maintain the invariant.\\n        // - If the middle checkpoint is after `blockNumber`,\\n        //   we look in [low, mid)\\n        // - If the middle checkpoint is before or equal to `blockNumber`,\\n        //   we look in [mid+1, high)\\n        // Once we reach a single value (when low == high), we've found the\\n        // right checkpoint at the index high-1, if not out of bounds (in that\\n        // case we're looking too far in the past and the result is 0).\\n        // Note that if the latest checkpoint available is exactly for\\n        // `blockNumber`, we end up with an index that is past the end of the\\n        // array, so we technically don't find a checkpoint after\\n        // `blockNumber`, but it works out the same.\\n        require(blockNumber < block.number, \\\"Block not yet determined\\\");\\n\\n        uint256 high = ckpts.length;\\n        uint256 low = 0;\\n        while (low < high) {\\n            uint256 mid = MathUpgradeable.average(low, high);\\n            uint32 midBlock = decodeBlockNumber(ckpts[mid]);\\n            if (midBlock > blockNumber) {\\n                high = mid;\\n            } else {\\n                low = mid + 1;\\n            }\\n        }\\n\\n        return high == 0 ? 0 : decodeValue(ckpts[high - 1]);\\n    }\\n\\n    /// @notice Maximum token supply. Defaults to `type(uint96).max` (2^96 - 1)\\n    // slither-disable-next-line dead-code\\n    function maxSupply() internal view virtual returns (uint96) {\\n        return type(uint96).max;\\n    }\\n\\n    /// @notice Encodes a `blockNumber` and `value` into a single `uint128`\\n    ///         checkpoint.\\n    /// @dev `blockNumber` is stored in the first 32 bits, while `value` in the\\n    ///      remaining 96 bits.\\n    function encodeCheckpoint(uint32 blockNumber, uint96 value)\\n        internal\\n        pure\\n        returns (uint128)\\n    {\\n        return (uint128(blockNumber) << 96) | uint128(value);\\n    }\\n\\n    /// @notice Decodes a block number from a `uint128` `checkpoint`.\\n    function decodeBlockNumber(uint128 checkpoint)\\n        internal\\n        pure\\n        returns (uint32)\\n    {\\n        return uint32(bytes4(bytes16(checkpoint)));\\n    }\\n\\n    /// @notice Decodes a voting value from a `uint128` `checkpoint`.\\n    function decodeValue(uint128 checkpoint) internal pure returns (uint96) {\\n        return uint96(checkpoint);\\n    }\\n\\n    /// @notice Decodes a block number and voting value from a `uint128`\\n    ///         `checkpoint`.\\n    function decodeCheckpoint(uint128 checkpoint)\\n        internal\\n        pure\\n        returns (uint32 blockNumber, uint96 value)\\n    {\\n        blockNumber = decodeBlockNumber(checkpoint);\\n        value = decodeValue(checkpoint);\\n    }\\n\\n    // slither-disable-next-line dead-code\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    // slither-disable-next-line dead-code\\n    function subtract(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n}\\n\",\"keccak256\":\"0x67b28349e88afe7440c43df93ba5de56873d850a25147161e4469731750efb16\",\"license\":\"GPL-3.0-or-later\"},\"contracts/governance/IVotesHistory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n\\npragma solidity 0.8.9;\\n\\ninterface IVotesHistory {\\n    function getPastVotes(address account, uint256 blockNumber)\\n        external\\n        view\\n        returns (uint96);\\n\\n    function getPastTotalSupply(uint256 blockNumber)\\n        external\\n        view\\n        returns (uint96);\\n}\\n\",\"keccak256\":\"0x535e87cf4c2e9a9439d99cf0918f013965fa6c4ddfbab07ff6ca4b195c8edc9f\",\"license\":\"GPL-3.0-or-later\"},\"contracts/token/T.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../governance/Checkpoints.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/SafeCast.sol\\\";\\nimport \\\"@thesis/solidity-contracts/contracts/token/ERC20WithPermit.sol\\\";\\nimport \\\"@thesis/solidity-contracts/contracts/token/MisfundRecovery.sol\\\";\\n\\n/// @title T token\\n/// @notice Threshold Network T token\\n/// @dev By default, token balance does not account for voting power.\\n///      This makes transfers cheaper. The downside is that it requires users\\n///      to delegate to themselves to activate checkpoints and have their\\n///      voting power tracked.\\ncontract T is ERC20WithPermit, MisfundRecovery, Checkpoints {\\n    /// @notice The EIP-712 typehash for the delegation struct used by\\n    ///         `delegateBySig`.\\n    bytes32 public constant DELEGATION_TYPEHASH =\\n        keccak256(\\n            \\\"Delegation(address delegatee,uint256 nonce,uint256 deadline)\\\"\\n        );\\n\\n    constructor() ERC20WithPermit(\\\"Threshold Network Token\\\", \\\"T\\\") {}\\n\\n    /// @notice Delegates votes from signatory to `delegatee`\\n    /// @param delegatee The address to delegate votes to\\n    /// @param deadline The time at which to expire the signature\\n    /// @param v The recovery byte of the signature\\n    /// @param r Half of the ECDSA signature pair\\n    /// @param s Half of the ECDSA signature pair\\n    function delegateBySig(\\n        address signatory,\\n        address delegatee,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        /* solhint-disable-next-line not-rely-on-time */\\n        require(deadline >= block.timestamp, \\\"Delegation expired\\\");\\n\\n        // Validate `s` and `v` values for a malleability concern described in EIP2.\\n        // Only signatures with `s` value in the lower half of the secp256k1\\n        // curve's order and `v` value of 27 or 28 are considered valid.\\n        require(\\n            uint256(s) <=\\n                0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\\n            \\\"Invalid signature 's' value\\\"\\n        );\\n        require(v == 27 || v == 28, \\\"Invalid signature 'v' value\\\");\\n\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR(),\\n                keccak256(\\n                    abi.encode(\\n                        DELEGATION_TYPEHASH,\\n                        delegatee,\\n                        nonce[signatory]++,\\n                        deadline\\n                    )\\n                )\\n            )\\n        );\\n\\n        address recoveredAddress = ecrecover(digest, v, r, s);\\n        require(\\n            recoveredAddress != address(0) && recoveredAddress == signatory,\\n            \\\"Invalid signature\\\"\\n        );\\n\\n        return delegate(signatory, delegatee);\\n    }\\n\\n    /// @notice Delegate votes from `msg.sender` to `delegatee`.\\n    /// @param delegatee The address to delegate votes to\\n    function delegate(address delegatee) public virtual {\\n        return delegate(msg.sender, delegatee);\\n    }\\n\\n    // slither-disable-next-line dead-code\\n    function beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal override {\\n        uint96 safeAmount = SafeCast.toUint96(amount);\\n\\n        // When minting:\\n        if (from == address(0)) {\\n            // Does not allow to mint more than uint96 can fit. Otherwise, the\\n            // Checkpoint might not fit the balance.\\n            require(\\n                totalSupply + amount <= maxSupply(),\\n                \\\"Maximum total supply exceeded\\\"\\n            );\\n            writeCheckpoint(_totalSupplyCheckpoints, add, safeAmount);\\n        }\\n\\n        // When burning:\\n        if (to == address(0)) {\\n            writeCheckpoint(_totalSupplyCheckpoints, subtract, safeAmount);\\n        }\\n\\n        moveVotingPower(delegates(from), delegates(to), safeAmount);\\n    }\\n\\n    function delegate(address delegator, address delegatee)\\n        internal\\n        virtual\\n        override\\n    {\\n        address currentDelegate = delegates(delegator);\\n        uint96 delegatorBalance = SafeCast.toUint96(balanceOf[delegator]);\\n        _delegates[delegator] = delegatee;\\n\\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\\n\\n        moveVotingPower(currentDelegate, delegatee, delegatorBalance);\\n    }\\n}\\n\",\"keccak256\":\"0x6265416225fd15b1108fce13d570b53a862a5d256ba2e6329bccf658eccac430\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 1489,
        "contract": "contracts/token/T.sol:T",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 8976,
        "contract": "contracts/token/T.sol:T",
        "label": "balanceOf",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 8984,
        "contract": "contracts/token/T.sol:T",
        "label": "allowance",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 8990,
        "contract": "contracts/token/T.sol:T",
        "label": "nonce",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9005,
        "contract": "contracts/token/T.sol:T",
        "label": "totalSupply",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 9009,
        "contract": "contracts/token/T.sol:T",
        "label": "name",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 9013,
        "contract": "contracts/token/T.sol:T",
        "label": "symbol",
        "offset": 0,
        "slot": "6",
        "type": "t_string_storage"
      },
      {
        "astId": 10141,
        "contract": "contracts/token/T.sol:T",
        "label": "_delegates",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 10146,
        "contract": "contracts/token/T.sol:T",
        "label": "_checkpoints",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_array(t_uint128)dyn_storage)"
      },
      {
        "astId": 10149,
        "contract": "contracts/token/T.sol:T",
        "label": "_totalSupplyCheckpoints",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_uint128)dyn_storage"
      },
      {
        "astId": 10153,
        "contract": "contracts/token/T.sol:T",
        "label": "__gap",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_uint256)47_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint128)dyn_storage": {
        "base": "t_uint128",
        "encoding": "dynamic_array",
        "label": "uint128[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)47_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[47]",
        "numberOfBytes": "1504"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_array(t_uint128)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint128[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint128)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "events": {
      "DelegateChanged(address,address,address)": {
        "notice": "Emitted when an account changes their delegate."
      },
      "DelegateVotesChanged(address,uint256,uint256)": {
        "notice": "Emitted when a balance or delegate change results in changes         to an account's voting power."
      }
    },
    "kind": "user",
    "methods": {
      "DELEGATION_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the delegation struct used by         `delegateBySig`."
      },
      "DOMAIN_SEPARATOR()": {
        "notice": "Returns hash of EIP712 Domain struct with the token name as         a signing domain and token contract as a verifying contract.         Used to construct EIP2612 signature provided to `permit`         function."
      },
      "PERMIT_TYPEHASH()": {
        "notice": "Returns EIP2612 Permit message hash. Used to construct EIP2612         signature provided to `permit` function."
      },
      "allowance(address,address)": {
        "notice": "The remaining number of tokens that spender will be         allowed to spend on behalf of owner through `transferFrom` and         `burnFrom`. This is zero by default."
      },
      "approve(address,uint256)": {
        "notice": "Sets `amount` as the allowance of `spender` over the caller's         tokens."
      },
      "approveAndCall(address,uint256,bytes)": {
        "notice": "Calls `receiveApproval` function on spender previously approving         the spender to withdraw from the caller multiple times, up to         the `amount` amount. If this function is called again, it         overwrites the current allowance with `amount`. Reverts if the         approval reverted or if `receiveApproval` call on the spender         reverted."
      },
      "balanceOf(address)": {
        "notice": "The amount of tokens owned by the given account."
      },
      "burn(uint256)": {
        "notice": "Destroys `amount` tokens from the caller."
      },
      "burnFrom(address,uint256)": {
        "notice": "Destroys `amount` of tokens from `account` using the allowance         mechanism. `amount` is then deducted from the caller's allowance         unless the allowance was made for `type(uint256).max`."
      },
      "decimals()": {
        "notice": "The decimals places of the token."
      },
      "delegate(address)": {
        "notice": "Delegate votes from `msg.sender` to `delegatee`."
      },
      "delegateBySig(address,address,uint256,uint8,bytes32,bytes32)": {
        "notice": "Delegates votes from signatory to `delegatee`"
      },
      "delegates(address)": {
        "notice": "Get the address `account` is currently delegating to."
      },
      "getPastTotalSupply(uint256)": {
        "notice": "Retrieve the `totalSupply` at the end of `blockNumber`.         Note, this value is the sum of all balances, but it is NOT the         sum of all the delegated votes!"
      },
      "getPastVotes(address,uint256)": {
        "notice": "Determine the prior number of votes for an account as of         a block number."
      },
      "getVotes(address)": {
        "notice": "Gets the current votes balance for `account`."
      },
      "mint(address,uint256)": {
        "notice": "Creates `amount` tokens and assigns them to `account`,         increasing the total supply."
      },
      "name()": {
        "notice": "The name of the token."
      },
      "nonce(address)": {
        "notice": "Returns the current nonce for EIP2612 permission for the         provided token owner for a replay protection. Used to construct         EIP2612 signature provided to `permit` function."
      },
      "numCheckpoints(address)": {
        "notice": "Get number of checkpoints for `account`."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "EIP2612 approval made with secp256k1 signature.         Users can authorize a transfer of their tokens with a signature         conforming EIP712 standard, rather than an on-chain transaction         from their address. Anyone can submit this signature on the         user's behalf by calling the permit function, paying gas fees,         and possibly performing other actions in the same transaction."
      },
      "symbol()": {
        "notice": "The symbol of the token."
      },
      "totalSupply()": {
        "notice": "The amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "notice": "Moves `amount` tokens from the caller's account to `recipient`."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Moves `amount` tokens from `spender` to `recipient` using the         allowance mechanism. `amount` is then deducted from the caller's         allowance unless the allowance was made for `type(uint256).max`."
      }
    },
    "notice": "Threshold Network T token",
    "version": 1
  }
}