{
  "contractName": "MisfundRecovery",
  "sourceName": "@thesis/solidity-contracts/contracts/token/MisfundRecovery.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "recoverERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108028061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631171bda91461005c578063715018a6146100715780638da5cb5b14610079578063f2fde38b1461009d578063fc4e51f6146100b0575b600080fd5b61006f61006a3660046105a6565b6100c3565b005b61006f610114565b61008161014f565b6040516001600160a01b03909116815260200160405180910390f35b61006f6100ab3660046105e7565b61015e565b61006f6100be366004610604565b6101fe565b336100cc61014f565b6001600160a01b0316146100fb5760405162461bcd60e51b81526004016100f2906106a2565b60405180910390fd5b61010f6001600160a01b038416838361029a565b505050565b3361011d61014f565b6001600160a01b0316146101435760405162461bcd60e51b81526004016100f2906106a2565b61014d60006102ec565b565b6000546001600160a01b031690565b3361016761014f565b6001600160a01b03161461018d5760405162461bcd60e51b81526004016100f2906106a2565b6001600160a01b0381166101f25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f2565b6101fb816102ec565b50565b3361020761014f565b6001600160a01b03161461022d5760405162461bcd60e51b81526004016100f2906106a2565b604051635c46a7ef60e11b81526001600160a01b0386169063b88d4fde9061026190309088908890889088906004016106d7565b600060405180830381600087803b15801561027b57600080fd5b505af115801561028f573d6000803e3d6000fd5b505050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261010f90849061033c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610391826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661040e9092919063ffffffff16565b80519091501561010f57808060200190518101906103af919061072b565b61010f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100f2565b606061041d8484600085610427565b90505b9392505050565b6060824710156104885760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100f2565b6001600160a01b0385163b6104df5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100f2565b600080866001600160a01b031685876040516104fb919061077d565b60006040518083038185875af1925050503d8060008114610538576040519150601f19603f3d011682016040523d82523d6000602084013e61053d565b606091505b509150915061054d828286610558565b979650505050505050565b60608315610567575081610420565b8251156105775782518084602001fd5b8160405162461bcd60e51b81526004016100f29190610799565b6001600160a01b03811681146101fb57600080fd5b6000806000606084860312156105bb57600080fd5b83356105c681610591565b925060208401356105d681610591565b929592945050506040919091013590565b6000602082840312156105f957600080fd5b813561042081610591565b60008060008060006080868803121561061c57600080fd5b853561062781610591565b9450602086013561063781610591565b93506040860135925060608601356001600160401b038082111561065a57600080fd5b818801915088601f83011261066e57600080fd5b81358181111561067d57600080fd5b89602082850101111561068f57600080fd5b9699959850939650602001949392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b60006020828403121561073d57600080fd5b8151801515811461042057600080fd5b60005b83811015610768578181015183820152602001610750565b83811115610777576000848401525b50505050565b6000825161078f81846020870161074d565b9190910192915050565b60208152600082518060208401526107b881604085016020870161074d565b601f01601f1916919091016040019291505056fea264697066735822122033290f0672546616323916dae5b77079e7515ffc7a7246472e557dd3c9f2431764736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80631171bda91461005c578063715018a6146100715780638da5cb5b14610079578063f2fde38b1461009d578063fc4e51f6146100b0575b600080fd5b61006f61006a3660046105a6565b6100c3565b005b61006f610114565b61008161014f565b6040516001600160a01b03909116815260200160405180910390f35b61006f6100ab3660046105e7565b61015e565b61006f6100be366004610604565b6101fe565b336100cc61014f565b6001600160a01b0316146100fb5760405162461bcd60e51b81526004016100f2906106a2565b60405180910390fd5b61010f6001600160a01b038416838361029a565b505050565b3361011d61014f565b6001600160a01b0316146101435760405162461bcd60e51b81526004016100f2906106a2565b61014d60006102ec565b565b6000546001600160a01b031690565b3361016761014f565b6001600160a01b03161461018d5760405162461bcd60e51b81526004016100f2906106a2565b6001600160a01b0381166101f25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f2565b6101fb816102ec565b50565b3361020761014f565b6001600160a01b03161461022d5760405162461bcd60e51b81526004016100f2906106a2565b604051635c46a7ef60e11b81526001600160a01b0386169063b88d4fde9061026190309088908890889088906004016106d7565b600060405180830381600087803b15801561027b57600080fd5b505af115801561028f573d6000803e3d6000fd5b505050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261010f90849061033c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610391826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661040e9092919063ffffffff16565b80519091501561010f57808060200190518101906103af919061072b565b61010f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100f2565b606061041d8484600085610427565b90505b9392505050565b6060824710156104885760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100f2565b6001600160a01b0385163b6104df5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100f2565b600080866001600160a01b031685876040516104fb919061077d565b60006040518083038185875af1925050503d8060008114610538576040519150601f19603f3d011682016040523d82523d6000602084013e61053d565b606091505b509150915061054d828286610558565b979650505050505050565b60608315610567575081610420565b8251156105775782518084602001fd5b8160405162461bcd60e51b81526004016100f29190610799565b6001600160a01b03811681146101fb57600080fd5b6000806000606084860312156105bb57600080fd5b83356105c681610591565b925060208401356105d681610591565b929592945050506040919091013590565b6000602082840312156105f957600080fd5b813561042081610591565b60008060008060006080868803121561061c57600080fd5b853561062781610591565b9450602086013561063781610591565b93506040860135925060608601356001600160401b038082111561065a57600080fd5b818801915088601f83011261066e57600080fd5b81358181111561067d57600080fd5b89602082850101111561068f57600080fd5b9699959850939650602001949392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b60006020828403121561073d57600080fd5b8151801515811461042057600080fd5b60005b83811015610768578181015183820152602001610750565b83811115610777576000848401525b50505050565b6000825161078f81846020870161074d565b9190910192915050565b60208152600082518060208401526107b881604085016020870161074d565b601f01601f1916919091016040019291505056fea264697066735822122033290f0672546616323916dae5b77079e7515ffc7a7246472e557dd3c9f2431764736f6c63430008090033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "MisfundRecovery",
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_1505": {
          "entryPoint": null,
          "id": 1505,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_msgSender_7321": {
          "entryPoint": null,
          "id": 7321,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_transferOwnership_1585": {
          "entryPoint": 31,
          "id": 1585,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x802 DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1171BDA9 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xFC4E51F6 EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x114 JUMP JUMPDEST PUSH2 0x81 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0xAB CALLDATASIZE PUSH1 0x4 PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH2 0x6F PUSH2 0xBE CALLDATASIZE PUSH1 0x4 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST CALLER PUSH2 0xCC PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x29A JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH2 0x11D PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x143 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x14D PUSH1 0x0 PUSH2 0x2EC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x167 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x18D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH2 0x1FB DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x207 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x22D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5C46A7EF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xB88D4FDE SWAP1 PUSH2 0x261 SWAP1 ADDRESS SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x10F SWAP1 DUP5 SWAP1 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x40E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x10F JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x10F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x41D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x427 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x4DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x53D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x54D DUP3 DUP3 DUP7 PUSH2 0x558 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x567 JUMPI POP DUP2 PUSH2 0x420 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x577 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x5C6 DUP2 PUSH2 0x591 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x5D6 DUP2 PUSH2 0x591 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x420 DUP2 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x627 DUP2 PUSH2 0x591 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x637 DUP2 PUSH2 0x591 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x66E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x67D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x768 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x750 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x777 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x78F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x74D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x7B8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x74D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0x29 0xF MOD PUSH19 0x546616323916DAE5B77079E7515FFC7A724647 0x2E SSTORE PUSH30 0xD3C9F2431764736F6C634300080900330000000000000000000000000000 ",
      "sourceMap": "502:489:49:-:0;;;;;;;;;;;;-1:-1:-1;921:32:8;719:10:34;921:18:8;:32::i;:::-;502:489:49;;2270:187:8;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:8;;;-1:-1:-1;;;;;;2378:17:8;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;502:489:49:-;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@_callOptionalReturn_6897": {
          "entryPoint": 828,
          "id": 6897,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_msgSender_7321": {
          "entryPoint": null,
          "id": 7321,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_transferOwnership_1585": {
          "entryPoint": 748,
          "id": 1585,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@functionCallWithValue_7173": {
          "entryPoint": 1063,
          "id": 7173,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@functionCall_7103": {
          "entryPoint": 1038,
          "id": 7103,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@isContract_7032": {
          "entryPoint": null,
          "id": 7032,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@owner_1514": {
          "entryPoint": 335,
          "id": 1514,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@recoverERC20_9764": {
          "entryPoint": 195,
          "id": 9764,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "@recoverERC721_9791": {
          "entryPoint": 510,
          "id": 9791,
          "parameterSlots": 5,
          "returnSlots": 0
        },
        "@renounceOwnership_1542": {
          "entryPoint": 276,
          "id": 1542,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@safeTransfer_6705": {
          "entryPoint": 666,
          "id": 6705,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "@transferOwnership_1565": {
          "entryPoint": 350,
          "id": 1565,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@verifyCallResult_7308": {
          "entryPoint": 1368,
          "id": 7308,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_address": {
          "entryPoint": 1511,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bool_fromMemory": {
          "entryPoint": 1835,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_contract$_IERC20_$5807t_addresst_uint256": {
          "entryPoint": 1446,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_decode_tuple_t_contract$_IERC721_$7014t_addresst_uint256t_bytes_calldata_ptr": {
          "entryPoint": 1540,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 5
        },
        "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 1917,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
          "entryPoint": 1751,
          "id": null,
          "parameterSlots": 6,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 1945,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 1698,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "copy_memory_to_memory": {
          "entryPoint": 1869,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "validator_revert_contract_IERC20": {
          "entryPoint": 1425,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:6190:80",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:80",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "67:86:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "131:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "140:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "143:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "133:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "133:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "133:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "90:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "101:5:80"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "116:3:80",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "121:1:80",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "112:3:80"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "112:11:80"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "125:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "108:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "108:19:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:31:80"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "87:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "87:42:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "80:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "80:50:80"
                      },
                      "nodeType": "YulIf",
                      "src": "77:70:80"
                    }
                  ]
                },
                "name": "validator_revert_contract_IERC20",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "56:5:80",
                    "type": ""
                  }
                ],
                "src": "14:139:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "277:368:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "323:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "332:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "335:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "325:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "325:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "325:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "298:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "307:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "294:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "294:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "319:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "290:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "290:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "287:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "348:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "374:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "361:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "361:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "352:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "426:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_contract_IERC20",
                          "nodeType": "YulIdentifier",
                          "src": "393:32:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "393:39:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "393:39:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "441:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "451:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "441:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "465:47:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "497:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "508:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "493:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "493:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "480:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:32:80"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "469:7:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "554:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_contract_IERC20",
                          "nodeType": "YulIdentifier",
                          "src": "521:32:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "521:41:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "521:41:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "571:17:80",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "581:7:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "571:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "597:42:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "624:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "635:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "620:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "620:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "607:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "607:32:80"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "597:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_contract$_IERC20_$5807t_addresst_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "227:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "238:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "250:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "258:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "266:6:80",
                    "type": ""
                  }
                ],
                "src": "158:487:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "751:102:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "761:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "773:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "784:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "769:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "769:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "761:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "803:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "818:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "834:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "839:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "830:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "830:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "843:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "826:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "826:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "814:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "814:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "796:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "796:51:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "796:51:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "720:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "731:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "742:4:80",
                    "type": ""
                  }
                ],
                "src": "650:203:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "928:185:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "974:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "983:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "986:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "976:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "976:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "976:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "949:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "958:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "945:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "945:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "970:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "941:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "941:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "938:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "999:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1025:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1012:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1012:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "1003:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1077:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_contract_IERC20",
                          "nodeType": "YulIdentifier",
                          "src": "1044:32:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1044:39:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1044:39:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1092:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1102:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1092:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "894:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "905:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "917:6:80",
                    "type": ""
                  }
                ],
                "src": "858:255:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1274:812:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1321:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1330:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1333:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1323:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1323:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1323:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1295:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1304:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1291:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1291:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1316:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1287:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1287:33:80"
                      },
                      "nodeType": "YulIf",
                      "src": "1284:53:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1346:36:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1372:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1359:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1359:23:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "1350:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1424:5:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_contract_IERC20",
                          "nodeType": "YulIdentifier",
                          "src": "1391:32:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1391:39:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1391:39:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1439:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1449:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1439:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1463:47:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1495:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1506:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1491:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1491:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1478:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1478:32:80"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "1467:7:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "1552:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_contract_IERC20",
                          "nodeType": "YulIdentifier",
                          "src": "1519:32:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1519:41:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1519:41:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1569:17:80",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1579:7:80"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1569:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1595:42:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1622:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1633:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1618:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1618:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1605:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1605:32:80"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1595:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1646:46:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1677:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1688:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1673:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1673:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1660:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1660:32:80"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1650:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1701:28:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1719:2:80",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1723:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1715:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1715:10:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1727:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1711:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1711:18:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "1705:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1756:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1765:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1768:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1758:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1758:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1758:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1744:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1752:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1741:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1741:14:80"
                      },
                      "nodeType": "YulIf",
                      "src": "1738:34:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1781:32:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1795:9:80"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1806:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1791:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1791:22:80"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "1785:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1861:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1870:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1873:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1863:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1863:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1863:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1840:2:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1844:4:80",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1836:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1836:13:80"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1851:7:80"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1832:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1832:27:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1825:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1825:35:80"
                      },
                      "nodeType": "YulIf",
                      "src": "1822:55:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1886:30:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1913:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1900:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1900:16:80"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "1890:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1943:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1952:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1955:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1945:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1945:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1945:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1931:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1939:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1928:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1928:14:80"
                      },
                      "nodeType": "YulIf",
                      "src": "1925:34:80"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2009:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2018:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2021:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2011:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2011:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2011:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1982:2:80"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1986:6:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1978:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1978:15:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1995:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1974:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1974:24:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2000:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1971:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1971:37:80"
                      },
                      "nodeType": "YulIf",
                      "src": "1968:57:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2034:21:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2048:2:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2052:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2044:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2044:11:80"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "2034:6:80"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2064:16:80",
                      "value": {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2074:6:80"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "2064:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_contract$_IERC721_$7014t_addresst_uint256t_bytes_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1208:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1219:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1231:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1239:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1247:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "1255:6:80",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "1263:6:80",
                    "type": ""
                  }
                ],
                "src": "1118:968:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2265:182:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2282:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2293:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2275:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2275:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2275:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2316:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2327:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2312:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2312:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2332:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2305:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2305:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2305:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2355:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2366:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2351:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2351:18:80"
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2371:34:80",
                            "type": "",
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2344:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2344:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2344:62:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2415:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2427:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2438:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2423:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2423:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2415:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2242:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2256:4:80",
                    "type": ""
                  }
                ],
                "src": "2091:356:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2626:228:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2643:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2654:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2636:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2636:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2636:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2677:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2688:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2673:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2673:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2693:2:80",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2666:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2666:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2666:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2716:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2727:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2712:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2712:18:80"
                          },
                          {
                            "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2732:34:80",
                            "type": "",
                            "value": "Ownable: new owner is the zero a"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2705:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2705:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2705:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2787:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2798:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2783:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2783:18:80"
                          },
                          {
                            "hexValue": "646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2803:8:80",
                            "type": "",
                            "value": "ddress"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2776:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2776:36:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2776:36:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2821:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2833:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2844:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2829:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2829:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2821:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2603:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2617:4:80",
                    "type": ""
                  }
                ],
                "src": "2452:402:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3072:449:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3082:29:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3100:3:80",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3105:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3096:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3096:11:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3109:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3092:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3092:19:80"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "3086:2:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3127:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3142:6:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3150:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3138:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3138:15:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3120:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3120:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3120:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3174:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3185:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3170:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3170:18:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "3194:6:80"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3202:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3190:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3190:15:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3163:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3163:43:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3163:43:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3226:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3237:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3222:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3222:18:80"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "3242:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3215:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3215:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3215:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3269:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3280:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3265:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3265:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3285:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3258:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3258:31:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3258:31:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3309:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3320:3:80",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3305:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3305:19:80"
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "3326:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3298:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3298:35:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3298:35:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3359:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3370:3:80",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3355:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3355:19:80"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "3376:6:80"
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "3384:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "3342:12:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3342:49:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3342:49:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3415:9:80"
                                  },
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "3426:6:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3411:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3411:22:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3435:3:80",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3407:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3407:32:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3441:1:80",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3400:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3400:43:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3400:43:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3452:63:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3468:9:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "3487:6:80"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3495:2:80",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3483:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3483:15:80"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3504:2:80",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "3500:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3500:7:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3479:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3479:29:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3464:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3464:45:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3511:3:80",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3460:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3460:55:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3452:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3009:9:80",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "3020:6:80",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "3028:6:80",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "3036:6:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "3044:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3052:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3063:4:80",
                    "type": ""
                  }
                ],
                "src": "2859:662:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3655:145:80",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3665:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3677:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3688:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3673:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3673:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3665:4:80"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3707:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3722:6:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3738:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3743:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3734:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3734:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3747:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3730:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3730:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3718:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3718:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3700:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3700:51:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3700:51:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3771:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3782:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3767:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3767:18:80"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3787:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3760:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3760:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3760:34:80"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3616:9:80",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "3627:6:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3635:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3646:4:80",
                    "type": ""
                  }
                ],
                "src": "3526:274:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3883:199:80",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3929:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3938:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3941:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3931:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3931:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3931:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3904:7:80"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3913:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3900:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3900:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3925:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3896:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3896:32:80"
                      },
                      "nodeType": "YulIf",
                      "src": "3893:52:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3954:29:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3973:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3967:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3967:16:80"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "3958:5:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4036:16:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4045:1:80",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4048:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4038:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4038:12:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4038:12:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4005:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4026:5:80"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "4019:6:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4019:13:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4012:6:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4012:21:80"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "4002:2:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4002:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3995:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3995:40:80"
                      },
                      "nodeType": "YulIf",
                      "src": "3992:60:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4061:15:80",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4071:5:80"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4061:6:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3849:9:80",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3860:7:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3872:6:80",
                    "type": ""
                  }
                ],
                "src": "3805:277:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4261:232:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4278:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4289:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4271:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4271:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4271:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4312:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4323:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4308:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4308:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4328:2:80",
                            "type": "",
                            "value": "42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4301:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4301:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4301:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4351:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4362:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4347:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4347:18:80"
                          },
                          {
                            "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4367:34:80",
                            "type": "",
                            "value": "SafeERC20: ERC20 operation did n"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4340:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4340:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4340:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4422:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4433:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4418:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4418:18:80"
                          },
                          {
                            "hexValue": "6f742073756363656564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4438:12:80",
                            "type": "",
                            "value": "ot succeed"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4411:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4411:40:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4411:40:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4460:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4472:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4483:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4468:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4468:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4460:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4238:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4252:4:80",
                    "type": ""
                  }
                ],
                "src": "4087:406:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4672:228:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4689:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4700:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4682:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4682:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4682:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4723:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4734:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4719:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4719:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4739:2:80",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4712:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4712:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4712:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4762:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4773:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4758:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4758:18:80"
                          },
                          {
                            "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4778:34:80",
                            "type": "",
                            "value": "Address: insufficient balance fo"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4751:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4751:62:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4751:62:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4833:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4844:2:80",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4829:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4829:18:80"
                          },
                          {
                            "hexValue": "722063616c6c",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4849:8:80",
                            "type": "",
                            "value": "r call"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4822:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4822:36:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4822:36:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4867:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4879:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4890:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4875:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4875:19:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4867:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4649:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4663:4:80",
                    "type": ""
                  }
                ],
                "src": "4498:402:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5079:179:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5096:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5107:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5089:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5089:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5089:21:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5130:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5141:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5126:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5126:18:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5146:2:80",
                            "type": "",
                            "value": "29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5119:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5119:30:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5119:30:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5169:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5180:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5165:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5165:18:80"
                          },
                          {
                            "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5185:31:80",
                            "type": "",
                            "value": "Address: call to non-contract"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5158:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5158:59:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5158:59:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5226:26:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5238:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5249:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5234:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5234:18:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5226:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5056:9:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5070:4:80",
                    "type": ""
                  }
                ],
                "src": "4905:353:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5316:205:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5326:10:80",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5335:1:80",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "5330:1:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5395:63:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "5420:3:80"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5425:1:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5416:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5416:11:80"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "5439:3:80"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5444:1:80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5435:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5435:11:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "5429:5:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5429:18:80"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5409:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5409:39:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5409:39:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5356:1:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5359:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5353:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5353:13:80"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "5367:19:80",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "5369:15:80",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5378:1:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5381:2:80",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5374:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5374:10:80"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "5369:1:80"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "5349:3:80",
                        "statements": []
                      },
                      "src": "5345:113:80"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5484:31:80",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "5497:3:80"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "5502:6:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5493:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5493:16:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5511:1:80",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5486:6:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5486:27:80"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5486:27:80"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5473:1:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5476:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5470:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5470:13:80"
                      },
                      "nodeType": "YulIf",
                      "src": "5467:48:80"
                    }
                  ]
                },
                "name": "copy_memory_to_memory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "5294:3:80",
                    "type": ""
                  },
                  {
                    "name": "dst",
                    "nodeType": "YulTypedName",
                    "src": "5299:3:80",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "5304:6:80",
                    "type": ""
                  }
                ],
                "src": "5263:258:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5663:137:80",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5673:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5693:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5687:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5687:13:80"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "5677:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5735:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5743:4:80",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5731:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5731:17:80"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5750:3:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5755:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "5709:21:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5709:53:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5709:53:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5771:23:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5782:3:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5787:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5778:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5778:16:80"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "5771:3:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "5639:3:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5644:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "5655:3:80",
                    "type": ""
                  }
                ],
                "src": "5526:274:80"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5926:262:80",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5943:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5954:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5936:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5936:21:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5936:21:80"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5966:27:80",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5986:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5980:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5980:13:80"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "5970:6:80",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6013:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6024:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6009:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6009:18:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6029:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6002:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6002:34:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6002:34:80"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6071:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6079:2:80",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6067:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6067:15:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6088:9:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6099:2:80",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6084:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6084:18:80"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6104:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "6045:21:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6045:66:80"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6045:66:80"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6120:62:80",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6136:9:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "6155:6:80"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6163:2:80",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6151:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6151:15:80"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6172:2:80",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "6168:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6168:7:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6147:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6147:29:80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6132:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6132:45:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6179:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6128:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6128:54:80"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6120:4:80"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5895:9:80",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5906:6:80",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5917:4:80",
                    "type": ""
                  }
                ],
                "src": "5805:383:80"
              }
            ]
          },
          "contents": "{\n    { }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$5807t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC721_$7014t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), value4)\n        calldatacopy(add(headStart, 160), value3, value4)\n        mstore(add(add(headStart, value4), 160), 0)\n        tail := add(add(headStart, and(add(value4, 31), not(31))), 160)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
          "id": 80,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1171BDA9 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xFC4E51F6 EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x114 JUMP JUMPDEST PUSH2 0x81 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0xAB CALLDATASIZE PUSH1 0x4 PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH2 0x6F PUSH2 0xBE CALLDATASIZE PUSH1 0x4 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST CALLER PUSH2 0xCC PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x29A JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH2 0x11D PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x143 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x14D PUSH1 0x0 PUSH2 0x2EC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x167 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x18D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH2 0x1FB DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x207 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x22D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5C46A7EF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xB88D4FDE SWAP1 PUSH2 0x261 SWAP1 ADDRESS SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x10F SWAP1 DUP5 SWAP1 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x40E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x10F JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x10F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x41D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x427 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x4DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x53D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x54D DUP3 DUP3 DUP7 PUSH2 0x558 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x567 JUMPI POP DUP2 PUSH2 0x420 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x577 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x5C6 DUP2 PUSH2 0x591 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x5D6 DUP2 PUSH2 0x591 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x420 DUP2 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x627 DUP2 PUSH2 0x591 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x637 DUP2 PUSH2 0x591 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x66E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x67D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x768 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x750 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x777 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x78F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x74D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x7B8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x74D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0x29 0xF MOD PUSH19 0x546616323916DAE5B77079E7515FFC7A724647 0x2E SSTORE PUSH30 0xD3C9F2431764736F6C634300080900330000000000000000000000000000 ",
      "sourceMap": "502:489:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;577:174;;;;;;:::i;:::-;;:::i;:::-;;1668:101:8;;;:::i;1036:85::-;;;:::i;:::-;;;-1:-1:-1;;;;;814:32:80;;;796:51;;784:2;769:18;1036:85:8;;;;;;;1918:198;;;;;;:::i;:::-;;:::i;757:232:49:-;;;;;;:::i;:::-;;:::i;577:174::-;719:10:34;1248:7:8;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:8;;1240:68;;;;-1:-1:-1;;;1240:68:8;;;;;;;:::i;:::-;;;;;;;;;707:37:49::1;-1:-1:-1::0;;;;;707:18:49;::::1;726:9:::0;737:6;707:18:::1;:37::i;:::-;577:174:::0;;;:::o;1668:101:8:-;719:10:34;1248:7:8;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:8;;1240:68;;;;-1:-1:-1;;;1240:68:8;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:8;;1036:85::o;1918:198::-;719:10:34;1248:7:8;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:8;;1240:68;;;;-1:-1:-1;;;1240:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:8;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:8;;2654:2:80;1998:73:8::1;::::0;::::1;2636:21:80::0;2693:2;2673:18;;;2666:30;2732:34;2712:18;;;2705:62;-1:-1:-1;;;2783:18:80;;;2776:36;2829:19;;1998:73:8::1;2452:402:80::0;1998:73:8::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;757:232:49:-;719:10:34;1248:7:8;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:8;;1240:68;;;;-1:-1:-1;;;1240:68:8;;;;;;;:::i;:::-;919:63:49::1;::::0;-1:-1:-1;;;919:63:49;;-1:-1:-1;;;;;919:22:49;::::1;::::0;::::1;::::0;:63:::1;::::0;950:4:::1;::::0;957:9;;968:7;;977:4;;;;919:63:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;757:232:::0;;;;;:::o;701:205:31:-;840:58;;;-1:-1:-1;;;;;3718:32:80;;840:58:31;;;3700:51:80;3767:18;;;;3760:34;;;840:58:31;;;;;;;;;;3673:18:80;;;;840:58:31;;;;;;;;-1:-1:-1;;;;;840:58:31;-1:-1:-1;;;840:58:31;;;813:86;;833:5;;813:19;:86::i;2270:187:8:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:8;;;-1:-1:-1;;;;;;2378:17:8;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;3207:706:31:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:31;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:31;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:31;;4289:2:80;3811:85:31;;;4271:21:80;4328:2;4308:18;;;4301:30;4367:34;4347:18;;;4340:62;-1:-1:-1;;;4418:18:80;;;4411:40;4468:19;;3811:85:31;4087:406:80;3861:223:33;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:33;;4700:2:80;5137:81:33;;;4682:21:80;4739:2;4719:18;;;4712:30;4778:34;4758:18;;;4751:62;-1:-1:-1;;;4829:18:80;;;4822:36;4875:19;;5137:81:33;4498:402:80;5137:81:33;-1:-1:-1;;;;;1465:19:33;;;5228:60;;;;-1:-1:-1;;;5228:60:33;;5107:2:80;5228:60:33;;;5089:21:80;5146:2;5126:18;;;5119:30;5185:31;5165:18;;;5158:59;5234:18;;5228:60:33;4905:353:80;5228:60:33;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:33;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:33:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:33;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:33;;;;;;;;:::i;14:139:80:-;-1:-1:-1;;;;;97:31:80;;87:42;;77:70;;143:1;140;133:12;158:487;250:6;258;266;319:2;307:9;298:7;294:23;290:32;287:52;;;335:1;332;325:12;287:52;374:9;361:23;393:39;426:5;393:39;:::i;:::-;451:5;-1:-1:-1;508:2:80;493:18;;480:32;521:41;480:32;521:41;:::i;:::-;158:487;;581:7;;-1:-1:-1;;;635:2:80;620:18;;;;607:32;;158:487::o;858:255::-;917:6;970:2;958:9;949:7;945:23;941:32;938:52;;;986:1;983;976:12;938:52;1025:9;1012:23;1044:39;1077:5;1044:39;:::i;1118:968::-;1231:6;1239;1247;1255;1263;1316:3;1304:9;1295:7;1291:23;1287:33;1284:53;;;1333:1;1330;1323:12;1284:53;1372:9;1359:23;1391:39;1424:5;1391:39;:::i;:::-;1449:5;-1:-1:-1;1506:2:80;1491:18;;1478:32;1519:41;1478:32;1519:41;:::i;:::-;1579:7;-1:-1:-1;1633:2:80;1618:18;;1605:32;;-1:-1:-1;1688:2:80;1673:18;;1660:32;-1:-1:-1;;;;;1741:14:80;;;1738:34;;;1768:1;1765;1758:12;1738:34;1806:6;1795:9;1791:22;1781:32;;1851:7;1844:4;1840:2;1836:13;1832:27;1822:55;;1873:1;1870;1863:12;1822:55;1913:2;1900:16;1939:2;1931:6;1928:14;1925:34;;;1955:1;1952;1945:12;1925:34;2000:7;1995:2;1986:6;1982:2;1978:15;1974:24;1971:37;1968:57;;;2021:1;2018;2011:12;1968:57;1118:968;;;;-1:-1:-1;1118:968:80;;-1:-1:-1;2052:2:80;2044:11;;2074:6;1118:968;-1:-1:-1;;;1118:968:80:o;2091:356::-;2293:2;2275:21;;;2312:18;;;2305:30;2371:34;2366:2;2351:18;;2344:62;2438:2;2423:18;;2091:356::o;2859:662::-;-1:-1:-1;;;;;3138:15:80;;;3120:34;;3190:15;;3185:2;3170:18;;3163:43;3237:2;3222:18;;3215:34;;;3285:3;3280:2;3265:18;;3258:31;;;3305:19;;3298:35;;;3063:4;3326:6;3376;3100:3;3355:19;;3342:49;3441:1;3435:3;3426:6;3415:9;3411:22;3407:32;3400:43;3511:3;3504:2;3500:7;3495:2;3487:6;3483:15;3479:29;3468:9;3464:45;3460:55;3452:63;;2859:662;;;;;;;;:::o;3805:277::-;3872:6;3925:2;3913:9;3904:7;3900:23;3896:32;3893:52;;;3941:1;3938;3931:12;3893:52;3973:9;3967:16;4026:5;4019:13;4012:21;4005:5;4002:32;3992:60;;4048:1;4045;4038:12;5263:258;5335:1;5345:113;5359:6;5356:1;5353:13;5345:113;;;5435:11;;;5429:18;5416:11;;;5409:39;5381:2;5374:10;5345:113;;;5476:6;5473:1;5470:13;5467:48;;;5511:1;5502:6;5497:3;5493:16;5486:27;5467:48;;5263:258;;;:::o;5526:274::-;5655:3;5693:6;5687:13;5709:53;5755:6;5750:3;5743:4;5735:6;5731:17;5709:53;:::i;:::-;5778:16;;;;;5526:274;-1:-1:-1;;5526:274:80:o;5805:383::-;5954:2;5943:9;5936:21;5917:4;5986:6;5980:13;6029:6;6024:2;6013:9;6009:18;6002:34;6045:66;6104:6;6099:2;6088:9;6084:18;6079:2;6071:6;6067:15;6045:66;:::i;:::-;6172:2;6151:15;-1:-1:-1;;6147:29:80;6132:45;;;;6179:2;6128:54;;5805:383;-1:-1:-1;;5805:383:80:o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "410000",
        "executionCost": "26290",
        "totalCost": "436290"
      },
      "external": {
        "owner()": "2356",
        "recoverERC20(address,address,uint256)": "infinite",
        "recoverERC721(address,address,uint256,bytes)": "infinite",
        "renounceOwnership()": "28159",
        "transferOwnership(address)": "infinite"
      }
    },
    "methodIdentifiers": {
      "owner()": "8da5cb5b",
      "recoverERC20(address,address,uint256)": "1171bda9",
      "recoverERC721(address,address,uint256,bytes)": "fc4e51f6",
      "renounceOwnership()": "715018a6",
      "transferOwnership(address)": "f2fde38b"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"recoverERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MisfundRecovery\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Allows the owner of the token contract extending MisfundRecovery         to recover any ERC20 and ERC721 sent mistakenly to the token         contract address.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@thesis/solidity-contracts/contracts/token/MisfundRecovery.sol\":\"MisfundRecovery\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@thesis/solidity-contracts/contracts/token/MisfundRecovery.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\n/// @title  MisfundRecovery\\n/// @notice Allows the owner of the token contract extending MisfundRecovery\\n///         to recover any ERC20 and ERC721 sent mistakenly to the token\\n///         contract address.\\ncontract MisfundRecovery is Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    function recoverERC20(\\n        IERC20 token,\\n        address recipient,\\n        uint256 amount\\n    ) external onlyOwner {\\n        token.safeTransfer(recipient, amount);\\n    }\\n\\n    function recoverERC721(\\n        IERC721 token,\\n        address recipient,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external onlyOwner {\\n        token.safeTransferFrom(address(this), recipient, tokenId, data);\\n    }\\n}\\n\",\"keccak256\":\"0xbbfea02bf20e2a6df5a497bbc05c7540a3b7c7dfb8b1feeaffef7f6b8ba65d65\",\"license\":\"MIT\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 1489,
        "contract": "@thesis/solidity-contracts/contracts/token/MisfundRecovery.sol:MisfundRecovery",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Allows the owner of the token contract extending MisfundRecovery         to recover any ERC20 and ERC721 sent mistakenly to the token         contract address.",
    "version": 1
  }
}